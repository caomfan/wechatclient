// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: UnifyAuth.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WTLoginImgReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImgSid        *string           `protobuf:"bytes,1,opt,name=imgSid" json:"imgSid,omitempty"`
	ImgCode       *string           `protobuf:"bytes,2,opt,name=imgCode" json:"imgCode,omitempty"`
	ImgEncryptKey *string           `protobuf:"bytes,3,opt,name=imgEncryptKey" json:"imgEncryptKey,omitempty"`
	KSid          *SKBuiltinBufferT `protobuf:"bytes,4,req,name=kSid" json:"kSid,omitempty"`
}

func (x *WTLoginImgReqInfo) Reset() {
	*x = WTLoginImgReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WTLoginImgReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WTLoginImgReqInfo) ProtoMessage() {}

func (x *WTLoginImgReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WTLoginImgReqInfo.ProtoReflect.Descriptor instead.
func (*WTLoginImgReqInfo) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{0}
}

func (x *WTLoginImgReqInfo) GetImgSid() string {
	if x != nil && x.ImgSid != nil {
		return *x.ImgSid
	}
	return ""
}

func (x *WTLoginImgReqInfo) GetImgCode() string {
	if x != nil && x.ImgCode != nil {
		return *x.ImgCode
	}
	return ""
}

func (x *WTLoginImgReqInfo) GetImgEncryptKey() string {
	if x != nil && x.ImgEncryptKey != nil {
		return *x.ImgEncryptKey
	}
	return ""
}

func (x *WTLoginImgReqInfo) GetKSid() *SKBuiltinBufferT {
	if x != nil {
		return x.KSid
	}
	return nil
}

type WTLoginImgRespInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImgEncryptKey *string           `protobuf:"bytes,1,opt,name=imgEncryptKey" json:"imgEncryptKey,omitempty"`
	KSid          *SKBuiltinBufferT `protobuf:"bytes,2,req,name=kSid" json:"kSid,omitempty"`
	ImgSid        *string           `protobuf:"bytes,3,opt,name=imgSid" json:"imgSid,omitempty"`
	ImgBuf        *SKBuiltinBufferT `protobuf:"bytes,4,req,name=imgBuf" json:"imgBuf,omitempty"`
}

func (x *WTLoginImgRespInfo) Reset() {
	*x = WTLoginImgRespInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WTLoginImgRespInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WTLoginImgRespInfo) ProtoMessage() {}

func (x *WTLoginImgRespInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WTLoginImgRespInfo.ProtoReflect.Descriptor instead.
func (*WTLoginImgRespInfo) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{1}
}

func (x *WTLoginImgRespInfo) GetImgEncryptKey() string {
	if x != nil && x.ImgEncryptKey != nil {
		return *x.ImgEncryptKey
	}
	return ""
}

func (x *WTLoginImgRespInfo) GetKSid() *SKBuiltinBufferT {
	if x != nil {
		return x.KSid
	}
	return nil
}

func (x *WTLoginImgRespInfo) GetImgSid() string {
	if x != nil && x.ImgSid != nil {
		return *x.ImgSid
	}
	return ""
}

func (x *WTLoginImgRespInfo) GetImgBuf() *SKBuiltinBufferT {
	if x != nil {
		return x.ImgBuf
	}
	return nil
}

type WxVerifyCodeReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerifySignature *string `protobuf:"bytes,1,opt,name=verifySignature" json:"verifySignature,omitempty"`
	VerifyContent   *string `protobuf:"bytes,2,opt,name=verifyContent" json:"verifyContent,omitempty"`
}

func (x *WxVerifyCodeReqInfo) Reset() {
	*x = WxVerifyCodeReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxVerifyCodeReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxVerifyCodeReqInfo) ProtoMessage() {}

func (x *WxVerifyCodeReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxVerifyCodeReqInfo.ProtoReflect.Descriptor instead.
func (*WxVerifyCodeReqInfo) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{2}
}

func (x *WxVerifyCodeReqInfo) GetVerifySignature() string {
	if x != nil && x.VerifySignature != nil {
		return *x.VerifySignature
	}
	return ""
}

func (x *WxVerifyCodeReqInfo) GetVerifyContent() string {
	if x != nil && x.VerifyContent != nil {
		return *x.VerifyContent
	}
	return ""
}

type WxVerifyCodeRespInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerifySignature *string           `protobuf:"bytes,1,opt,name=verifySignature" json:"verifySignature,omitempty"`
	VerifyBuff      *SKBuiltinBufferT `protobuf:"bytes,2,req,name=verifyBuff" json:"verifyBuff,omitempty"`
}

func (x *WxVerifyCodeRespInfo) Reset() {
	*x = WxVerifyCodeRespInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxVerifyCodeRespInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxVerifyCodeRespInfo) ProtoMessage() {}

func (x *WxVerifyCodeRespInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxVerifyCodeRespInfo.ProtoReflect.Descriptor instead.
func (*WxVerifyCodeRespInfo) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{3}
}

func (x *WxVerifyCodeRespInfo) GetVerifySignature() string {
	if x != nil && x.VerifySignature != nil {
		return *x.VerifySignature
	}
	return ""
}

func (x *WxVerifyCodeRespInfo) GetVerifyBuff() *SKBuiltinBufferT {
	if x != nil {
		return x.VerifyBuff
	}
	return nil
}

type BaseAuthReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WtLoginReqBuff      *SKBuiltinBufferT    `protobuf:"bytes,1,opt,name=wtLoginReqBuff" json:"wtLoginReqBuff,omitempty"`
	WtLoginImgReqInfo   *WTLoginImgReqInfo   `protobuf:"bytes,2,opt,name=wtLoginImgReqInfo" json:"wtLoginImgReqInfo,omitempty"`
	WxVerifyCodeReqInfo *WxVerifyCodeReqInfo `protobuf:"bytes,3,opt,name=wxVerifyCodeReqInfo" json:"wxVerifyCodeReqInfo,omitempty"`
	CliDBEncryptKey     *SKBuiltinBufferT    `protobuf:"bytes,4,opt,name=cliDBEncryptKey" json:"cliDBEncryptKey,omitempty"`
	CliDBEncryptInfo    *SKBuiltinBufferT    `protobuf:"bytes,5,opt,name=cliDBEncryptInfo" json:"cliDBEncryptInfo,omitempty"`
	AuthReqFlag         *uint32              `protobuf:"varint,6,opt,name=authReqFlag" json:"authReqFlag,omitempty"`
	AuthTicket          *string              `protobuf:"bytes,7,opt,name=authTicket" json:"authTicket,omitempty"`
}

func (x *BaseAuthReqInfo) Reset() {
	*x = BaseAuthReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAuthReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAuthReqInfo) ProtoMessage() {}

func (x *BaseAuthReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAuthReqInfo.ProtoReflect.Descriptor instead.
func (*BaseAuthReqInfo) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{4}
}

func (x *BaseAuthReqInfo) GetWtLoginReqBuff() *SKBuiltinBufferT {
	if x != nil {
		return x.WtLoginReqBuff
	}
	return nil
}

func (x *BaseAuthReqInfo) GetWtLoginImgReqInfo() *WTLoginImgReqInfo {
	if x != nil {
		return x.WtLoginImgReqInfo
	}
	return nil
}

func (x *BaseAuthReqInfo) GetWxVerifyCodeReqInfo() *WxVerifyCodeReqInfo {
	if x != nil {
		return x.WxVerifyCodeReqInfo
	}
	return nil
}

func (x *BaseAuthReqInfo) GetCliDBEncryptKey() *SKBuiltinBufferT {
	if x != nil {
		return x.CliDBEncryptKey
	}
	return nil
}

func (x *BaseAuthReqInfo) GetCliDBEncryptInfo() *SKBuiltinBufferT {
	if x != nil {
		return x.CliDBEncryptInfo
	}
	return nil
}

func (x *BaseAuthReqInfo) GetAuthReqFlag() uint32 {
	if x != nil && x.AuthReqFlag != nil {
		return *x.AuthReqFlag
	}
	return 0
}

func (x *BaseAuthReqInfo) GetAuthTicket() string {
	if x != nil && x.AuthTicket != nil {
		return *x.AuthTicket
	}
	return ""
}

type ManualAuthRsaReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomEncryKey *SKBuiltinBufferT `protobuf:"bytes,1,req,name=randomEncryKey" json:"randomEncryKey,omitempty"`
	CliPubECDHKey  *ECDHKey          `protobuf:"bytes,2,req,name=cliPubECDHKey" json:"cliPubECDHKey,omitempty"`
	Username       *string           `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Pwd            *string           `protobuf:"bytes,4,opt,name=pwd" json:"pwd,omitempty"`
	Pwd2           *string           `protobuf:"bytes,5,opt,name=pwd2" json:"pwd2,omitempty"`
}

func (x *ManualAuthRsaReqData) Reset() {
	*x = ManualAuthRsaReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualAuthRsaReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualAuthRsaReqData) ProtoMessage() {}

func (x *ManualAuthRsaReqData) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualAuthRsaReqData.ProtoReflect.Descriptor instead.
func (*ManualAuthRsaReqData) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{5}
}

func (x *ManualAuthRsaReqData) GetRandomEncryKey() *SKBuiltinBufferT {
	if x != nil {
		return x.RandomEncryKey
	}
	return nil
}

func (x *ManualAuthRsaReqData) GetCliPubECDHKey() *ECDHKey {
	if x != nil {
		return x.CliPubECDHKey
	}
	return nil
}

func (x *ManualAuthRsaReqData) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *ManualAuthRsaReqData) GetPwd() string {
	if x != nil && x.Pwd != nil {
		return *x.Pwd
	}
	return ""
}

func (x *ManualAuthRsaReqData) GetPwd2() string {
	if x != nil && x.Pwd2 != nil {
		return *x.Pwd2
	}
	return ""
}

type ManualAuthAesReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest    *BaseRequest      `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	BaseReqInfo    *BaseAuthReqInfo  `protobuf:"bytes,2,opt,name=baseReqInfo" json:"baseReqInfo,omitempty"`
	Imei           *string           `protobuf:"bytes,3,opt,name=imei" json:"imei,omitempty"`
	SoftType       *string           `protobuf:"bytes,4,opt,name=softType" json:"softType,omitempty"`
	BuiltinIPSeq   *uint32           `protobuf:"varint,5,req,name=builtinIPSeq" json:"builtinIPSeq,omitempty"`
	ClientSeqID    *string           `protobuf:"bytes,6,opt,name=clientSeqID" json:"clientSeqID,omitempty"`
	Signature      *string           `protobuf:"bytes,7,opt,name=signature" json:"signature,omitempty"`
	DeviceName     *string           `protobuf:"bytes,8,opt,name=deviceName" json:"deviceName,omitempty"`
	DeviceType     *string           `protobuf:"bytes,9,opt,name=deviceType" json:"deviceType,omitempty"`
	Language       *string           `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	Timezone       *string           `protobuf:"bytes,11,opt,name=timezone" json:"timezone,omitempty"`
	Channel        *int32            `protobuf:"varint,13,opt,name=channel" json:"channel,omitempty"`
	Timestamp      *uint32           `protobuf:"varint,14,opt,name=timestamp" json:"timestamp,omitempty"`
	DeviceBrand    *string           `protobuf:"bytes,15,opt,name=deviceBrand" json:"deviceBrand,omitempty"`
	DeviceModel    *string           `protobuf:"bytes,16,opt,name=deviceModel" json:"deviceModel,omitempty"`
	OsType         *string           `protobuf:"bytes,17,opt,name=osType" json:"osType,omitempty"`
	RealCountry    *string           `protobuf:"bytes,18,opt,name=realCountry" json:"realCountry,omitempty"`
	BundleID       *string           `protobuf:"bytes,19,opt,name=bundleID" json:"bundleID,omitempty"`
	AdSource       *string           `protobuf:"bytes,20,opt,name=adSource" json:"adSource,omitempty"`
	IPhoneVer      *string           `protobuf:"bytes,21,opt,name=iPhoneVer" json:"iPhoneVer,omitempty"`
	InputType      *uint32           `protobuf:"varint,22,req,name=inputType" json:"inputType,omitempty"`
	ClientCheckDat *SKBuiltinBufferT `protobuf:"bytes,23,opt,name=clientCheckDat" json:"clientCheckDat,omitempty"`
}

func (x *ManualAuthAesReqData) Reset() {
	*x = ManualAuthAesReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualAuthAesReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualAuthAesReqData) ProtoMessage() {}

func (x *ManualAuthAesReqData) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualAuthAesReqData.ProtoReflect.Descriptor instead.
func (*ManualAuthAesReqData) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{6}
}

func (x *ManualAuthAesReqData) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ManualAuthAesReqData) GetBaseReqInfo() *BaseAuthReqInfo {
	if x != nil {
		return x.BaseReqInfo
	}
	return nil
}

func (x *ManualAuthAesReqData) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *ManualAuthAesReqData) GetSoftType() string {
	if x != nil && x.SoftType != nil {
		return *x.SoftType
	}
	return ""
}

func (x *ManualAuthAesReqData) GetBuiltinIPSeq() uint32 {
	if x != nil && x.BuiltinIPSeq != nil {
		return *x.BuiltinIPSeq
	}
	return 0
}

func (x *ManualAuthAesReqData) GetClientSeqID() string {
	if x != nil && x.ClientSeqID != nil {
		return *x.ClientSeqID
	}
	return ""
}

func (x *ManualAuthAesReqData) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *ManualAuthAesReqData) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *ManualAuthAesReqData) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *ManualAuthAesReqData) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *ManualAuthAesReqData) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *ManualAuthAesReqData) GetChannel() int32 {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return 0
}

func (x *ManualAuthAesReqData) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *ManualAuthAesReqData) GetDeviceBrand() string {
	if x != nil && x.DeviceBrand != nil {
		return *x.DeviceBrand
	}
	return ""
}

func (x *ManualAuthAesReqData) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *ManualAuthAesReqData) GetOsType() string {
	if x != nil && x.OsType != nil {
		return *x.OsType
	}
	return ""
}

func (x *ManualAuthAesReqData) GetRealCountry() string {
	if x != nil && x.RealCountry != nil {
		return *x.RealCountry
	}
	return ""
}

func (x *ManualAuthAesReqData) GetBundleID() string {
	if x != nil && x.BundleID != nil {
		return *x.BundleID
	}
	return ""
}

func (x *ManualAuthAesReqData) GetAdSource() string {
	if x != nil && x.AdSource != nil {
		return *x.AdSource
	}
	return ""
}

func (x *ManualAuthAesReqData) GetIPhoneVer() string {
	if x != nil && x.IPhoneVer != nil {
		return *x.IPhoneVer
	}
	return ""
}

func (x *ManualAuthAesReqData) GetInputType() uint32 {
	if x != nil && x.InputType != nil {
		return *x.InputType
	}
	return 0
}

func (x *ManualAuthAesReqData) GetClientCheckDat() *SKBuiltinBufferT {
	if x != nil {
		return x.ClientCheckDat
	}
	return nil
}

type ManualAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RsaReqData *ManualAuthRsaReqData `protobuf:"bytes,1,req,name=rsaReqData" json:"rsaReqData,omitempty"`
	AesReqData *ManualAuthAesReqData `protobuf:"bytes,2,req,name=aesReqData" json:"aesReqData,omitempty"`
}

func (x *ManualAuthRequest) Reset() {
	*x = ManualAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualAuthRequest) ProtoMessage() {}

func (x *ManualAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualAuthRequest.ProtoReflect.Descriptor instead.
func (*ManualAuthRequest) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{7}
}

func (x *ManualAuthRequest) GetRsaReqData() *ManualAuthRsaReqData {
	if x != nil {
		return x.RsaReqData
	}
	return nil
}

func (x *ManualAuthRequest) GetAesReqData() *ManualAuthAesReqData {
	if x != nil {
		return x.AesReqData
	}
	return nil
}

type AutoAuthRsaReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AesEncryptKey *SKBuiltinBufferT `protobuf:"bytes,2,req,name=aesEncryptKey" json:"aesEncryptKey,omitempty"`
	CliPubEcdhkey *ECDHKey          `protobuf:"bytes,3,opt,name=cliPubEcdhkey" json:"cliPubEcdhkey,omitempty"`
}

func (x *AutoAuthRsaReqData) Reset() {
	*x = AutoAuthRsaReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoAuthRsaReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoAuthRsaReqData) ProtoMessage() {}

func (x *AutoAuthRsaReqData) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoAuthRsaReqData.ProtoReflect.Descriptor instead.
func (*AutoAuthRsaReqData) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{8}
}

func (x *AutoAuthRsaReqData) GetAesEncryptKey() *SKBuiltinBufferT {
	if x != nil {
		return x.AesEncryptKey
	}
	return nil
}

func (x *AutoAuthRsaReqData) GetCliPubEcdhkey() *ECDHKey {
	if x != nil {
		return x.CliPubEcdhkey
	}
	return nil
}

type AutoAuthKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptKey *SKBuiltinBufferT `protobuf:"bytes,1,req,name=encryptKey" json:"encryptKey,omitempty"`
	Key        *SKBuiltinBufferT `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
}

func (x *AutoAuthKey) Reset() {
	*x = AutoAuthKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoAuthKey) ProtoMessage() {}

func (x *AutoAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoAuthKey.ProtoReflect.Descriptor instead.
func (*AutoAuthKey) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{9}
}

func (x *AutoAuthKey) GetEncryptKey() *SKBuiltinBufferT {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *AutoAuthKey) GetKey() *SKBuiltinBufferT {
	if x != nil {
		return x.Key
	}
	return nil
}

type AutoAuthAesReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest  *BaseRequest      `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	BaseReqInfo  *BaseAuthReqInfo  `protobuf:"bytes,2,opt,name=baseReqInfo" json:"baseReqInfo,omitempty"`
	AutoAuthKey  *SKBuiltinBufferT `protobuf:"bytes,3,req,name=autoAuthKey" json:"autoAuthKey,omitempty"`
	Imei         *string           `protobuf:"bytes,4,opt,name=imei" json:"imei,omitempty"`
	SoftType     *string           `protobuf:"bytes,5,opt,name=softType" json:"softType,omitempty"`
	BuiltinIpSeq *uint32           `protobuf:"varint,6,req,name=builtinIpSeq" json:"builtinIpSeq,omitempty"`
	ClientSeqId  *string           `protobuf:"bytes,7,opt,name=clientSeqId" json:"clientSeqId,omitempty"`
	Signature    *string           `protobuf:"bytes,8,opt,name=signature" json:"signature,omitempty"`
	DeviceName   *string           `protobuf:"bytes,9,opt,name=deviceName" json:"deviceName,omitempty"`
	DeviceType   *string           `protobuf:"bytes,10,opt,name=deviceType" json:"deviceType,omitempty"`
	Language     *string           `protobuf:"bytes,11,opt,name=language" json:"language,omitempty"`
	TimeZone     *string           `protobuf:"bytes,12,opt,name=timeZone" json:"timeZone,omitempty"`
}

func (x *AutoAuthAesReqData) Reset() {
	*x = AutoAuthAesReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoAuthAesReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoAuthAesReqData) ProtoMessage() {}

func (x *AutoAuthAesReqData) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoAuthAesReqData.ProtoReflect.Descriptor instead.
func (*AutoAuthAesReqData) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{10}
}

func (x *AutoAuthAesReqData) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *AutoAuthAesReqData) GetBaseReqInfo() *BaseAuthReqInfo {
	if x != nil {
		return x.BaseReqInfo
	}
	return nil
}

func (x *AutoAuthAesReqData) GetAutoAuthKey() *SKBuiltinBufferT {
	if x != nil {
		return x.AutoAuthKey
	}
	return nil
}

func (x *AutoAuthAesReqData) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *AutoAuthAesReqData) GetSoftType() string {
	if x != nil && x.SoftType != nil {
		return *x.SoftType
	}
	return ""
}

func (x *AutoAuthAesReqData) GetBuiltinIpSeq() uint32 {
	if x != nil && x.BuiltinIpSeq != nil {
		return *x.BuiltinIpSeq
	}
	return 0
}

func (x *AutoAuthAesReqData) GetClientSeqId() string {
	if x != nil && x.ClientSeqId != nil {
		return *x.ClientSeqId
	}
	return ""
}

func (x *AutoAuthAesReqData) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *AutoAuthAesReqData) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *AutoAuthAesReqData) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *AutoAuthAesReqData) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *AutoAuthAesReqData) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

type AutoAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RsaReqData *AutoAuthRsaReqData `protobuf:"bytes,1,req,name=rsaReqData" json:"rsaReqData,omitempty"`
	AesReqData *AutoAuthAesReqData `protobuf:"bytes,2,req,name=aesReqData" json:"aesReqData,omitempty"`
}

func (x *AutoAuthRequest) Reset() {
	*x = AutoAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoAuthRequest) ProtoMessage() {}

func (x *AutoAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoAuthRequest.ProtoReflect.Descriptor instead.
func (*AutoAuthRequest) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{11}
}

func (x *AutoAuthRequest) GetRsaReqData() *AutoAuthRsaReqData {
	if x != nil {
		return x.RsaReqData
	}
	return nil
}

func (x *AutoAuthRequest) GetAesReqData() *AutoAuthAesReqData {
	if x != nil {
		return x.AesReqData
	}
	return nil
}

type AuthSectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin                  *uint32               `protobuf:"varint,1,req,name=uin" json:"uin,omitempty"`
	SvrPubECDHKey        *ECDHKey              `protobuf:"bytes,2,req,name=svrPubECDHKey" json:"svrPubECDHKey,omitempty"`
	SessionKey           *SKBuiltinBufferT     `protobuf:"bytes,3,req,name=sessionKey" json:"sessionKey,omitempty"`
	AutoAuthKey          *SKBuiltinBufferT     `protobuf:"bytes,4,req,name=autoAuthKey" json:"autoAuthKey,omitempty"`
	WtLoginRspBuffFlag   *uint32               `protobuf:"varint,5,req,name=wtLoginRspBuffFlag" json:"wtLoginRspBuffFlag,omitempty"`
	WtLoginRspBuff       *SKBuiltinBufferT     `protobuf:"bytes,6,opt,name=wtLoginRspBuff" json:"wtLoginRspBuff,omitempty"`
	WtLoginImgRespInfo   *WTLoginImgRespInfo   `protobuf:"bytes,7,opt,name=wtLoginImgRespInfo" json:"wtLoginImgRespInfo,omitempty"`
	WxVerifyCodeRespInfo *WxVerifyCodeRespInfo `protobuf:"bytes,8,opt,name=wxVerifyCodeRespInfo" json:"wxVerifyCodeRespInfo,omitempty"`
	CliDBEncryptKey      *SKBuiltinBufferT     `protobuf:"bytes,9,opt,name=cliDBEncryptKey" json:"cliDBEncryptKey,omitempty"`
	CliDBEncryptInfo     *SKBuiltinBufferT     `protobuf:"bytes,10,opt,name=cliDBEncryptInfo" json:"cliDBEncryptInfo,omitempty"`
	AuthKey              *string               `protobuf:"bytes,11,opt,name=authKey" json:"authKey,omitempty"`
	A2Key                *SKBuiltinBufferT     `protobuf:"bytes,12,opt,name=a2Key" json:"a2Key,omitempty"`
	ApplyBetaUrl         *string               `protobuf:"bytes,14,opt,name=applyBetaUrl" json:"applyBetaUrl,omitempty"`
	ShowStyle            *ShowStyleKey         `protobuf:"bytes,15,opt,name=showStyle" json:"showStyle,omitempty"`
	AuthTicket           *string               `protobuf:"bytes,16,opt,name=authTicket" json:"authTicket,omitempty"`
	NewVersion           *uint32               `protobuf:"varint,17,opt,name=newVersion" json:"newVersion,omitempty"`
	UpdateFlag           *uint32               `protobuf:"varint,18,opt,name=updateFlag" json:"updateFlag,omitempty"`
	AuthResultFlag       *uint32               `protobuf:"varint,19,opt,name=authResultFlag" json:"authResultFlag,omitempty"`
	FsUrl                *string               `protobuf:"bytes,20,opt,name=fsUrl" json:"fsUrl,omitempty"`
}

func (x *AuthSectResp) Reset() {
	*x = AuthSectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSectResp) ProtoMessage() {}

func (x *AuthSectResp) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSectResp.ProtoReflect.Descriptor instead.
func (*AuthSectResp) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{12}
}

func (x *AuthSectResp) GetUin() uint32 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *AuthSectResp) GetSvrPubECDHKey() *ECDHKey {
	if x != nil {
		return x.SvrPubECDHKey
	}
	return nil
}

func (x *AuthSectResp) GetSessionKey() *SKBuiltinBufferT {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *AuthSectResp) GetAutoAuthKey() *SKBuiltinBufferT {
	if x != nil {
		return x.AutoAuthKey
	}
	return nil
}

func (x *AuthSectResp) GetWtLoginRspBuffFlag() uint32 {
	if x != nil && x.WtLoginRspBuffFlag != nil {
		return *x.WtLoginRspBuffFlag
	}
	return 0
}

func (x *AuthSectResp) GetWtLoginRspBuff() *SKBuiltinBufferT {
	if x != nil {
		return x.WtLoginRspBuff
	}
	return nil
}

func (x *AuthSectResp) GetWtLoginImgRespInfo() *WTLoginImgRespInfo {
	if x != nil {
		return x.WtLoginImgRespInfo
	}
	return nil
}

func (x *AuthSectResp) GetWxVerifyCodeRespInfo() *WxVerifyCodeRespInfo {
	if x != nil {
		return x.WxVerifyCodeRespInfo
	}
	return nil
}

func (x *AuthSectResp) GetCliDBEncryptKey() *SKBuiltinBufferT {
	if x != nil {
		return x.CliDBEncryptKey
	}
	return nil
}

func (x *AuthSectResp) GetCliDBEncryptInfo() *SKBuiltinBufferT {
	if x != nil {
		return x.CliDBEncryptInfo
	}
	return nil
}

func (x *AuthSectResp) GetAuthKey() string {
	if x != nil && x.AuthKey != nil {
		return *x.AuthKey
	}
	return ""
}

func (x *AuthSectResp) GetA2Key() *SKBuiltinBufferT {
	if x != nil {
		return x.A2Key
	}
	return nil
}

func (x *AuthSectResp) GetApplyBetaUrl() string {
	if x != nil && x.ApplyBetaUrl != nil {
		return *x.ApplyBetaUrl
	}
	return ""
}

func (x *AuthSectResp) GetShowStyle() *ShowStyleKey {
	if x != nil {
		return x.ShowStyle
	}
	return nil
}

func (x *AuthSectResp) GetAuthTicket() string {
	if x != nil && x.AuthTicket != nil {
		return *x.AuthTicket
	}
	return ""
}

func (x *AuthSectResp) GetNewVersion() uint32 {
	if x != nil && x.NewVersion != nil {
		return *x.NewVersion
	}
	return 0
}

func (x *AuthSectResp) GetUpdateFlag() uint32 {
	if x != nil && x.UpdateFlag != nil {
		return *x.UpdateFlag
	}
	return 0
}

func (x *AuthSectResp) GetAuthResultFlag() uint32 {
	if x != nil && x.AuthResultFlag != nil {
		return *x.AuthResultFlag
	}
	return 0
}

func (x *AuthSectResp) GetFsUrl() string {
	if x != nil && x.FsUrl != nil {
		return *x.FsUrl
	}
	return ""
}

type AcctSectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Nickname         *string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	BindUin          *uint32 `protobuf:"varint,3,req,name=bindUin" json:"bindUin,omitempty"`
	BindEmail        *string `protobuf:"bytes,4,opt,name=bindEmail" json:"bindEmail,omitempty"`
	BindMobile       *string `protobuf:"bytes,5,opt,name=bindMobile" json:"bindMobile,omitempty"`
	Alias            *string `protobuf:"bytes,6,opt,name=alias" json:"alias,omitempty"`
	Status           *uint32 `protobuf:"varint,8,req,name=status" json:"status,omitempty"`
	PluginFlag       *uint32 `protobuf:"varint,9,opt,name=pluginFlag" json:"pluginFlag,omitempty"`
	RegType          *uint32 `protobuf:"varint,10,opt,name=regType" json:"regType,omitempty"`
	DeviceInfoXml    *string `protobuf:"bytes,11,opt,name=deviceInfoXml" json:"deviceInfoXml,omitempty"`
	SafeDevice       *uint32 `protobuf:"varint,12,opt,name=safeDevice" json:"safeDevice,omitempty"`
	OfficialUserName *string `protobuf:"bytes,13,opt,name=officialUserName" json:"officialUserName,omitempty"`
	OfficialNickName *string `protobuf:"bytes,14,opt,name=officialNickName" json:"officialNickName,omitempty"`
	PushMailStatus   *uint32 `protobuf:"varint,15,opt,name=pushMailStatus" json:"pushMailStatus,omitempty"`
	FsUrl            *string `protobuf:"bytes,16,opt,name=fsUrl" json:"fsUrl,omitempty"`
}

func (x *AcctSectResp) Reset() {
	*x = AcctSectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcctSectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcctSectResp) ProtoMessage() {}

func (x *AcctSectResp) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcctSectResp.ProtoReflect.Descriptor instead.
func (*AcctSectResp) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{13}
}

func (x *AcctSectResp) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *AcctSectResp) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *AcctSectResp) GetBindUin() uint32 {
	if x != nil && x.BindUin != nil {
		return *x.BindUin
	}
	return 0
}

func (x *AcctSectResp) GetBindEmail() string {
	if x != nil && x.BindEmail != nil {
		return *x.BindEmail
	}
	return ""
}

func (x *AcctSectResp) GetBindMobile() string {
	if x != nil && x.BindMobile != nil {
		return *x.BindMobile
	}
	return ""
}

func (x *AcctSectResp) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *AcctSectResp) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *AcctSectResp) GetPluginFlag() uint32 {
	if x != nil && x.PluginFlag != nil {
		return *x.PluginFlag
	}
	return 0
}

func (x *AcctSectResp) GetRegType() uint32 {
	if x != nil && x.RegType != nil {
		return *x.RegType
	}
	return 0
}

func (x *AcctSectResp) GetDeviceInfoXml() string {
	if x != nil && x.DeviceInfoXml != nil {
		return *x.DeviceInfoXml
	}
	return ""
}

func (x *AcctSectResp) GetSafeDevice() uint32 {
	if x != nil && x.SafeDevice != nil {
		return *x.SafeDevice
	}
	return 0
}

func (x *AcctSectResp) GetOfficialUserName() string {
	if x != nil && x.OfficialUserName != nil {
		return *x.OfficialUserName
	}
	return ""
}

func (x *AcctSectResp) GetOfficialNickName() string {
	if x != nil && x.OfficialNickName != nil {
		return *x.OfficialNickName
	}
	return ""
}

func (x *AcctSectResp) GetPushMailStatus() uint32 {
	if x != nil && x.PushMailStatus != nil {
		return *x.PushMailStatus
	}
	return 0
}

func (x *AcctSectResp) GetFsUrl() string {
	if x != nil && x.FsUrl != nil {
		return *x.FsUrl
	}
	return ""
}

type NetworkSectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewHostList    *HostList       `protobuf:"bytes,1,opt,name=newHostList" json:"newHostList,omitempty"`
	NetworkControl *NetworkControl `protobuf:"bytes,2,opt,name=networkControl" json:"networkControl,omitempty"`
	BuiltinIPList  *BuiltinIPList  `protobuf:"bytes,3,opt,name=builtinIPList" json:"builtinIPList,omitempty"`
}

func (x *NetworkSectResp) Reset() {
	*x = NetworkSectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkSectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSectResp) ProtoMessage() {}

func (x *NetworkSectResp) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSectResp.ProtoReflect.Descriptor instead.
func (*NetworkSectResp) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{14}
}

func (x *NetworkSectResp) GetNewHostList() *HostList {
	if x != nil {
		return x.NewHostList
	}
	return nil
}

func (x *NetworkSectResp) GetNetworkControl() *NetworkControl {
	if x != nil {
		return x.NetworkControl
	}
	return nil
}

func (x *NetworkSectResp) GetBuiltinIPList() *BuiltinIPList {
	if x != nil {
		return x.BuiltinIPList
	}
	return nil
}

type UnifyAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse      *BaseResponse    `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	UnifyAuthSectFlag *uint32          `protobuf:"varint,2,opt,name=unifyAuthSectFlag" json:"unifyAuthSectFlag,omitempty"`
	AuthSectResp      *AuthSectResp    `protobuf:"bytes,3,opt,name=authSectResp" json:"authSectResp,omitempty"`
	AcctSectResp      *AcctSectResp    `protobuf:"bytes,4,opt,name=acctSectResp" json:"acctSectResp,omitempty"`
	NetworkSectResp   *NetworkSectResp `protobuf:"bytes,5,opt,name=networkSectResp" json:"networkSectResp,omitempty"`
}

func (x *UnifyAuthResponse) Reset() {
	*x = UnifyAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnifyAuth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnifyAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifyAuthResponse) ProtoMessage() {}

func (x *UnifyAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UnifyAuth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifyAuthResponse.ProtoReflect.Descriptor instead.
func (*UnifyAuthResponse) Descriptor() ([]byte, []int) {
	return file_UnifyAuth_proto_rawDescGZIP(), []int{15}
}

func (x *UnifyAuthResponse) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UnifyAuthResponse) GetUnifyAuthSectFlag() uint32 {
	if x != nil && x.UnifyAuthSectFlag != nil {
		return *x.UnifyAuthSectFlag
	}
	return 0
}

func (x *UnifyAuthResponse) GetAuthSectResp() *AuthSectResp {
	if x != nil {
		return x.AuthSectResp
	}
	return nil
}

func (x *UnifyAuthResponse) GetAcctSectResp() *AcctSectResp {
	if x != nil {
		return x.AcctSectResp
	}
	return nil
}

func (x *UnifyAuthResponse) GetNetworkSectResp() *NetworkSectResp {
	if x != nil {
		return x.NetworkSectResp
	}
	return nil
}

var File_UnifyAuth_proto protoreflect.FileDescriptor

var file_UnifyAuth_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x66, 0x79, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x57, 0x54, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6d, 0x67, 0x53, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67,
	0x53, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6d, 0x67, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x67, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x6b, 0x53, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x04, 0x6b, 0x53, 0x69, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x12,
	0x57, 0x54, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6d, 0x67, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x67, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x6b, 0x53, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x04, 0x6b, 0x53, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x42,
	0x75, 0x66, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x06, 0x69, 0x6d,
	0x67, 0x42, 0x75, 0x66, 0x22, 0x65, 0x0a, 0x13, 0x57, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x14, 0x57,
	0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x75, 0x66, 0x66, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x75, 0x66,
	0x66, 0x22, 0x97, 0x03, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0e, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x42, 0x75, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x52, 0x0e, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x42, 0x75, 0x66,
	0x66, 0x12, 0x40, 0x0a, 0x11, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52,
	0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x57,
	0x54, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x11, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x13, 0x77, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x57, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x77, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0f, 0x63,
	0x6c, 0x69, 0x44, 0x42, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x44, 0x42, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x10, 0x63, 0x6c, 0x69,
	0x44, 0x42, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x44, 0x42, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x14,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x73, 0x61, 0x52, 0x65, 0x71,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53,
	0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74,
	0x52, 0x0e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x12, 0x2e, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x50, 0x75, 0x62, 0x45, 0x43, 0x44, 0x48, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x43, 0x44, 0x48, 0x4b, 0x65,
	0x79, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x50, 0x75, 0x62, 0x45, 0x43, 0x44, 0x48, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x77, 0x64, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x77,
	0x64, 0x32, 0x22, 0xec, 0x05, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x75, 0x74,
	0x68, 0x41, 0x65, 0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6d, 0x65, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x50, 0x53, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x50,
	0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x71, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x73, 0x61, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x73, 0x61, 0x52, 0x65, 0x71, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x72, 0x73, 0x61, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35,
	0x0a, 0x0a, 0x61, 0x65, 0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x41,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x73, 0x61, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x0d, 0x61,
	0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0d, 0x61, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x50, 0x75, 0x62, 0x45,
	0x63, 0x64, 0x68, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45,
	0x43, 0x44, 0x48, 0x4b, 0x65, 0x79, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x50, 0x75, 0x62, 0x45, 0x63,
	0x64, 0x68, 0x6b, 0x65, 0x79, 0x22, 0x67, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x74,
	0x68, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xba,
	0x03, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x6f, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6d, 0x65, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x70, 0x53, 0x65, 0x71, 0x18,
	0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x70,
	0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x7b, 0x0a, 0x0f, 0x41,
	0x75, 0x74, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x0a, 0x72, 0x73, 0x61, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x73, 0x61,
	0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x73, 0x61, 0x52, 0x65, 0x71, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x65, 0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75,
	0x74, 0x68, 0x41, 0x65, 0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0xe7, 0x06, 0x0a, 0x0c, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x0d, 0x73,
	0x76, 0x72, 0x50, 0x75, 0x62, 0x45, 0x43, 0x44, 0x48, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x43, 0x44, 0x48, 0x4b, 0x65, 0x79, 0x52, 0x0d, 0x73, 0x76,
	0x72, 0x50, 0x75, 0x62, 0x45, 0x43, 0x44, 0x48, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x34, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x75,
	0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x42, 0x75, 0x66, 0x66, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x12, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x42, 0x75, 0x66,
	0x66, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x3a, 0x0a, 0x0e, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x42, 0x75, 0x66, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x52, 0x0e, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x42, 0x75, 0x66,
	0x66, 0x12, 0x43, 0x0a, 0x12, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x57, 0x54, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x12, 0x77, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x14, 0x77, 0x78, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x57, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x77, 0x78, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3c, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x44, 0x42, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0f,
	0x63, 0x6c, 0x69, 0x44, 0x42, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x3e, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x44, 0x42, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75,
	0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x10, 0x63,
	0x6c, 0x69, 0x44, 0x42, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x32, 0x4b,
	0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x05, 0x61, 0x32,
	0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x65, 0x74, 0x61,
	0x55, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x42, 0x65, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x73, 0x55,
	0x72, 0x6c, 0x22, 0xe2, 0x03, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x74, 0x53, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69,
	0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x58, 0x6d, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x58, 0x6d,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x66, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x61, 0x66, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x73,
	0x68, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x73, 0x55, 0x72, 0x6c, 0x22, 0xad, 0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0b, 0x6e,
	0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x6e, 0x65, 0x77,
	0x48, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x12, 0x34, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x50, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x66,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x66, 0x79, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x6e, 0x69,
	0x66, 0x79, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x31,
	0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x74, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x63, 0x63, 0x74, 0x53, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x74, 0x53, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_UnifyAuth_proto_rawDescOnce sync.Once
	file_UnifyAuth_proto_rawDescData = file_UnifyAuth_proto_rawDesc
)

func file_UnifyAuth_proto_rawDescGZIP() []byte {
	file_UnifyAuth_proto_rawDescOnce.Do(func() {
		file_UnifyAuth_proto_rawDescData = protoimpl.X.CompressGZIP(file_UnifyAuth_proto_rawDescData)
	})
	return file_UnifyAuth_proto_rawDescData
}

var file_UnifyAuth_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_UnifyAuth_proto_goTypes = []interface{}{
	(*WTLoginImgReqInfo)(nil),    // 0: WTLoginImgReqInfo
	(*WTLoginImgRespInfo)(nil),   // 1: WTLoginImgRespInfo
	(*WxVerifyCodeReqInfo)(nil),  // 2: WxVerifyCodeReqInfo
	(*WxVerifyCodeRespInfo)(nil), // 3: WxVerifyCodeRespInfo
	(*BaseAuthReqInfo)(nil),      // 4: BaseAuthReqInfo
	(*ManualAuthRsaReqData)(nil), // 5: ManualAuthRsaReqData
	(*ManualAuthAesReqData)(nil), // 6: ManualAuthAesReqData
	(*ManualAuthRequest)(nil),    // 7: ManualAuthRequest
	(*AutoAuthRsaReqData)(nil),   // 8: AutoAuthRsaReqData
	(*AutoAuthKey)(nil),          // 9: AutoAuthKey
	(*AutoAuthAesReqData)(nil),   // 10: AutoAuthAesReqData
	(*AutoAuthRequest)(nil),      // 11: AutoAuthRequest
	(*AuthSectResp)(nil),         // 12: AuthSectResp
	(*AcctSectResp)(nil),         // 13: AcctSectResp
	(*NetworkSectResp)(nil),      // 14: NetworkSectResp
	(*UnifyAuthResponse)(nil),    // 15: UnifyAuthResponse
	(*SKBuiltinBufferT)(nil),     // 16: SKBuiltinBuffer_t
	(*ECDHKey)(nil),              // 17: ECDHKey
	(*BaseRequest)(nil),          // 18: BaseRequest
	(*ShowStyleKey)(nil),         // 19: ShowStyleKey
	(*HostList)(nil),             // 20: HostList
	(*NetworkControl)(nil),       // 21: NetworkControl
	(*BuiltinIPList)(nil),        // 22: BuiltinIPList
	(*BaseResponse)(nil),         // 23: BaseResponse
}
var file_UnifyAuth_proto_depIdxs = []int32{
	16, // 0: WTLoginImgReqInfo.kSid:type_name -> SKBuiltinBuffer_t
	16, // 1: WTLoginImgRespInfo.kSid:type_name -> SKBuiltinBuffer_t
	16, // 2: WTLoginImgRespInfo.imgBuf:type_name -> SKBuiltinBuffer_t
	16, // 3: WxVerifyCodeRespInfo.verifyBuff:type_name -> SKBuiltinBuffer_t
	16, // 4: BaseAuthReqInfo.wtLoginReqBuff:type_name -> SKBuiltinBuffer_t
	0,  // 5: BaseAuthReqInfo.wtLoginImgReqInfo:type_name -> WTLoginImgReqInfo
	2,  // 6: BaseAuthReqInfo.wxVerifyCodeReqInfo:type_name -> WxVerifyCodeReqInfo
	16, // 7: BaseAuthReqInfo.cliDBEncryptKey:type_name -> SKBuiltinBuffer_t
	16, // 8: BaseAuthReqInfo.cliDBEncryptInfo:type_name -> SKBuiltinBuffer_t
	16, // 9: ManualAuthRsaReqData.randomEncryKey:type_name -> SKBuiltinBuffer_t
	17, // 10: ManualAuthRsaReqData.cliPubECDHKey:type_name -> ECDHKey
	18, // 11: ManualAuthAesReqData.baseRequest:type_name -> BaseRequest
	4,  // 12: ManualAuthAesReqData.baseReqInfo:type_name -> BaseAuthReqInfo
	16, // 13: ManualAuthAesReqData.clientCheckDat:type_name -> SKBuiltinBuffer_t
	5,  // 14: ManualAuthRequest.rsaReqData:type_name -> ManualAuthRsaReqData
	6,  // 15: ManualAuthRequest.aesReqData:type_name -> ManualAuthAesReqData
	16, // 16: AutoAuthRsaReqData.aesEncryptKey:type_name -> SKBuiltinBuffer_t
	17, // 17: AutoAuthRsaReqData.cliPubEcdhkey:type_name -> ECDHKey
	16, // 18: AutoAuthKey.encryptKey:type_name -> SKBuiltinBuffer_t
	16, // 19: AutoAuthKey.key:type_name -> SKBuiltinBuffer_t
	18, // 20: AutoAuthAesReqData.baseRequest:type_name -> BaseRequest
	4,  // 21: AutoAuthAesReqData.baseReqInfo:type_name -> BaseAuthReqInfo
	16, // 22: AutoAuthAesReqData.autoAuthKey:type_name -> SKBuiltinBuffer_t
	8,  // 23: AutoAuthRequest.rsaReqData:type_name -> AutoAuthRsaReqData
	10, // 24: AutoAuthRequest.aesReqData:type_name -> AutoAuthAesReqData
	17, // 25: AuthSectResp.svrPubECDHKey:type_name -> ECDHKey
	16, // 26: AuthSectResp.sessionKey:type_name -> SKBuiltinBuffer_t
	16, // 27: AuthSectResp.autoAuthKey:type_name -> SKBuiltinBuffer_t
	16, // 28: AuthSectResp.wtLoginRspBuff:type_name -> SKBuiltinBuffer_t
	1,  // 29: AuthSectResp.wtLoginImgRespInfo:type_name -> WTLoginImgRespInfo
	3,  // 30: AuthSectResp.wxVerifyCodeRespInfo:type_name -> WxVerifyCodeRespInfo
	16, // 31: AuthSectResp.cliDBEncryptKey:type_name -> SKBuiltinBuffer_t
	16, // 32: AuthSectResp.cliDBEncryptInfo:type_name -> SKBuiltinBuffer_t
	16, // 33: AuthSectResp.a2Key:type_name -> SKBuiltinBuffer_t
	19, // 34: AuthSectResp.showStyle:type_name -> ShowStyleKey
	20, // 35: NetworkSectResp.newHostList:type_name -> HostList
	21, // 36: NetworkSectResp.networkControl:type_name -> NetworkControl
	22, // 37: NetworkSectResp.builtinIPList:type_name -> BuiltinIPList
	23, // 38: UnifyAuthResponse.baseResponse:type_name -> BaseResponse
	12, // 39: UnifyAuthResponse.authSectResp:type_name -> AuthSectResp
	13, // 40: UnifyAuthResponse.acctSectResp:type_name -> AcctSectResp
	14, // 41: UnifyAuthResponse.networkSectResp:type_name -> NetworkSectResp
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_UnifyAuth_proto_init() }
func file_UnifyAuth_proto_init() {
	if File_UnifyAuth_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_UnifyAuth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WTLoginImgReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WTLoginImgRespInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxVerifyCodeReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxVerifyCodeRespInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAuthReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualAuthRsaReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualAuthAesReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoAuthRsaReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoAuthKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoAuthAesReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcctSectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkSectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnifyAuth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnifyAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UnifyAuth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UnifyAuth_proto_goTypes,
		DependencyIndexes: file_UnifyAuth_proto_depIdxs,
		MessageInfos:      file_UnifyAuth_proto_msgTypes,
	}.Build()
	File_UnifyAuth_proto = out.File
	file_UnifyAuth_proto_rawDesc = nil
	file_UnifyAuth_proto_goTypes = nil
	file_UnifyAuth_proto_depIdxs = nil
}
