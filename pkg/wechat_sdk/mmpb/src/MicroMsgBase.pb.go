// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: MicroMsgBase.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SKBuiltinBufferT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ILen   *int32 `protobuf:"varint,1,opt,name=iLen" json:"iLen,omitempty"`
	Buffer []byte `protobuf:"bytes,2,opt,name=buffer" json:"buffer,omitempty"`
}

func (x *SKBuiltinBufferT) Reset() {
	*x = SKBuiltinBufferT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SKBuiltinBufferT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SKBuiltinBufferT) ProtoMessage() {}

func (x *SKBuiltinBufferT) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SKBuiltinBufferT.ProtoReflect.Descriptor instead.
func (*SKBuiltinBufferT) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{0}
}

func (x *SKBuiltinBufferT) GetILen() int32 {
	if x != nil && x.ILen != nil {
		return *x.ILen
	}
	return 0
}

func (x *SKBuiltinBufferT) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type SKBuiltinStringT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ *string `protobuf:"bytes,1,opt,name=string" json:"string,omitempty"`
}

func (x *SKBuiltinStringT) Reset() {
	*x = SKBuiltinStringT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SKBuiltinStringT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SKBuiltinStringT) ProtoMessage() {}

func (x *SKBuiltinStringT) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SKBuiltinStringT.ProtoReflect.Descriptor instead.
func (*SKBuiltinStringT) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{1}
}

func (x *SKBuiltinStringT) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

type BaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey    []byte  `protobuf:"bytes,1,opt,name=sessionKey" json:"sessionKey,omitempty"`
	Uin           *uint32 `protobuf:"varint,2,opt,name=uin" json:"uin,omitempty"`
	DeviceId      []byte  `protobuf:"bytes,3,opt,name=deviceId" json:"deviceId,omitempty"`
	ClientVersion *uint32 `protobuf:"varint,4,opt,name=clientVersion" json:"clientVersion,omitempty"`
	DeviceType    []byte  `protobuf:"bytes,5,opt,name=deviceType" json:"deviceType,omitempty"`
	Scene         *uint32 `protobuf:"varint,6,opt,name=scene" json:"scene,omitempty"`
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{2}
}

func (x *BaseRequest) GetSessionKey() []byte {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *BaseRequest) GetUin() uint32 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *BaseRequest) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *BaseRequest) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *BaseRequest) GetDeviceType() []byte {
	if x != nil {
		return x.DeviceType
	}
	return nil
}

func (x *BaseRequest) GetScene() uint32 {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return 0
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32            `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	ErrMsg *SKBuiltinStringT `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{3}
}

func (x *BaseResponse) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BaseResponse) GetErrMsg() *SKBuiltinStringT {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

type ECDHKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nid *int32            `protobuf:"varint,1,req,name=nid" json:"nid,omitempty"`
	Key *SKBuiltinBufferT `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
}

func (x *ECDHKey) Reset() {
	*x = ECDHKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECDHKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECDHKey) ProtoMessage() {}

func (x *ECDHKey) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECDHKey.ProtoReflect.Descriptor instead.
func (*ECDHKey) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{4}
}

func (x *ECDHKey) GetNid() int32 {
	if x != nil && x.Nid != nil {
		return *x.Nid
	}
	return 0
}

func (x *ECDHKey) GetKey() *SKBuiltinBufferT {
	if x != nil {
		return x.Key
	}
	return nil
}

type StyleKeyVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *uint32 `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Val *string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (x *StyleKeyVal) Reset() {
	*x = StyleKeyVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StyleKeyVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StyleKeyVal) ProtoMessage() {}

func (x *StyleKeyVal) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StyleKeyVal.ProtoReflect.Descriptor instead.
func (*StyleKeyVal) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{5}
}

func (x *StyleKeyVal) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *StyleKeyVal) GetVal() string {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return ""
}

type ShowStyleKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyCount *uint32        `protobuf:"varint,1,req,name=keyCount" json:"keyCount,omitempty"`
	Key      []*StyleKeyVal `protobuf:"bytes,2,rep,name=key" json:"key,omitempty"`
}

func (x *ShowStyleKey) Reset() {
	*x = ShowStyleKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowStyleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowStyleKey) ProtoMessage() {}

func (x *ShowStyleKey) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowStyleKey.ProtoReflect.Descriptor instead.
func (*ShowStyleKey) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{6}
}

func (x *ShowStyleKey) GetKeyCount() uint32 {
	if x != nil && x.KeyCount != nil {
		return *x.KeyCount
	}
	return 0
}

func (x *ShowStyleKey) GetKey() []*StyleKeyVal {
	if x != nil {
		return x.Key
	}
	return nil
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin     *string `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Substitute *string `protobuf:"bytes,2,opt,name=substitute" json:"substitute,omitempty"`
	Priority   *int32  `protobuf:"varint,3,opt,name=priority" json:"priority,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{7}
}

func (x *Host) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *Host) GetSubstitute() string {
	if x != nil && x.Substitute != nil {
		return *x.Substitute
	}
	return ""
}

func (x *Host) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

type HostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *uint32 `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	List  []*Host `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (x *HostList) Reset() {
	*x = HostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostList) ProtoMessage() {}

func (x *HostList) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostList.ProtoReflect.Descriptor instead.
func (*HostList) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{8}
}

func (x *HostList) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *HostList) GetList() []*Host {
	if x != nil {
		return x.List
	}
	return nil
}

type NetworkControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortList         *string `protobuf:"bytes,1,opt,name=portList" json:"portList,omitempty"`
	TimeoutList      *string `protobuf:"bytes,2,opt,name=timeoutList" json:"timeoutList,omitempty"`
	MinNoopInterval  *uint32 `protobuf:"varint,3,opt,name=minNoopInterval" json:"minNoopInterval,omitempty"`
	MaxNoopInterval  *uint32 `protobuf:"varint,4,opt,name=maxNoopInterval" json:"maxNoopInterval,omitempty"`
	TypingInterval   *int32  `protobuf:"varint,5,opt,name=typingInterval" json:"typingInterval,omitempty"`
	NoopIntervalTime *int32  `protobuf:"varint,7,opt,name=noopIntervalTime" json:"noopIntervalTime,omitempty"`
}

func (x *NetworkControl) Reset() {
	*x = NetworkControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkControl) ProtoMessage() {}

func (x *NetworkControl) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkControl.ProtoReflect.Descriptor instead.
func (*NetworkControl) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkControl) GetPortList() string {
	if x != nil && x.PortList != nil {
		return *x.PortList
	}
	return ""
}

func (x *NetworkControl) GetTimeoutList() string {
	if x != nil && x.TimeoutList != nil {
		return *x.TimeoutList
	}
	return ""
}

func (x *NetworkControl) GetMinNoopInterval() uint32 {
	if x != nil && x.MinNoopInterval != nil {
		return *x.MinNoopInterval
	}
	return 0
}

func (x *NetworkControl) GetMaxNoopInterval() uint32 {
	if x != nil && x.MaxNoopInterval != nil {
		return *x.MaxNoopInterval
	}
	return 0
}

func (x *NetworkControl) GetTypingInterval() int32 {
	if x != nil && x.TypingInterval != nil {
		return *x.TypingInterval
	}
	return 0
}

func (x *NetworkControl) GetNoopIntervalTime() int32 {
	if x != nil && x.NoopIntervalTime != nil {
		return *x.NoopIntervalTime
	}
	return 0
}

type BuiltinIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Port   *uint32 `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	Ip     []byte  `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Domain []byte  `protobuf:"bytes,4,opt,name=domain" json:"domain,omitempty"`
}

func (x *BuiltinIP) Reset() {
	*x = BuiltinIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuiltinIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuiltinIP) ProtoMessage() {}

func (x *BuiltinIP) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuiltinIP.ProtoReflect.Descriptor instead.
func (*BuiltinIP) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{10}
}

func (x *BuiltinIP) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BuiltinIP) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *BuiltinIP) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *BuiltinIP) GetDomain() []byte {
	if x != nil {
		return x.Domain
	}
	return nil
}

type BuiltinIPList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongConnectIPCount  *uint32      `protobuf:"varint,1,req,name=longConnectIPCount" json:"longConnectIPCount,omitempty"`
	ShortConnectIPCount *uint32      `protobuf:"varint,2,req,name=shortConnectIPCount" json:"shortConnectIPCount,omitempty"`
	Seq                 *uint32      `protobuf:"varint,5,req,name=seq" json:"seq,omitempty"`
	LongConnectIPList   []*BuiltinIP `protobuf:"bytes,3,rep,name=longConnectIPList" json:"longConnectIPList,omitempty"`
	ShortConnectIPList  []*BuiltinIP `protobuf:"bytes,4,rep,name=shortConnectIPList" json:"shortConnectIPList,omitempty"`
}

func (x *BuiltinIPList) Reset() {
	*x = BuiltinIPList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuiltinIPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuiltinIPList) ProtoMessage() {}

func (x *BuiltinIPList) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuiltinIPList.ProtoReflect.Descriptor instead.
func (*BuiltinIPList) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{11}
}

func (x *BuiltinIPList) GetLongConnectIPCount() uint32 {
	if x != nil && x.LongConnectIPCount != nil {
		return *x.LongConnectIPCount
	}
	return 0
}

func (x *BuiltinIPList) GetShortConnectIPCount() uint32 {
	if x != nil && x.ShortConnectIPCount != nil {
		return *x.ShortConnectIPCount
	}
	return 0
}

func (x *BuiltinIPList) GetSeq() uint32 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *BuiltinIPList) GetLongConnectIPList() []*BuiltinIP {
	if x != nil {
		return x.LongConnectIPList
	}
	return nil
}

func (x *BuiltinIPList) GetShortConnectIPList() []*BuiltinIP {
	if x != nil {
		return x.ShortConnectIPList
	}
	return nil
}

type CmdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdId  *int32            `protobuf:"varint,1,req,name=cmdId" json:"cmdId,omitempty"`
	CmdBuf *SKBuiltinBufferT `protobuf:"bytes,2,req,name=cmdBuf" json:"cmdBuf,omitempty"`
}

func (x *CmdItem) Reset() {
	*x = CmdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdItem) ProtoMessage() {}

func (x *CmdItem) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdItem.ProtoReflect.Descriptor instead.
func (*CmdItem) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{12}
}

func (x *CmdItem) GetCmdId() int32 {
	if x != nil && x.CmdId != nil {
		return *x.CmdId
	}
	return 0
}

func (x *CmdItem) GetCmdBuf() *SKBuiltinBufferT {
	if x != nil {
		return x.CmdBuf
	}
	return nil
}

type CmdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *uint32    `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	List  []*CmdItem `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (x *CmdList) Reset() {
	*x = CmdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdList) ProtoMessage() {}

func (x *CmdList) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdList.ProtoReflect.Descriptor instead.
func (*CmdList) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{13}
}

func (x *CmdList) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CmdList) GetList() []*CmdItem {
	if x != nil {
		return x.List
	}
	return nil
}

type CDNDnsPortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortCount *uint32  `protobuf:"varint,1,req,name=portCount" json:"portCount,omitempty"`
	PortList  []uint32 `protobuf:"varint,2,rep,packed,name=portList" json:"portList,omitempty"`
}

func (x *CDNDnsPortInfo) Reset() {
	*x = CDNDnsPortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDNDnsPortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDNDnsPortInfo) ProtoMessage() {}

func (x *CDNDnsPortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDNDnsPortInfo.ProtoReflect.Descriptor instead.
func (*CDNDnsPortInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{14}
}

func (x *CDNDnsPortInfo) GetPortCount() uint32 {
	if x != nil && x.PortCount != nil {
		return *x.PortCount
	}
	return 0
}

func (x *CDNDnsPortInfo) GetPortList() []uint32 {
	if x != nil {
		return x.PortList
	}
	return nil
}

type CDNDnsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver              *uint32             `protobuf:"varint,1,req,name=ver" json:"ver,omitempty"`
	Uin              *uint32             `protobuf:"varint,2,req,name=uin" json:"uin,omitempty"`
	ExpireTime       *uint32             `protobuf:"varint,3,req,name=expireTime" json:"expireTime,omitempty"`
	FrontId          *int32              `protobuf:"varint,4,req,name=frontId" json:"frontId,omitempty"`
	FrontIpcount     *int32              `protobuf:"varint,5,req,name=frontIpcount" json:"frontIpcount,omitempty"`
	FrontIplist      []*SKBuiltinStringT `protobuf:"bytes,6,rep,name=frontIplist" json:"frontIplist,omitempty"`
	ZoneDomain       *string             `protobuf:"bytes,7,opt,name=zoneDomain" json:"zoneDomain,omitempty"`
	AuthKey          *SKBuiltinBufferT   `protobuf:"bytes,8,req,name=authKey" json:"authKey,omitempty"`
	ZoneId           *int32              `protobuf:"varint,9,req,name=zoneId" json:"zoneId,omitempty"`
	ZoneIpcount      *int32              `protobuf:"varint,10,req,name=zoneIpcount" json:"zoneIpcount,omitempty"`
	ZoneIplist       []*SKBuiltinStringT `protobuf:"bytes,11,rep,name=zoneIplist" json:"zoneIplist,omitempty"`
	FrontIpportList  []*CDNDnsPortInfo   `protobuf:"bytes,12,rep,name=frontIpportList" json:"frontIpportList,omitempty"`
	ZoneIpportList   []*CDNDnsPortInfo   `protobuf:"bytes,13,rep,name=zoneIpportList" json:"zoneIpportList,omitempty"`
	FrontIpportCount *int32              `protobuf:"varint,14,opt,name=frontIpportCount" json:"frontIpportCount,omitempty"`
	ZoneIpportCount  *int32              `protobuf:"varint,15,opt,name=zoneIpportCount" json:"zoneIpportCount,omitempty"`
	FakeUin          *uint32             `protobuf:"varint,16,opt,name=fakeUin" json:"fakeUin,omitempty"`
	NewAuthKey       *SKBuiltinBufferT   `protobuf:"bytes,17,opt,name=newAuthKey" json:"newAuthKey,omitempty"`
}

func (x *CDNDnsInfo) Reset() {
	*x = CDNDnsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDNDnsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDNDnsInfo) ProtoMessage() {}

func (x *CDNDnsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDNDnsInfo.ProtoReflect.Descriptor instead.
func (*CDNDnsInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{15}
}

func (x *CDNDnsInfo) GetVer() uint32 {
	if x != nil && x.Ver != nil {
		return *x.Ver
	}
	return 0
}

func (x *CDNDnsInfo) GetUin() uint32 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *CDNDnsInfo) GetExpireTime() uint32 {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return 0
}

func (x *CDNDnsInfo) GetFrontId() int32 {
	if x != nil && x.FrontId != nil {
		return *x.FrontId
	}
	return 0
}

func (x *CDNDnsInfo) GetFrontIpcount() int32 {
	if x != nil && x.FrontIpcount != nil {
		return *x.FrontIpcount
	}
	return 0
}

func (x *CDNDnsInfo) GetFrontIplist() []*SKBuiltinStringT {
	if x != nil {
		return x.FrontIplist
	}
	return nil
}

func (x *CDNDnsInfo) GetZoneDomain() string {
	if x != nil && x.ZoneDomain != nil {
		return *x.ZoneDomain
	}
	return ""
}

func (x *CDNDnsInfo) GetAuthKey() *SKBuiltinBufferT {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *CDNDnsInfo) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *CDNDnsInfo) GetZoneIpcount() int32 {
	if x != nil && x.ZoneIpcount != nil {
		return *x.ZoneIpcount
	}
	return 0
}

func (x *CDNDnsInfo) GetZoneIplist() []*SKBuiltinStringT {
	if x != nil {
		return x.ZoneIplist
	}
	return nil
}

func (x *CDNDnsInfo) GetFrontIpportList() []*CDNDnsPortInfo {
	if x != nil {
		return x.FrontIpportList
	}
	return nil
}

func (x *CDNDnsInfo) GetZoneIpportList() []*CDNDnsPortInfo {
	if x != nil {
		return x.ZoneIpportList
	}
	return nil
}

func (x *CDNDnsInfo) GetFrontIpportCount() int32 {
	if x != nil && x.FrontIpportCount != nil {
		return *x.FrontIpportCount
	}
	return 0
}

func (x *CDNDnsInfo) GetZoneIpportCount() int32 {
	if x != nil && x.ZoneIpportCount != nil {
		return *x.ZoneIpportCount
	}
	return 0
}

func (x *CDNDnsInfo) GetFakeUin() uint32 {
	if x != nil && x.FakeUin != nil {
		return *x.FakeUin
	}
	return 0
}

func (x *CDNDnsInfo) GetNewAuthKey() *SKBuiltinBufferT {
	if x != nil {
		return x.NewAuthKey
	}
	return nil
}

type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName *SKBuiltinStringT `protobuf:"bytes,1,req,name=userName" json:"userName,omitempty"`
	NickName *SKBuiltinStringT `protobuf:"bytes,2,req,name=nickName" json:"nickName,omitempty"`
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{16}
}

func (x *RoomInfo) GetUserName() *SKBuiltinStringT {
	if x != nil {
		return x.UserName
	}
	return nil
}

func (x *RoomInfo) GetNickName() *SKBuiltinStringT {
	if x != nil {
		return x.NickName
	}
	return nil
}

type SnsUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnsFlag       *uint32 `protobuf:"varint,1,req,name=snsFlag" json:"snsFlag,omitempty"`
	SnsBgImgId    *string `protobuf:"bytes,2,opt,name=snsBgImgId" json:"snsBgImgId,omitempty"`
	SnsBgObjectId *uint64 `protobuf:"varint,3,opt,name=snsBgObjectId" json:"snsBgObjectId,omitempty"`
	SnsFlagEx     *uint32 `protobuf:"varint,4,opt,name=snsFlagEx" json:"snsFlagEx,omitempty"`
}

func (x *SnsUserInfo) Reset() {
	*x = SnsUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnsUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnsUserInfo) ProtoMessage() {}

func (x *SnsUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnsUserInfo.ProtoReflect.Descriptor instead.
func (*SnsUserInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{17}
}

func (x *SnsUserInfo) GetSnsFlag() uint32 {
	if x != nil && x.SnsFlag != nil {
		return *x.SnsFlag
	}
	return 0
}

func (x *SnsUserInfo) GetSnsBgImgId() string {
	if x != nil && x.SnsBgImgId != nil {
		return *x.SnsBgImgId
	}
	return ""
}

func (x *SnsUserInfo) GetSnsBgObjectId() uint64 {
	if x != nil && x.SnsBgObjectId != nil {
		return *x.SnsBgObjectId
	}
	return 0
}

func (x *SnsUserInfo) GetSnsFlagEx() uint32 {
	if x != nil && x.SnsFlagEx != nil {
		return *x.SnsFlagEx
	}
	return 0
}

type CustomizedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandFlag    *uint32 `protobuf:"varint,1,req,name=brandFlag" json:"brandFlag,omitempty"`
	ExternalInfo *string `protobuf:"bytes,2,opt,name=externalInfo" json:"externalInfo,omitempty"`
	BrandInfo    *string `protobuf:"bytes,3,opt,name=brandInfo" json:"brandInfo,omitempty"`
	BrandIconURL *string `protobuf:"bytes,4,opt,name=brandIconURL" json:"brandIconURL,omitempty"`
}

func (x *CustomizedInfo) Reset() {
	*x = CustomizedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedInfo) ProtoMessage() {}

func (x *CustomizedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedInfo.ProtoReflect.Descriptor instead.
func (*CustomizedInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{18}
}

func (x *CustomizedInfo) GetBrandFlag() uint32 {
	if x != nil && x.BrandFlag != nil {
		return *x.BrandFlag
	}
	return 0
}

func (x *CustomizedInfo) GetExternalInfo() string {
	if x != nil && x.ExternalInfo != nil {
		return *x.ExternalInfo
	}
	return ""
}

func (x *CustomizedInfo) GetBrandInfo() string {
	if x != nil && x.BrandInfo != nil {
		return *x.BrandInfo
	}
	return ""
}

func (x *CustomizedInfo) GetBrandIconURL() string {
	if x != nil && x.BrandIconURL != nil {
		return *x.BrandIconURL
	}
	return ""
}

type LinkedinContactItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedinName      *string `protobuf:"bytes,1,opt,name=linkedinName" json:"linkedinName,omitempty"`
	LinkedinMemberId  *string `protobuf:"bytes,2,opt,name=linkedinMemberId" json:"linkedinMemberId,omitempty"`
	LinkedinPublicUrl *string `protobuf:"bytes,3,opt,name=linkedinPublicUrl" json:"linkedinPublicUrl,omitempty"`
}

func (x *LinkedinContactItem) Reset() {
	*x = LinkedinContactItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedinContactItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedinContactItem) ProtoMessage() {}

func (x *LinkedinContactItem) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedinContactItem.ProtoReflect.Descriptor instead.
func (*LinkedinContactItem) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{19}
}

func (x *LinkedinContactItem) GetLinkedinName() string {
	if x != nil && x.LinkedinName != nil {
		return *x.LinkedinName
	}
	return ""
}

func (x *LinkedinContactItem) GetLinkedinMemberId() string {
	if x != nil && x.LinkedinMemberId != nil {
		return *x.LinkedinMemberId
	}
	return ""
}

func (x *LinkedinContactItem) GetLinkedinPublicUrl() string {
	if x != nil && x.LinkedinPublicUrl != nil {
		return *x.LinkedinPublicUrl
	}
	return ""
}

type AdditionalContactList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedinContactItem *LinkedinContactItem `protobuf:"bytes,1,opt,name=linkedinContactItem" json:"linkedinContactItem,omitempty"`
}

func (x *AdditionalContactList) Reset() {
	*x = AdditionalContactList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalContactList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalContactList) ProtoMessage() {}

func (x *AdditionalContactList) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalContactList.ProtoReflect.Descriptor instead.
func (*AdditionalContactList) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{20}
}

func (x *AdditionalContactList) GetLinkedinContactItem() *LinkedinContactItem {
	if x != nil {
		return x.LinkedinContactItem
	}
	return nil
}

type ChatRoomMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName           *string `protobuf:"bytes,1,opt,name=userName" json:"userName,omitempty"`
	NickName           *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	DisplayName        *string `protobuf:"bytes,3,opt,name=displayName" json:"displayName,omitempty"`
	BigHeadImgUrl      *string `protobuf:"bytes,4,opt,name=bigHeadImgUrl" json:"bigHeadImgUrl,omitempty"`
	SmallHeadImgUrl    *string `protobuf:"bytes,5,opt,name=smallHeadImgUrl" json:"smallHeadImgUrl,omitempty"`
	ChatroomMemberFlag *uint32 `protobuf:"varint,6,req,name=chatroomMemberFlag" json:"chatroomMemberFlag,omitempty"`
	InviteBy           *string `protobuf:"bytes,7,opt,name=inviteBy" json:"inviteBy,omitempty"`
}

func (x *ChatRoomMemberInfo) Reset() {
	*x = ChatRoomMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomMemberInfo) ProtoMessage() {}

func (x *ChatRoomMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomMemberInfo.ProtoReflect.Descriptor instead.
func (*ChatRoomMemberInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{21}
}

func (x *ChatRoomMemberInfo) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *ChatRoomMemberInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *ChatRoomMemberInfo) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ChatRoomMemberInfo) GetBigHeadImgUrl() string {
	if x != nil && x.BigHeadImgUrl != nil {
		return *x.BigHeadImgUrl
	}
	return ""
}

func (x *ChatRoomMemberInfo) GetSmallHeadImgUrl() string {
	if x != nil && x.SmallHeadImgUrl != nil {
		return *x.SmallHeadImgUrl
	}
	return ""
}

func (x *ChatRoomMemberInfo) GetChatroomMemberFlag() uint32 {
	if x != nil && x.ChatroomMemberFlag != nil {
		return *x.ChatroomMemberFlag
	}
	return 0
}

func (x *ChatRoomMemberInfo) GetInviteBy() string {
	if x != nil && x.InviteBy != nil {
		return *x.InviteBy
	}
	return ""
}

type ChatRoomMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberCount        *uint32               `protobuf:"varint,1,req,name=memberCount" json:"memberCount,omitempty"`
	ChatRoomMemberList []*ChatRoomMemberInfo `protobuf:"bytes,2,rep,name=chatRoomMemberList" json:"chatRoomMemberList,omitempty"`
	InfoMask           *uint32               `protobuf:"varint,3,opt,name=infoMask" json:"infoMask,omitempty"`
}

func (x *ChatRoomMemberData) Reset() {
	*x = ChatRoomMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoomMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomMemberData) ProtoMessage() {}

func (x *ChatRoomMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomMemberData.ProtoReflect.Descriptor instead.
func (*ChatRoomMemberData) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{22}
}

func (x *ChatRoomMemberData) GetMemberCount() uint32 {
	if x != nil && x.MemberCount != nil {
		return *x.MemberCount
	}
	return 0
}

func (x *ChatRoomMemberData) GetChatRoomMemberList() []*ChatRoomMemberInfo {
	if x != nil {
		return x.ChatRoomMemberList
	}
	return nil
}

func (x *ChatRoomMemberData) GetInfoMask() uint32 {
	if x != nil && x.InfoMask != nil {
		return *x.InfoMask
	}
	return 0
}

type PhoneNumItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNum *string `protobuf:"bytes,1,opt,name=phoneNum" json:"phoneNum,omitempty"`
}

func (x *PhoneNumItem) Reset() {
	*x = PhoneNumItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumItem) ProtoMessage() {}

func (x *PhoneNumItem) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumItem.ProtoReflect.Descriptor instead.
func (*PhoneNumItem) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{23}
}

func (x *PhoneNumItem) GetPhoneNum() string {
	if x != nil && x.PhoneNum != nil {
		return *x.PhoneNum
	}
	return ""
}

type PhoneNumListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        *uint32         `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	PhoneNumList []*PhoneNumItem `protobuf:"bytes,2,rep,name=phoneNumList" json:"phoneNumList,omitempty"`
}

func (x *PhoneNumListInfo) Reset() {
	*x = PhoneNumListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumListInfo) ProtoMessage() {}

func (x *PhoneNumListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumListInfo.ProtoReflect.Descriptor instead.
func (*PhoneNumListInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{24}
}

func (x *PhoneNumListInfo) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *PhoneNumListInfo) GetPhoneNumList() []*PhoneNumItem {
	if x != nil {
		return x.PhoneNumList
	}
	return nil
}

type VerifyUserValidTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	AntispamTicket *string `protobuf:"bytes,2,opt,name=antispamTicket" json:"antispamTicket,omitempty"`
}

func (x *VerifyUserValidTicket) Reset() {
	*x = VerifyUserValidTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyUserValidTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUserValidTicket) ProtoMessage() {}

func (x *VerifyUserValidTicket) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUserValidTicket.ProtoReflect.Descriptor instead.
func (*VerifyUserValidTicket) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{25}
}

func (x *VerifyUserValidTicket) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *VerifyUserValidTicket) GetAntispamTicket() string {
	if x != nil && x.AntispamTicket != nil {
		return *x.AntispamTicket
	}
	return ""
}

type SafeDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid       *string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	DeviceType *string `protobuf:"bytes,3,opt,name=deviceType" json:"deviceType,omitempty"`
	CreateTime *uint32 `protobuf:"varint,4,req,name=createTime" json:"createTime,omitempty"`
}

func (x *SafeDevice) Reset() {
	*x = SafeDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeDevice) ProtoMessage() {}

func (x *SafeDevice) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeDevice.ProtoReflect.Descriptor instead.
func (*SafeDevice) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{26}
}

func (x *SafeDevice) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SafeDevice) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *SafeDevice) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *SafeDevice) GetCreateTime() uint32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

type SafeDeviceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *uint32       `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	List  []*SafeDevice `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (x *SafeDeviceList) Reset() {
	*x = SafeDeviceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeDeviceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeDeviceList) ProtoMessage() {}

func (x *SafeDeviceList) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeDeviceList.ProtoReflect.Descriptor instead.
func (*SafeDeviceList) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{27}
}

func (x *SafeDeviceList) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *SafeDeviceList) GetList() []*SafeDevice {
	if x != nil {
		return x.List
	}
	return nil
}

type WCExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wcstf          *SKBuiltinBufferT `protobuf:"bytes,1,opt,name=wcstf" json:"wcstf,omitempty"`
	Wcste          *SKBuiltinBufferT `protobuf:"bytes,2,opt,name=wcste" json:"wcste,omitempty"`
	CcData         *SKBuiltinBufferT `protobuf:"bytes,3,opt,name=ccData" json:"ccData,omitempty"`
	UserAttrInfo   *SKBuiltinBufferT `protobuf:"bytes,4,opt,name=userAttrInfo" json:"userAttrInfo,omitempty"`
	AcgiDeviceInfo *SKBuiltinBufferT `protobuf:"bytes,5,opt,name=acgiDeviceInfo" json:"acgiDeviceInfo,omitempty"`
	AcgiTuring     *SKBuiltinBufferT `protobuf:"bytes,6,opt,name=acgiTuring" json:"acgiTuring,omitempty"`
	DeviceToken    *SKBuiltinBufferT `protobuf:"bytes,7,opt,name=deviceToken" json:"deviceToken,omitempty"`
	IosturingHuman *SKBuiltinBufferT `protobuf:"bytes,101,opt,name=iosturingHuman" json:"iosturingHuman,omitempty"`
	IosturingOwner *SKBuiltinBufferT `protobuf:"bytes,102,opt,name=iosturingOwner" json:"iosturingOwner,omitempty"`
}

func (x *WCExtInfo) Reset() {
	*x = WCExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WCExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WCExtInfo) ProtoMessage() {}

func (x *WCExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WCExtInfo.ProtoReflect.Descriptor instead.
func (*WCExtInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{28}
}

func (x *WCExtInfo) GetWcstf() *SKBuiltinBufferT {
	if x != nil {
		return x.Wcstf
	}
	return nil
}

func (x *WCExtInfo) GetWcste() *SKBuiltinBufferT {
	if x != nil {
		return x.Wcste
	}
	return nil
}

func (x *WCExtInfo) GetCcData() *SKBuiltinBufferT {
	if x != nil {
		return x.CcData
	}
	return nil
}

func (x *WCExtInfo) GetUserAttrInfo() *SKBuiltinBufferT {
	if x != nil {
		return x.UserAttrInfo
	}
	return nil
}

func (x *WCExtInfo) GetAcgiDeviceInfo() *SKBuiltinBufferT {
	if x != nil {
		return x.AcgiDeviceInfo
	}
	return nil
}

func (x *WCExtInfo) GetAcgiTuring() *SKBuiltinBufferT {
	if x != nil {
		return x.AcgiTuring
	}
	return nil
}

func (x *WCExtInfo) GetDeviceToken() *SKBuiltinBufferT {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

func (x *WCExtInfo) GetIosturingHuman() *SKBuiltinBufferT {
	if x != nil {
		return x.IosturingHuman
	}
	return nil
}

func (x *WCExtInfo) GetIosturingOwner() *SKBuiltinBufferT {
	if x != nil {
		return x.IosturingOwner
	}
	return nil
}

type AvatarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Nickname  *string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	AvatarUrl *string `protobuf:"bytes,3,opt,name=avatarUrl" json:"avatarUrl,omitempty"`
	Desc      *string `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
}

func (x *AvatarInfo) Reset() {
	*x = AvatarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarInfo) ProtoMessage() {}

func (x *AvatarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarInfo.ProtoReflect.Descriptor instead.
func (*AvatarInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{29}
}

func (x *AvatarInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AvatarInfo) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *AvatarInfo) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *AvatarInfo) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

type AvatarInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarList  []*AvatarInfo `protobuf:"bytes,1,rep,name=avatarList" json:"avatarList,omitempty"`
	AvatarLimit *int32        `protobuf:"varint,3,opt,name=avatarLimit" json:"avatarLimit,omitempty"`
}

func (x *AvatarInfoList) Reset() {
	*x = AvatarInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarInfoList) ProtoMessage() {}

func (x *AvatarInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarInfoList.ProtoReflect.Descriptor instead.
func (*AvatarInfoList) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{30}
}

func (x *AvatarInfoList) GetAvatarList() []*AvatarInfo {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

func (x *AvatarInfoList) GetAvatarLimit() int32 {
	if x != nil && x.AvatarLimit != nil {
		return *x.AvatarLimit
	}
	return 0
}

type WxaExternalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostAppId *string `protobuf:"bytes,1,opt,name=hostAppId" json:"hostAppId,omitempty"`
	Scene     *int32  `protobuf:"varint,2,opt,name=scene" json:"scene,omitempty"`
	SourceEnv *int32  `protobuf:"varint,3,opt,name=sourceEnv" json:"sourceEnv,omitempty"`
}

func (x *WxaExternalInfo) Reset() {
	*x = WxaExternalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxaExternalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxaExternalInfo) ProtoMessage() {}

func (x *WxaExternalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxaExternalInfo.ProtoReflect.Descriptor instead.
func (*WxaExternalInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{31}
}

func (x *WxaExternalInfo) GetHostAppId() string {
	if x != nil && x.HostAppId != nil {
		return *x.HostAppId
	}
	return ""
}

func (x *WxaExternalInfo) GetScene() int32 {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return 0
}

func (x *WxaExternalInfo) GetSourceEnv() int32 {
	if x != nil && x.SourceEnv != nil {
		return *x.SourceEnv
	}
	return 0
}

type ScopeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope     *string `protobuf:"bytes,1,opt,name=scope" json:"scope,omitempty"`
	Desc      *string `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
	AuthState *int32  `protobuf:"varint,3,opt,name=authState" json:"authState,omitempty"`
	ExtDesc   *string `protobuf:"bytes,4,opt,name=extDesc" json:"extDesc,omitempty"`
	AuthDesc  *string `protobuf:"bytes,5,opt,name=authDesc" json:"authDesc,omitempty"`
}

func (x *ScopeInfo) Reset() {
	*x = ScopeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeInfo) ProtoMessage() {}

func (x *ScopeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeInfo.ProtoReflect.Descriptor instead.
func (*ScopeInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{32}
}

func (x *ScopeInfo) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *ScopeInfo) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ScopeInfo) GetAuthState() int32 {
	if x != nil && x.AuthState != nil {
		return *x.AuthState
	}
	return 0
}

func (x *ScopeInfo) GetExtDesc() string {
	if x != nil && x.ExtDesc != nil {
		return *x.ExtDesc
	}
	return ""
}

func (x *ScopeInfo) GetAuthDesc() string {
	if x != nil && x.AuthDesc != nil {
		return *x.AuthDesc
	}
	return ""
}

type JsApiBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode *int32  `protobuf:"varint,1,opt,name=errcode" json:"errcode,omitempty"`
	Errmsg  *string `protobuf:"bytes,2,opt,name=errmsg" json:"errmsg,omitempty"`
}

func (x *JsApiBaseResponse) Reset() {
	*x = JsApiBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsApiBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsApiBaseResponse) ProtoMessage() {}

func (x *JsApiBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsApiBaseResponse.ProtoReflect.Descriptor instead.
func (*JsApiBaseResponse) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{33}
}

func (x *JsApiBaseResponse) GetErrcode() int32 {
	if x != nil && x.Errcode != nil {
		return *x.Errcode
	}
	return 0
}

func (x *JsApiBaseResponse) GetErrmsg() string {
	if x != nil && x.Errmsg != nil {
		return *x.Errmsg
	}
	return ""
}

type MidasSdkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId     *string `protobuf:"bytes,1,opt,name=offerId" json:"offerId,omitempty"`
	OpenId      *string `protobuf:"bytes,2,opt,name=openId" json:"openId,omitempty"`
	OpenKey     *string `protobuf:"bytes,3,opt,name=openKey" json:"openKey,omitempty"`
	SessionId   *string `protobuf:"bytes,4,opt,name=sessionId" json:"sessionId,omitempty"`
	SessionType *string `protobuf:"bytes,5,opt,name=sessionType" json:"sessionType,omitempty"`
	Pf          *string `protobuf:"bytes,6,opt,name=pf" json:"pf,omitempty"`
	PfKey       *string `protobuf:"bytes,7,opt,name=pfKey" json:"pfKey,omitempty"`
}

func (x *MidasSdkInfo) Reset() {
	*x = MidasSdkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MidasSdkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MidasSdkInfo) ProtoMessage() {}

func (x *MidasSdkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MidasSdkInfo.ProtoReflect.Descriptor instead.
func (*MidasSdkInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{34}
}

func (x *MidasSdkInfo) GetOfferId() string {
	if x != nil && x.OfferId != nil {
		return *x.OfferId
	}
	return ""
}

func (x *MidasSdkInfo) GetOpenId() string {
	if x != nil && x.OpenId != nil {
		return *x.OpenId
	}
	return ""
}

func (x *MidasSdkInfo) GetOpenKey() string {
	if x != nil && x.OpenKey != nil {
		return *x.OpenKey
	}
	return ""
}

func (x *MidasSdkInfo) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *MidasSdkInfo) GetSessionType() string {
	if x != nil && x.SessionType != nil {
		return *x.SessionType
	}
	return ""
}

func (x *MidasSdkInfo) GetPf() string {
	if x != nil && x.Pf != nil {
		return *x.Pf
	}
	return ""
}

func (x *MidasSdkInfo) GetPfKey() string {
	if x != nil && x.PfKey != nil {
		return *x.PfKey
	}
	return ""
}

type HistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId              *string `protobuf:"bytes,1,opt,name=fileId" json:"fileId,omitempty"`
	Aeskey              *string `protobuf:"bytes,2,opt,name=aeskey" json:"aeskey,omitempty"`
	FileMd5             *string `protobuf:"bytes,3,opt,name=fileMd5" json:"fileMd5,omitempty"`
	FileLength          *uint32 `protobuf:"varint,4,opt,name=fileLength" json:"fileLength,omitempty"`
	MsgCount            *uint32 `protobuf:"varint,5,opt,name=msgCount" json:"msgCount,omitempty"`
	NewFormatFileid     *string `protobuf:"bytes,6,opt,name=newFormatFileid" json:"newFormatFileid,omitempty"`
	NewFormatAeskey     *string `protobuf:"bytes,7,opt,name=newFormatAeskey" json:"newFormatAeskey,omitempty"`
	NewFormatMd5        *string `protobuf:"bytes,8,opt,name=newFormatMd5" json:"newFormatMd5,omitempty"`
	NewFormatFileLength *uint32 `protobuf:"varint,9,opt,name=newFormatFileLength" json:"newFormatFileLength,omitempty"`
	NewFormatMsgCount   *uint32 `protobuf:"varint,10,opt,name=newFormatMsgCount" json:"newFormatMsgCount,omitempty"`
}

func (x *HistoryInfo) Reset() {
	*x = HistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MicroMsgBase_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryInfo) ProtoMessage() {}

func (x *HistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MicroMsgBase_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryInfo.ProtoReflect.Descriptor instead.
func (*HistoryInfo) Descriptor() ([]byte, []int) {
	return file_MicroMsgBase_proto_rawDescGZIP(), []int{35}
}

func (x *HistoryInfo) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *HistoryInfo) GetAeskey() string {
	if x != nil && x.Aeskey != nil {
		return *x.Aeskey
	}
	return ""
}

func (x *HistoryInfo) GetFileMd5() string {
	if x != nil && x.FileMd5 != nil {
		return *x.FileMd5
	}
	return ""
}

func (x *HistoryInfo) GetFileLength() uint32 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *HistoryInfo) GetMsgCount() uint32 {
	if x != nil && x.MsgCount != nil {
		return *x.MsgCount
	}
	return 0
}

func (x *HistoryInfo) GetNewFormatFileid() string {
	if x != nil && x.NewFormatFileid != nil {
		return *x.NewFormatFileid
	}
	return ""
}

func (x *HistoryInfo) GetNewFormatAeskey() string {
	if x != nil && x.NewFormatAeskey != nil {
		return *x.NewFormatAeskey
	}
	return ""
}

func (x *HistoryInfo) GetNewFormatMd5() string {
	if x != nil && x.NewFormatMd5 != nil {
		return *x.NewFormatMd5
	}
	return ""
}

func (x *HistoryInfo) GetNewFormatFileLength() uint32 {
	if x != nil && x.NewFormatFileLength != nil {
		return *x.NewFormatFileLength
	}
	return 0
}

func (x *HistoryInfo) GetNewFormatMsgCount() uint32 {
	if x != nil && x.NewFormatMsgCount != nil {
		return *x.NewFormatMsgCount
	}
	return 0
}

var File_MicroMsgBase_proto protoreflect.FileDescriptor

var file_MicroMsgBase_proto_rawDesc = []byte{
	0x0a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x11, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x4c, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x4c, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x22, 0x4c, 0x0a, 0x0c,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x2a,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x41, 0x0a, 0x07, 0x45, 0x43,
	0x44, 0x48, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x31, 0x0a,
	0x0b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x22, 0x4a, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x5a, 0x0a, 0x04,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x3b, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x6f,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x6f,
	0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x79,
	0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x6f,
	0x6f, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5b,
	0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xf9, 0x01, 0x0a, 0x0d,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x50, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x50, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x50, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x50, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x38, 0x0a, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x50, 0x52, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x12, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x50, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x49, 0x50, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6d, 0x64, 0x42,
	0x75, 0x66, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x06, 0x63, 0x6d,
	0x64, 0x42, 0x75, 0x66, 0x22, 0x3d, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x0e, 0x43, 0x44, 0x4e, 0x44, 0x6e, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x98, 0x05, 0x0a, 0x0a, 0x43, 0x44, 0x4e, 0x44, 0x6e, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x03, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x70, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x70, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x70, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75,
	0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0b, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x49, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x7a, 0x6f,
	0x6e, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x7a, 0x6f, 0x6e, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x70, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x70, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x70, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x44, 0x4e, 0x44, 0x6e, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x44, 0x4e, 0x44,
	0x6e, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x49, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x55, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x55, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x6e, 0x65,
	0x77, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x74, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x6a,
	0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53,
	0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53,
	0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x53,
	0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6e,
	0x73, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6e, 0x73,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x73, 0x42, 0x67, 0x49, 0x6d, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x73, 0x42, 0x67, 0x49,
	0x6d, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e, 0x73, 0x42, 0x67, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x6e, 0x73,
	0x42, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6e,
	0x73, 0x46, 0x6c, 0x61, 0x67, 0x45, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x6e, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x45, 0x78, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x22,
	0x93, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x55, 0x72, 0x6c, 0x22, 0x5f, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46,
	0x0a, 0x13, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x13, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x8a, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x69, 0x67, 0x48, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x74, 0x72,
	0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x42, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x63,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x2a, 0x0a,
	0x0c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x5b, 0x0a, 0x10, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x6e, 0x74, 0x69, 0x73, 0x70, 0x61, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x70, 0x61, 0x6d, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x22, 0x74, 0x0a, 0x0a, 0x53, 0x61, 0x66, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0e, 0x53, 0x61, 0x66,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xe1, 0x03, 0x0a, 0x09, 0x57, 0x43, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x28, 0x0a, 0x05, 0x77, 0x63, 0x73, 0x74, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x52, 0x05, 0x77, 0x63, 0x73, 0x74, 0x66, 0x12, 0x28, 0x0a, 0x05, 0x77, 0x63,
	0x73, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75,
	0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x05, 0x77,
	0x63, 0x73, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x06, 0x63, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x63, 0x67, 0x69,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x74, 0x52, 0x0e, 0x61, 0x63, 0x67, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x63, 0x67, 0x69, 0x54, 0x75, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0a, 0x61, 0x63,
	0x67, 0x69, 0x54, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a,
	0x0a, 0x0e, 0x69, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0e, 0x69, 0x6f, 0x73, 0x74,
	0x75, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x12, 0x3a, 0x0a, 0x0e, 0x69, 0x6f,
	0x73, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x0e, 0x69, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x0a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x22, 0x5f, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x0f, 0x57, 0x78, 0x61, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x78, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x44, 0x65, 0x73, 0x63, 0x22, 0x45, 0x0a, 0x11, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x0c,
	0x4d, 0x69, 0x64, 0x61, 0x73, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x66, 0x4b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x66, 0x4b, 0x65, 0x79, 0x22, 0xeb,
	0x02, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x65, 0x73, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e,
	0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x65, 0x73, 0x6b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4d, 0x64, 0x35, 0x12, 0x30, 0x0a, 0x13,
	0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6e, 0x65, 0x77, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2c,
	0x0a, 0x11, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_MicroMsgBase_proto_rawDescOnce sync.Once
	file_MicroMsgBase_proto_rawDescData = file_MicroMsgBase_proto_rawDesc
)

func file_MicroMsgBase_proto_rawDescGZIP() []byte {
	file_MicroMsgBase_proto_rawDescOnce.Do(func() {
		file_MicroMsgBase_proto_rawDescData = protoimpl.X.CompressGZIP(file_MicroMsgBase_proto_rawDescData)
	})
	return file_MicroMsgBase_proto_rawDescData
}

var file_MicroMsgBase_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_MicroMsgBase_proto_goTypes = []interface{}{
	(*SKBuiltinBufferT)(nil),      // 0: SKBuiltinBuffer_t
	(*SKBuiltinStringT)(nil),      // 1: SKBuiltinString_t
	(*BaseRequest)(nil),           // 2: BaseRequest
	(*BaseResponse)(nil),          // 3: BaseResponse
	(*ECDHKey)(nil),               // 4: ECDHKey
	(*StyleKeyVal)(nil),           // 5: StyleKeyVal
	(*ShowStyleKey)(nil),          // 6: ShowStyleKey
	(*Host)(nil),                  // 7: Host
	(*HostList)(nil),              // 8: HostList
	(*NetworkControl)(nil),        // 9: NetworkControl
	(*BuiltinIP)(nil),             // 10: BuiltinIP
	(*BuiltinIPList)(nil),         // 11: BuiltinIPList
	(*CmdItem)(nil),               // 12: CmdItem
	(*CmdList)(nil),               // 13: CmdList
	(*CDNDnsPortInfo)(nil),        // 14: CDNDnsPortInfo
	(*CDNDnsInfo)(nil),            // 15: CDNDnsInfo
	(*RoomInfo)(nil),              // 16: RoomInfo
	(*SnsUserInfo)(nil),           // 17: SnsUserInfo
	(*CustomizedInfo)(nil),        // 18: CustomizedInfo
	(*LinkedinContactItem)(nil),   // 19: LinkedinContactItem
	(*AdditionalContactList)(nil), // 20: AdditionalContactList
	(*ChatRoomMemberInfo)(nil),    // 21: ChatRoomMemberInfo
	(*ChatRoomMemberData)(nil),    // 22: ChatRoomMemberData
	(*PhoneNumItem)(nil),          // 23: PhoneNumItem
	(*PhoneNumListInfo)(nil),      // 24: PhoneNumListInfo
	(*VerifyUserValidTicket)(nil), // 25: VerifyUserValidTicket
	(*SafeDevice)(nil),            // 26: SafeDevice
	(*SafeDeviceList)(nil),        // 27: SafeDeviceList
	(*WCExtInfo)(nil),             // 28: WCExtInfo
	(*AvatarInfo)(nil),            // 29: AvatarInfo
	(*AvatarInfoList)(nil),        // 30: AvatarInfoList
	(*WxaExternalInfo)(nil),       // 31: WxaExternalInfo
	(*ScopeInfo)(nil),             // 32: ScopeInfo
	(*JsApiBaseResponse)(nil),     // 33: JsApiBaseResponse
	(*MidasSdkInfo)(nil),          // 34: MidasSdkInfo
	(*HistoryInfo)(nil),           // 35: HistoryInfo
}
var file_MicroMsgBase_proto_depIdxs = []int32{
	1,  // 0: BaseResponse.errMsg:type_name -> SKBuiltinString_t
	0,  // 1: ECDHKey.key:type_name -> SKBuiltinBuffer_t
	5,  // 2: ShowStyleKey.key:type_name -> StyleKeyVal
	7,  // 3: HostList.list:type_name -> Host
	10, // 4: BuiltinIPList.longConnectIPList:type_name -> BuiltinIP
	10, // 5: BuiltinIPList.shortConnectIPList:type_name -> BuiltinIP
	0,  // 6: CmdItem.cmdBuf:type_name -> SKBuiltinBuffer_t
	12, // 7: CmdList.list:type_name -> CmdItem
	1,  // 8: CDNDnsInfo.frontIplist:type_name -> SKBuiltinString_t
	0,  // 9: CDNDnsInfo.authKey:type_name -> SKBuiltinBuffer_t
	1,  // 10: CDNDnsInfo.zoneIplist:type_name -> SKBuiltinString_t
	14, // 11: CDNDnsInfo.frontIpportList:type_name -> CDNDnsPortInfo
	14, // 12: CDNDnsInfo.zoneIpportList:type_name -> CDNDnsPortInfo
	0,  // 13: CDNDnsInfo.newAuthKey:type_name -> SKBuiltinBuffer_t
	1,  // 14: RoomInfo.userName:type_name -> SKBuiltinString_t
	1,  // 15: RoomInfo.nickName:type_name -> SKBuiltinString_t
	19, // 16: AdditionalContactList.linkedinContactItem:type_name -> LinkedinContactItem
	21, // 17: ChatRoomMemberData.chatRoomMemberList:type_name -> ChatRoomMemberInfo
	23, // 18: PhoneNumListInfo.phoneNumList:type_name -> PhoneNumItem
	26, // 19: SafeDeviceList.list:type_name -> SafeDevice
	0,  // 20: WCExtInfo.wcstf:type_name -> SKBuiltinBuffer_t
	0,  // 21: WCExtInfo.wcste:type_name -> SKBuiltinBuffer_t
	0,  // 22: WCExtInfo.ccData:type_name -> SKBuiltinBuffer_t
	0,  // 23: WCExtInfo.userAttrInfo:type_name -> SKBuiltinBuffer_t
	0,  // 24: WCExtInfo.acgiDeviceInfo:type_name -> SKBuiltinBuffer_t
	0,  // 25: WCExtInfo.acgiTuring:type_name -> SKBuiltinBuffer_t
	0,  // 26: WCExtInfo.deviceToken:type_name -> SKBuiltinBuffer_t
	0,  // 27: WCExtInfo.iosturingHuman:type_name -> SKBuiltinBuffer_t
	0,  // 28: WCExtInfo.iosturingOwner:type_name -> SKBuiltinBuffer_t
	29, // 29: AvatarInfoList.avatarList:type_name -> AvatarInfo
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_MicroMsgBase_proto_init() }
func file_MicroMsgBase_proto_init() {
	if File_MicroMsgBase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MicroMsgBase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SKBuiltinBufferT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SKBuiltinStringT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECDHKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StyleKeyVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowStyleKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuiltinIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuiltinIPList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDNDnsPortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDNDnsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnsUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedinContactItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalContactList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoomMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneNumItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneNumListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyUserValidTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeDeviceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WCExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxaExternalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsApiBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MidasSdkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MicroMsgBase_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MicroMsgBase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MicroMsgBase_proto_goTypes,
		DependencyIndexes: file_MicroMsgBase_proto_depIdxs,
		MessageInfos:      file_MicroMsgBase_proto_msgTypes,
	}.Build()
	File_MicroMsgBase_proto = out.File
	file_MicroMsgBase_proto_rawDesc = nil
	file_MicroMsgBase_proto_goTypes = nil
	file_MicroMsgBase_proto_depIdxs = nil
}
