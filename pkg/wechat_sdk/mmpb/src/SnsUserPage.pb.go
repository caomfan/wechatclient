// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: SnsUserPage.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SnsUserPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest     *BaseRequest `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	FirstPageMd5    *string      `protobuf:"bytes,2,opt,name=firstPageMd5" json:"firstPageMd5,omitempty"`
	Username        *string      `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	MaxId           *uint64      `protobuf:"varint,4,req,name=maxId" json:"maxId,omitempty"`
	Source          *uint32      `protobuf:"varint,5,opt,name=source" json:"source,omitempty"`
	MinFilterId     *uint64      `protobuf:"varint,6,opt,name=minFilterId" json:"minFilterId,omitempty"`
	LastRequestTime *uint32      `protobuf:"varint,7,opt,name=lastRequestTime" json:"lastRequestTime,omitempty"`
	FilterType      *uint32      `protobuf:"varint,8,opt,name=filterType" json:"filterType,omitempty"`
}

func (x *SnsUserPageRequest) Reset() {
	*x = SnsUserPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SnsUserPage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnsUserPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnsUserPageRequest) ProtoMessage() {}

func (x *SnsUserPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SnsUserPage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnsUserPageRequest.ProtoReflect.Descriptor instead.
func (*SnsUserPageRequest) Descriptor() ([]byte, []int) {
	return file_SnsUserPage_proto_rawDescGZIP(), []int{0}
}

func (x *SnsUserPageRequest) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *SnsUserPageRequest) GetFirstPageMd5() string {
	if x != nil && x.FirstPageMd5 != nil {
		return *x.FirstPageMd5
	}
	return ""
}

func (x *SnsUserPageRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SnsUserPageRequest) GetMaxId() uint64 {
	if x != nil && x.MaxId != nil {
		return *x.MaxId
	}
	return 0
}

func (x *SnsUserPageRequest) GetSource() uint32 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

func (x *SnsUserPageRequest) GetMinFilterId() uint64 {
	if x != nil && x.MinFilterId != nil {
		return *x.MinFilterId
	}
	return 0
}

func (x *SnsUserPageRequest) GetLastRequestTime() uint32 {
	if x != nil && x.LastRequestTime != nil {
		return *x.LastRequestTime
	}
	return 0
}

func (x *SnsUserPageRequest) GetFilterType() uint32 {
	if x != nil && x.FilterType != nil {
		return *x.FilterType
	}
	return 0
}

type SnsUserPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse          *BaseResponse    `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	FirstPageMd5          *string          `protobuf:"bytes,2,opt,name=firstPageMd5" json:"firstPageMd5,omitempty"`
	ObjectCount           *uint32          `protobuf:"varint,3,req,name=objectCount" json:"objectCount,omitempty"`
	ObjectList            []*SnsObject     `protobuf:"bytes,4,rep,name=objectList" json:"objectList,omitempty"`
	ObjectTotalCount      *uint32          `protobuf:"varint,5,req,name=objectTotalCount" json:"objectTotalCount,omitempty"`
	SnsUserInfo           *SnsUserInfo     `protobuf:"bytes,6,opt,name=snsUserInfo" json:"snsUserInfo,omitempty"`
	NewRequestTime        *uint32          `protobuf:"varint,7,opt,name=newRequestTime" json:"newRequestTime,omitempty"`
	ObjectCountForSameMd5 *uint32          `protobuf:"varint,8,opt,name=objectCountForSameMd5" json:"objectCountForSameMd5,omitempty"`
	ServerConfig          *SnsServerConfig `protobuf:"bytes,9,opt,name=serverConfig" json:"serverConfig,omitempty"`
	LimitedId             *uint64          `protobuf:"varint,10,opt,name=limitedId" json:"limitedId,omitempty"`
	ContinueId            *uint64          `protobuf:"varint,11,opt,name=continueId" json:"continueId,omitempty"`
	RetTips               *string          `protobuf:"bytes,12,opt,name=retTips" json:"retTips,omitempty"`
}

func (x *SnsUserPageResponse) Reset() {
	*x = SnsUserPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SnsUserPage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnsUserPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnsUserPageResponse) ProtoMessage() {}

func (x *SnsUserPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SnsUserPage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnsUserPageResponse.ProtoReflect.Descriptor instead.
func (*SnsUserPageResponse) Descriptor() ([]byte, []int) {
	return file_SnsUserPage_proto_rawDescGZIP(), []int{1}
}

func (x *SnsUserPageResponse) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *SnsUserPageResponse) GetFirstPageMd5() string {
	if x != nil && x.FirstPageMd5 != nil {
		return *x.FirstPageMd5
	}
	return ""
}

func (x *SnsUserPageResponse) GetObjectCount() uint32 {
	if x != nil && x.ObjectCount != nil {
		return *x.ObjectCount
	}
	return 0
}

func (x *SnsUserPageResponse) GetObjectList() []*SnsObject {
	if x != nil {
		return x.ObjectList
	}
	return nil
}

func (x *SnsUserPageResponse) GetObjectTotalCount() uint32 {
	if x != nil && x.ObjectTotalCount != nil {
		return *x.ObjectTotalCount
	}
	return 0
}

func (x *SnsUserPageResponse) GetSnsUserInfo() *SnsUserInfo {
	if x != nil {
		return x.SnsUserInfo
	}
	return nil
}

func (x *SnsUserPageResponse) GetNewRequestTime() uint32 {
	if x != nil && x.NewRequestTime != nil {
		return *x.NewRequestTime
	}
	return 0
}

func (x *SnsUserPageResponse) GetObjectCountForSameMd5() uint32 {
	if x != nil && x.ObjectCountForSameMd5 != nil {
		return *x.ObjectCountForSameMd5
	}
	return 0
}

func (x *SnsUserPageResponse) GetServerConfig() *SnsServerConfig {
	if x != nil {
		return x.ServerConfig
	}
	return nil
}

func (x *SnsUserPageResponse) GetLimitedId() uint64 {
	if x != nil && x.LimitedId != nil {
		return *x.LimitedId
	}
	return 0
}

func (x *SnsUserPageResponse) GetContinueId() uint64 {
	if x != nil && x.ContinueId != nil {
		return *x.ContinueId
	}
	return 0
}

func (x *SnsUserPageResponse) GetRetTips() string {
	if x != nil && x.RetTips != nil {
		return *x.RetTips
	}
	return ""
}

var File_SnsUserPage_proto protoreflect.FileDescriptor

var file_SnsUserPage_proto_rawDesc = []byte{
	0x0a, 0x11, 0x53, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x6e,
	0x73, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x02, 0x0a, 0x12,
	0x53, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4d,
	0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x82, 0x04, 0x0a,
	0x13, 0x53, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x6e, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x6e, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x6e, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x53,
	0x61, 0x6d, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x65,
	0x4d, 0x64, 0x35, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x54, 0x69,
	0x70, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x74, 0x54, 0x69, 0x70,
	0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_SnsUserPage_proto_rawDescOnce sync.Once
	file_SnsUserPage_proto_rawDescData = file_SnsUserPage_proto_rawDesc
)

func file_SnsUserPage_proto_rawDescGZIP() []byte {
	file_SnsUserPage_proto_rawDescOnce.Do(func() {
		file_SnsUserPage_proto_rawDescData = protoimpl.X.CompressGZIP(file_SnsUserPage_proto_rawDescData)
	})
	return file_SnsUserPage_proto_rawDescData
}

var file_SnsUserPage_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_SnsUserPage_proto_goTypes = []interface{}{
	(*SnsUserPageRequest)(nil),  // 0: SnsUserPageRequest
	(*SnsUserPageResponse)(nil), // 1: SnsUserPageResponse
	(*BaseRequest)(nil),         // 2: BaseRequest
	(*BaseResponse)(nil),        // 3: BaseResponse
	(*SnsObject)(nil),           // 4: SnsObject
	(*SnsUserInfo)(nil),         // 5: SnsUserInfo
	(*SnsServerConfig)(nil),     // 6: SnsServerConfig
}
var file_SnsUserPage_proto_depIdxs = []int32{
	2, // 0: SnsUserPageRequest.baseRequest:type_name -> BaseRequest
	3, // 1: SnsUserPageResponse.baseResponse:type_name -> BaseResponse
	4, // 2: SnsUserPageResponse.objectList:type_name -> SnsObject
	5, // 3: SnsUserPageResponse.snsUserInfo:type_name -> SnsUserInfo
	6, // 4: SnsUserPageResponse.serverConfig:type_name -> SnsServerConfig
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_SnsUserPage_proto_init() }
func file_SnsUserPage_proto_init() {
	if File_SnsUserPage_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	file_MicroSnsBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SnsUserPage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnsUserPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SnsUserPage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnsUserPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SnsUserPage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SnsUserPage_proto_goTypes,
		DependencyIndexes: file_SnsUserPage_proto_depIdxs,
		MessageInfos:      file_SnsUserPage_proto_msgTypes,
	}.Build()
	File_SnsUserPage_proto = out.File
	file_SnsUserPage_proto_rawDesc = nil
	file_SnsUserPage_proto_goTypes = nil
	file_SnsUserPage_proto_depIdxs = nil
}
