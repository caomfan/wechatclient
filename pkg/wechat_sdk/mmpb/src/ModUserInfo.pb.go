// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: ModUserInfo.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DisturbTimeSpan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime *uint32 `protobuf:"varint,1,req,name=beginTime" json:"beginTime,omitempty"`
	EndTime   *uint32 `protobuf:"varint,2,req,name=endTime" json:"endTime,omitempty"`
}

func (x *DisturbTimeSpan) Reset() {
	*x = DisturbTimeSpan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModUserInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisturbTimeSpan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisturbTimeSpan) ProtoMessage() {}

func (x *DisturbTimeSpan) ProtoReflect() protoreflect.Message {
	mi := &file_ModUserInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisturbTimeSpan.ProtoReflect.Descriptor instead.
func (*DisturbTimeSpan) Descriptor() ([]byte, []int) {
	return file_ModUserInfo_proto_rawDescGZIP(), []int{0}
}

func (x *DisturbTimeSpan) GetBeginTime() uint32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *DisturbTimeSpan) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type DisturbSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NightSetting  *uint32          `protobuf:"varint,1,req,name=nightSetting" json:"nightSetting,omitempty"`
	MightTime     *DisturbTimeSpan `protobuf:"bytes,2,req,name=mightTime" json:"mightTime,omitempty"`
	AllDaySetting *uint32          `protobuf:"varint,3,req,name=allDaySetting" json:"allDaySetting,omitempty"`
	AllDayTime    *DisturbTimeSpan `protobuf:"bytes,4,req,name=allDayTime" json:"allDayTime,omitempty"`
}

func (x *DisturbSetting) Reset() {
	*x = DisturbSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModUserInfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisturbSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisturbSetting) ProtoMessage() {}

func (x *DisturbSetting) ProtoReflect() protoreflect.Message {
	mi := &file_ModUserInfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisturbSetting.ProtoReflect.Descriptor instead.
func (*DisturbSetting) Descriptor() ([]byte, []int) {
	return file_ModUserInfo_proto_rawDescGZIP(), []int{1}
}

func (x *DisturbSetting) GetNightSetting() uint32 {
	if x != nil && x.NightSetting != nil {
		return *x.NightSetting
	}
	return 0
}

func (x *DisturbSetting) GetMightTime() *DisturbTimeSpan {
	if x != nil {
		return x.MightTime
	}
	return nil
}

func (x *DisturbSetting) GetAllDaySetting() uint32 {
	if x != nil && x.AllDaySetting != nil {
		return *x.AllDaySetting
	}
	return 0
}

func (x *DisturbSetting) GetAllDayTime() *DisturbTimeSpan {
	if x != nil {
		return x.AllDayTime
	}
	return nil
}

type GmailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GmailAcct    *string `protobuf:"bytes,1,opt,name=gmailAcct" json:"gmailAcct,omitempty"`
	GmailSwitch  *uint32 `protobuf:"varint,2,req,name=gmailSwitch" json:"gmailSwitch,omitempty"`
	GmailErrCode *uint32 `protobuf:"varint,3,req,name=gmailErrCode" json:"gmailErrCode,omitempty"`
}

func (x *GmailInfo) Reset() {
	*x = GmailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModUserInfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GmailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GmailInfo) ProtoMessage() {}

func (x *GmailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ModUserInfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GmailInfo.ProtoReflect.Descriptor instead.
func (*GmailInfo) Descriptor() ([]byte, []int) {
	return file_ModUserInfo_proto_rawDescGZIP(), []int{2}
}

func (x *GmailInfo) GetGmailAcct() string {
	if x != nil && x.GmailAcct != nil {
		return *x.GmailAcct
	}
	return ""
}

func (x *GmailInfo) GetGmailSwitch() uint32 {
	if x != nil && x.GmailSwitch != nil {
		return *x.GmailSwitch
	}
	return 0
}

func (x *GmailInfo) GetGmailErrCode() uint32 {
	if x != nil && x.GmailErrCode != nil {
		return *x.GmailErrCode
	}
	return 0
}

type GmailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *uint32      `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	List  []*GmailInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (x *GmailList) Reset() {
	*x = GmailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModUserInfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GmailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GmailList) ProtoMessage() {}

func (x *GmailList) ProtoReflect() protoreflect.Message {
	mi := &file_ModUserInfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GmailList.ProtoReflect.Descriptor instead.
func (*GmailList) Descriptor() ([]byte, []int) {
	return file_ModUserInfo_proto_rawDescGZIP(), []int{3}
}

func (x *GmailList) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *GmailList) GetList() []*GmailInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ModUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BitFlag        *uint32           `protobuf:"varint,1,req,name=bitFlag" json:"bitFlag,omitempty"`
	UserName       *SKBuiltinStringT `protobuf:"bytes,2,req,name=userName" json:"userName,omitempty"`
	NickName       *SKBuiltinStringT `protobuf:"bytes,3,req,name=nickName" json:"nickName,omitempty"`
	BindUin        *uint32           `protobuf:"varint,4,req,name=bindUin" json:"bindUin,omitempty"`
	BindEmail      *SKBuiltinStringT `protobuf:"bytes,5,req,name=bindEmail" json:"bindEmail,omitempty"`
	BindMobile     *SKBuiltinStringT `protobuf:"bytes,6,req,name=bindMobile" json:"bindMobile,omitempty"`
	Status         *uint32           `protobuf:"varint,7,req,name=status" json:"status,omitempty"`
	ImgLen         *uint32           `protobuf:"varint,8,req,name=imgLen" json:"imgLen,omitempty"`
	ImgBuf         []byte            `protobuf:"bytes,9,opt,name=imgBuf" json:"imgBuf,omitempty"`
	Sex            *int32            `protobuf:"varint,10,opt,name=sex" json:"sex,omitempty"`
	Province       *string           `protobuf:"bytes,11,opt,name=province" json:"province,omitempty"`
	City           *string           `protobuf:"bytes,12,opt,name=city" json:"city,omitempty"`
	Signature      *string           `protobuf:"bytes,13,opt,name=signature" json:"signature,omitempty"`
	PersonalCard   *uint32           `protobuf:"varint,14,opt,name=personalCard" json:"personalCard,omitempty"`
	DisturbSetting *DisturbSetting   `protobuf:"bytes,15,opt,name=disturbSetting" json:"disturbSetting,omitempty"`
	PluginFlag     *uint32           `protobuf:"varint,16,opt,name=pluginFlag" json:"pluginFlag,omitempty"`
	VerifyFlag     *uint32           `protobuf:"varint,17,opt,name=verifyFlag" json:"verifyFlag,omitempty"`
	VerifyInfo     *string           `protobuf:"bytes,18,opt,name=verifyInfo" json:"verifyInfo,omitempty"`
	Point          *int32            `protobuf:"varint,19,opt,name=point" json:"point,omitempty"`
	Experience     *int32            `protobuf:"varint,20,opt,name=experience" json:"experience,omitempty"`
	Level          *int32            `protobuf:"varint,21,opt,name=level" json:"level,omitempty"`
	LevelLowExp    *int32            `protobuf:"varint,22,opt,name=levelLowExp" json:"levelLowExp,omitempty"`
	LevelHighExp   *int32            `protobuf:"varint,23,opt,name=levelHighExp" json:"levelHighExp,omitempty"`
	Weibo          *string           `protobuf:"bytes,24,opt,name=weibo" json:"weibo,omitempty"`
	PluginSwitch   *uint32           `protobuf:"varint,25,opt,name=pluginSwitch" json:"pluginSwitch,omitempty"`
	GmailList      *GmailList        `protobuf:"bytes,26,opt,name=gmailList" json:"gmailList,omitempty"`
	Alias          *string           `protobuf:"bytes,27,opt,name=alias" json:"alias,omitempty"`
	WeiboNickname  *string           `protobuf:"bytes,28,opt,name=weiboNickname" json:"weiboNickname,omitempty"`
	WeiboFlag      *uint32           `protobuf:"varint,29,opt,name=weiboFlag" json:"weiboFlag,omitempty"`
	FaceBookFlag   *uint32           `protobuf:"varint,30,opt,name=faceBookFlag" json:"faceBookFlag,omitempty"`
	FbUserId       *uint64           `protobuf:"varint,31,opt,name=fbUserId" json:"fbUserId,omitempty"`
	FbUserName     *string           `protobuf:"bytes,32,opt,name=fbUserName" json:"fbUserName,omitempty"`
	AlbumStyle     *int32            `protobuf:"varint,33,opt,name=albumStyle" json:"albumStyle,omitempty"`
	AlbumFlag      *int32            `protobuf:"varint,34,opt,name=albumFlag" json:"albumFlag,omitempty"`
	AlbumBgImgId   *string           `protobuf:"bytes,35,opt,name=albumBgImgId" json:"albumBgImgId,omitempty"`
	TxNewsCategory *uint32           `protobuf:"varint,36,opt,name=txNewsCategory" json:"txNewsCategory,omitempty"`
	FbToken        *string           `protobuf:"bytes,37,opt,name=fbToken" json:"fbToken,omitempty"`
	Country        *string           `protobuf:"bytes,38,opt,name=country" json:"country,omitempty"`
}

func (x *ModUserInfo) Reset() {
	*x = ModUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModUserInfo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModUserInfo) ProtoMessage() {}

func (x *ModUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ModUserInfo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModUserInfo.ProtoReflect.Descriptor instead.
func (*ModUserInfo) Descriptor() ([]byte, []int) {
	return file_ModUserInfo_proto_rawDescGZIP(), []int{4}
}

func (x *ModUserInfo) GetBitFlag() uint32 {
	if x != nil && x.BitFlag != nil {
		return *x.BitFlag
	}
	return 0
}

func (x *ModUserInfo) GetUserName() *SKBuiltinStringT {
	if x != nil {
		return x.UserName
	}
	return nil
}

func (x *ModUserInfo) GetNickName() *SKBuiltinStringT {
	if x != nil {
		return x.NickName
	}
	return nil
}

func (x *ModUserInfo) GetBindUin() uint32 {
	if x != nil && x.BindUin != nil {
		return *x.BindUin
	}
	return 0
}

func (x *ModUserInfo) GetBindEmail() *SKBuiltinStringT {
	if x != nil {
		return x.BindEmail
	}
	return nil
}

func (x *ModUserInfo) GetBindMobile() *SKBuiltinStringT {
	if x != nil {
		return x.BindMobile
	}
	return nil
}

func (x *ModUserInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ModUserInfo) GetImgLen() uint32 {
	if x != nil && x.ImgLen != nil {
		return *x.ImgLen
	}
	return 0
}

func (x *ModUserInfo) GetImgBuf() []byte {
	if x != nil {
		return x.ImgBuf
	}
	return nil
}

func (x *ModUserInfo) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *ModUserInfo) GetProvince() string {
	if x != nil && x.Province != nil {
		return *x.Province
	}
	return ""
}

func (x *ModUserInfo) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *ModUserInfo) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *ModUserInfo) GetPersonalCard() uint32 {
	if x != nil && x.PersonalCard != nil {
		return *x.PersonalCard
	}
	return 0
}

func (x *ModUserInfo) GetDisturbSetting() *DisturbSetting {
	if x != nil {
		return x.DisturbSetting
	}
	return nil
}

func (x *ModUserInfo) GetPluginFlag() uint32 {
	if x != nil && x.PluginFlag != nil {
		return *x.PluginFlag
	}
	return 0
}

func (x *ModUserInfo) GetVerifyFlag() uint32 {
	if x != nil && x.VerifyFlag != nil {
		return *x.VerifyFlag
	}
	return 0
}

func (x *ModUserInfo) GetVerifyInfo() string {
	if x != nil && x.VerifyInfo != nil {
		return *x.VerifyInfo
	}
	return ""
}

func (x *ModUserInfo) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *ModUserInfo) GetExperience() int32 {
	if x != nil && x.Experience != nil {
		return *x.Experience
	}
	return 0
}

func (x *ModUserInfo) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *ModUserInfo) GetLevelLowExp() int32 {
	if x != nil && x.LevelLowExp != nil {
		return *x.LevelLowExp
	}
	return 0
}

func (x *ModUserInfo) GetLevelHighExp() int32 {
	if x != nil && x.LevelHighExp != nil {
		return *x.LevelHighExp
	}
	return 0
}

func (x *ModUserInfo) GetWeibo() string {
	if x != nil && x.Weibo != nil {
		return *x.Weibo
	}
	return ""
}

func (x *ModUserInfo) GetPluginSwitch() uint32 {
	if x != nil && x.PluginSwitch != nil {
		return *x.PluginSwitch
	}
	return 0
}

func (x *ModUserInfo) GetGmailList() *GmailList {
	if x != nil {
		return x.GmailList
	}
	return nil
}

func (x *ModUserInfo) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *ModUserInfo) GetWeiboNickname() string {
	if x != nil && x.WeiboNickname != nil {
		return *x.WeiboNickname
	}
	return ""
}

func (x *ModUserInfo) GetWeiboFlag() uint32 {
	if x != nil && x.WeiboFlag != nil {
		return *x.WeiboFlag
	}
	return 0
}

func (x *ModUserInfo) GetFaceBookFlag() uint32 {
	if x != nil && x.FaceBookFlag != nil {
		return *x.FaceBookFlag
	}
	return 0
}

func (x *ModUserInfo) GetFbUserId() uint64 {
	if x != nil && x.FbUserId != nil {
		return *x.FbUserId
	}
	return 0
}

func (x *ModUserInfo) GetFbUserName() string {
	if x != nil && x.FbUserName != nil {
		return *x.FbUserName
	}
	return ""
}

func (x *ModUserInfo) GetAlbumStyle() int32 {
	if x != nil && x.AlbumStyle != nil {
		return *x.AlbumStyle
	}
	return 0
}

func (x *ModUserInfo) GetAlbumFlag() int32 {
	if x != nil && x.AlbumFlag != nil {
		return *x.AlbumFlag
	}
	return 0
}

func (x *ModUserInfo) GetAlbumBgImgId() string {
	if x != nil && x.AlbumBgImgId != nil {
		return *x.AlbumBgImgId
	}
	return ""
}

func (x *ModUserInfo) GetTxNewsCategory() uint32 {
	if x != nil && x.TxNewsCategory != nil {
		return *x.TxNewsCategory
	}
	return 0
}

func (x *ModUserInfo) GetFbToken() string {
	if x != nil && x.FbToken != nil {
		return *x.FbToken
	}
	return ""
}

func (x *ModUserInfo) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

var File_ModUserInfo_proto protoreflect.FileDescriptor

var file_ModUserInfo_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x74, 0x75,
	0x72, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x69, 0x67,
	0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x09,
	0x6d, 0x69, 0x67, 0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x6c,
	0x44, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x30, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x6f, 0x0a, 0x09, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x0b, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x41, 0x0a, 0x09, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xda, 0x09, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x46, 0x6c, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x2e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x62, 0x69, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53,
	0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x52, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x62,
	0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x4c, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x4c, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x42, 0x75, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x69, 0x6d, 0x67, 0x42, 0x75, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x45,
	0x78, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x69, 0x67, 0x68, 0x45,
	0x78, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x48,
	0x69, 0x67, 0x68, 0x45, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x28, 0x0a, 0x09, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x09, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x65, 0x69, 0x62, 0x6f,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x62, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x62, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x62, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x67, 0x49, 0x6d, 0x67,
	0x49, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x42,
	0x67, 0x49, 0x6d, 0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x78, 0x4e, 0x65, 0x77, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x74, 0x78, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_ModUserInfo_proto_rawDescOnce sync.Once
	file_ModUserInfo_proto_rawDescData = file_ModUserInfo_proto_rawDesc
)

func file_ModUserInfo_proto_rawDescGZIP() []byte {
	file_ModUserInfo_proto_rawDescOnce.Do(func() {
		file_ModUserInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_ModUserInfo_proto_rawDescData)
	})
	return file_ModUserInfo_proto_rawDescData
}

var file_ModUserInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ModUserInfo_proto_goTypes = []interface{}{
	(*DisturbTimeSpan)(nil),  // 0: DisturbTimeSpan
	(*DisturbSetting)(nil),   // 1: DisturbSetting
	(*GmailInfo)(nil),        // 2: GmailInfo
	(*GmailList)(nil),        // 3: GmailList
	(*ModUserInfo)(nil),      // 4: ModUserInfo
	(*SKBuiltinStringT)(nil), // 5: SKBuiltinString_t
}
var file_ModUserInfo_proto_depIdxs = []int32{
	0, // 0: DisturbSetting.mightTime:type_name -> DisturbTimeSpan
	0, // 1: DisturbSetting.allDayTime:type_name -> DisturbTimeSpan
	2, // 2: GmailList.list:type_name -> GmailInfo
	5, // 3: ModUserInfo.userName:type_name -> SKBuiltinString_t
	5, // 4: ModUserInfo.nickName:type_name -> SKBuiltinString_t
	5, // 5: ModUserInfo.bindEmail:type_name -> SKBuiltinString_t
	5, // 6: ModUserInfo.bindMobile:type_name -> SKBuiltinString_t
	1, // 7: ModUserInfo.disturbSetting:type_name -> DisturbSetting
	3, // 8: ModUserInfo.gmailList:type_name -> GmailList
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_ModUserInfo_proto_init() }
func file_ModUserInfo_proto_init() {
	if File_ModUserInfo_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ModUserInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisturbTimeSpan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModUserInfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisturbSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModUserInfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GmailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModUserInfo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GmailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModUserInfo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ModUserInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ModUserInfo_proto_goTypes,
		DependencyIndexes: file_ModUserInfo_proto_depIdxs,
		MessageInfos:      file_ModUserInfo_proto_msgTypes,
	}.Build()
	File_ModUserInfo_proto = out.File
	file_ModUserInfo_proto_rawDesc = nil
	file_ModUserInfo_proto_goTypes = nil
	file_ModUserInfo_proto_depIdxs = nil
}
