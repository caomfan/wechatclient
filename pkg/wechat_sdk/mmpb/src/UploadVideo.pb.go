// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: UploadVideo.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendVideoUploadMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest       *BaseRequest `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	ClientMsgId       *string      `protobuf:"bytes,2,opt,name=clientMsgId" json:"clientMsgId,omitempty"`
	FromUserName      *string      `protobuf:"bytes,3,opt,name=fromUserName" json:"fromUserName,omitempty"`
	ToUserName        *string      `protobuf:"bytes,4,opt,name=toUserName" json:"toUserName,omitempty"`
	CdnthumbUrl       *string      `protobuf:"bytes,5,opt,name=cdnthumbUrl" json:"cdnthumbUrl,omitempty"`
	CdnthumbAeskey    *string      `protobuf:"bytes,6,opt,name=cdnthumbAeskey" json:"cdnthumbAeskey,omitempty"`
	CdnthumbImgSize   *uint32      `protobuf:"varint,7,opt,name=cdnthumbImgSize" json:"cdnthumbImgSize,omitempty"`
	CdnthumbImgHeight *uint32      `protobuf:"varint,8,opt,name=cdnthumbImgHeight" json:"cdnthumbImgHeight,omitempty"`
	CdnthumbImgWidth  *uint32      `protobuf:"varint,9,opt,name=cdnthumbImgWidth" json:"cdnthumbImgWidth,omitempty"`
	PlayLength        *uint32      `protobuf:"varint,10,opt,name=playLength" json:"playLength,omitempty"`
	MsgSource         *string      `protobuf:"bytes,11,opt,name=msgSource" json:"msgSource,omitempty"`
	VideoMd5          *string      `protobuf:"bytes,12,opt,name=videoMd5" json:"videoMd5,omitempty"`
	VideoNewMd5       *string      `protobuf:"bytes,13,opt,name=videoNewMd5" json:"videoNewMd5,omitempty"`
	VideoLength       *uint32      `protobuf:"varint,14,opt,name=videoLength" json:"videoLength,omitempty"`
	RawVideoMd5       *string      `protobuf:"bytes,15,opt,name=rawVideoMd5" json:"rawVideoMd5,omitempty"`
	RawVideoLength    *uint32      `protobuf:"varint,16,opt,name=rawVideoLength" json:"rawVideoLength,omitempty"`
	AppId             *string      `protobuf:"bytes,17,opt,name=appId" json:"appId,omitempty"`
	MessageAction     *string      `protobuf:"bytes,18,opt,name=messageAction" json:"messageAction,omitempty"`
	MessageExt        *string      `protobuf:"bytes,19,opt,name=messageExt" json:"messageExt,omitempty"`
	MediaTagName      *string      `protobuf:"bytes,20,opt,name=mediaTagName" json:"mediaTagName,omitempty"`
	CdnthumbMd5       *string      `protobuf:"bytes,21,opt,name=cdnthumbMd5" json:"cdnthumbMd5,omitempty"`
}

func (x *SendVideoUploadMsgReq) Reset() {
	*x = SendVideoUploadMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UploadVideo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVideoUploadMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVideoUploadMsgReq) ProtoMessage() {}

func (x *SendVideoUploadMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_UploadVideo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVideoUploadMsgReq.ProtoReflect.Descriptor instead.
func (*SendVideoUploadMsgReq) Descriptor() ([]byte, []int) {
	return file_UploadVideo_proto_rawDescGZIP(), []int{0}
}

func (x *SendVideoUploadMsgReq) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *SendVideoUploadMsgReq) GetClientMsgId() string {
	if x != nil && x.ClientMsgId != nil {
		return *x.ClientMsgId
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetFromUserName() string {
	if x != nil && x.FromUserName != nil {
		return *x.FromUserName
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetToUserName() string {
	if x != nil && x.ToUserName != nil {
		return *x.ToUserName
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetCdnthumbUrl() string {
	if x != nil && x.CdnthumbUrl != nil {
		return *x.CdnthumbUrl
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetCdnthumbAeskey() string {
	if x != nil && x.CdnthumbAeskey != nil {
		return *x.CdnthumbAeskey
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetCdnthumbImgSize() uint32 {
	if x != nil && x.CdnthumbImgSize != nil {
		return *x.CdnthumbImgSize
	}
	return 0
}

func (x *SendVideoUploadMsgReq) GetCdnthumbImgHeight() uint32 {
	if x != nil && x.CdnthumbImgHeight != nil {
		return *x.CdnthumbImgHeight
	}
	return 0
}

func (x *SendVideoUploadMsgReq) GetCdnthumbImgWidth() uint32 {
	if x != nil && x.CdnthumbImgWidth != nil {
		return *x.CdnthumbImgWidth
	}
	return 0
}

func (x *SendVideoUploadMsgReq) GetPlayLength() uint32 {
	if x != nil && x.PlayLength != nil {
		return *x.PlayLength
	}
	return 0
}

func (x *SendVideoUploadMsgReq) GetMsgSource() string {
	if x != nil && x.MsgSource != nil {
		return *x.MsgSource
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetVideoMd5() string {
	if x != nil && x.VideoMd5 != nil {
		return *x.VideoMd5
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetVideoNewMd5() string {
	if x != nil && x.VideoNewMd5 != nil {
		return *x.VideoNewMd5
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetVideoLength() uint32 {
	if x != nil && x.VideoLength != nil {
		return *x.VideoLength
	}
	return 0
}

func (x *SendVideoUploadMsgReq) GetRawVideoMd5() string {
	if x != nil && x.RawVideoMd5 != nil {
		return *x.RawVideoMd5
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetRawVideoLength() uint32 {
	if x != nil && x.RawVideoLength != nil {
		return *x.RawVideoLength
	}
	return 0
}

func (x *SendVideoUploadMsgReq) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetMessageAction() string {
	if x != nil && x.MessageAction != nil {
		return *x.MessageAction
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetMessageExt() string {
	if x != nil && x.MessageExt != nil {
		return *x.MessageExt
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetMediaTagName() string {
	if x != nil && x.MediaTagName != nil {
		return *x.MediaTagName
	}
	return ""
}

func (x *SendVideoUploadMsgReq) GetCdnthumbMd5() string {
	if x != nil && x.CdnthumbMd5 != nil {
		return *x.CdnthumbMd5
	}
	return ""
}

type SendVideoUploadMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse     *BaseResponse `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	NewMsgId         *uint64       `protobuf:"varint,2,opt,name=newMsgId" json:"newMsgId,omitempty"`
	VideoUploadToken *string       `protobuf:"bytes,3,opt,name=videoUploadToken" json:"videoUploadToken,omitempty"`
}

func (x *SendVideoUploadMsgResp) Reset() {
	*x = SendVideoUploadMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UploadVideo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVideoUploadMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVideoUploadMsgResp) ProtoMessage() {}

func (x *SendVideoUploadMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_UploadVideo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVideoUploadMsgResp.ProtoReflect.Descriptor instead.
func (*SendVideoUploadMsgResp) Descriptor() ([]byte, []int) {
	return file_UploadVideo_proto_rawDescGZIP(), []int{1}
}

func (x *SendVideoUploadMsgResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *SendVideoUploadMsgResp) GetNewMsgId() uint64 {
	if x != nil && x.NewMsgId != nil {
		return *x.NewMsgId
	}
	return 0
}

func (x *SendVideoUploadMsgResp) GetVideoUploadToken() string {
	if x != nil && x.VideoUploadToken != nil {
		return *x.VideoUploadToken
	}
	return ""
}

type UploadVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest          *BaseRequest      `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	ClientMsgId          *string           `protobuf:"bytes,2,opt,name=clientMsgId" json:"clientMsgId,omitempty"`
	FromUserName         *string           `protobuf:"bytes,3,opt,name=fromUserName" json:"fromUserName,omitempty"`
	ToUserName           *string           `protobuf:"bytes,4,opt,name=toUserName" json:"toUserName,omitempty"`
	ThumbTotalLen        *uint32           `protobuf:"varint,5,req,name=thumbTotalLen" json:"thumbTotalLen,omitempty"`
	ThumbStartPos        *uint32           `protobuf:"varint,6,req,name=thumbStartPos" json:"thumbStartPos,omitempty"`
	ThumbData            *SKBuiltinBufferT `protobuf:"bytes,7,req,name=thumbData" json:"thumbData,omitempty"`
	VideoTotalLen        *uint32           `protobuf:"varint,8,req,name=videoTotalLen" json:"videoTotalLen,omitempty"`
	VideoStartPos        *uint32           `protobuf:"varint,9,req,name=videoStartPos" json:"videoStartPos,omitempty"`
	VideoData            *SKBuiltinBufferT `protobuf:"bytes,10,req,name=videoData" json:"videoData,omitempty"`
	PlayLength           *uint32           `protobuf:"varint,11,req,name=playLength" json:"playLength,omitempty"`
	NetworkEnv           *uint32           `protobuf:"varint,12,opt,name=networkEnv" json:"networkEnv,omitempty"`
	CameraType           *uint32           `protobuf:"varint,13,opt,name=cameraType" json:"cameraType,omitempty"`
	FuncFlag             *uint32           `protobuf:"varint,14,opt,name=funcFlag" json:"funcFlag,omitempty"`
	MsgSource            *string           `protobuf:"bytes,15,opt,name=msgSource" json:"msgSource,omitempty"`
	CdnvideoUrl          *string           `protobuf:"bytes,16,opt,name=cdnvideoUrl" json:"cdnvideoUrl,omitempty"`
	Aeskey               *string           `protobuf:"bytes,17,opt,name=aeskey" json:"aeskey,omitempty"`
	EncryVer             *int32            `protobuf:"varint,18,opt,name=encryVer" json:"encryVer,omitempty"`
	CdnthumbUrl          *string           `protobuf:"bytes,19,opt,name=cdnthumbUrl" json:"cdnthumbUrl,omitempty"`
	CdnthumbImgSize      *int32            `protobuf:"varint,20,opt,name=cdnthumbImgSize" json:"cdnthumbImgSize,omitempty"`
	CdnthumbImgHeight    *int32            `protobuf:"varint,21,opt,name=cdnthumbImgHeight" json:"cdnthumbImgHeight,omitempty"`
	CdnthumbImgWidth     *int32            `protobuf:"varint,22,opt,name=cdnthumbImgWidth" json:"cdnthumbImgWidth,omitempty"`
	CdnthumbAeskey       *string           `protobuf:"bytes,23,opt,name=cdnthumbAeskey" json:"cdnthumbAeskey,omitempty"`
	VideoFrom            *int32            `protobuf:"varint,24,opt,name=videoFrom" json:"videoFrom,omitempty"`
	ReqTime              *uint32           `protobuf:"varint,25,opt,name=reqTime" json:"reqTime,omitempty"`
	VideoMd5             *string           `protobuf:"bytes,26,opt,name=videoMd5" json:"videoMd5,omitempty"`
	StreamVideoUrl       *string           `protobuf:"bytes,27,opt,name=streamVideoUrl" json:"streamVideoUrl,omitempty"`
	StreamVideoTotalTime *uint32           `protobuf:"varint,28,opt,name=streamVideoTotalTime" json:"streamVideoTotalTime,omitempty"`
	StreamVideoTitle     *string           `protobuf:"bytes,29,opt,name=streamVideoTitle" json:"streamVideoTitle,omitempty"`
	StreamVideoWording   *string           `protobuf:"bytes,30,opt,name=streamVideoWording" json:"streamVideoWording,omitempty"`
	StreamVideoWebUrl    *string           `protobuf:"bytes,31,opt,name=streamVideoWebUrl" json:"streamVideoWebUrl,omitempty"`
	StreamVideoThumbUrl  *string           `protobuf:"bytes,32,opt,name=streamVideoThumbUrl" json:"streamVideoThumbUrl,omitempty"`
	StreamVideoPublishId *string           `protobuf:"bytes,33,opt,name=streamVideoPublishId" json:"streamVideoPublishId,omitempty"`
	StreamVideoAdUxInfo  *string           `protobuf:"bytes,34,opt,name=streamVideoAdUxInfo" json:"streamVideoAdUxInfo,omitempty"`
	StatExtStr           *string           `protobuf:"bytes,35,opt,name=statExtStr" json:"statExtStr,omitempty"`
	HitMd5               *uint32           `protobuf:"varint,36,opt,name=hitMd5" json:"hitMd5,omitempty"`
	VideoNewMd5          *string           `protobuf:"bytes,37,opt,name=videoNewMd5" json:"videoNewMd5,omitempty"`
	Crc32                *uint32           `protobuf:"varint,38,opt,name=crc32" json:"crc32,omitempty"`
	MsgForwardType       *uint32           `protobuf:"varint,39,opt,name=msgForwardType" json:"msgForwardType,omitempty"`
	Source               *uint32           `protobuf:"varint,40,opt,name=source" json:"source,omitempty"`
	SendMsgTicket        *string           `protobuf:"bytes,41,opt,name=sendMsgTicket" json:"sendMsgTicket,omitempty"`
	AppId                *string           `protobuf:"bytes,42,opt,name=appId" json:"appId,omitempty"`
	MessageAction        *string           `protobuf:"bytes,43,opt,name=messageAction" json:"messageAction,omitempty"`
	MessageExt           *string           `protobuf:"bytes,44,opt,name=messageExt" json:"messageExt,omitempty"`
	MediaTagName         *string           `protobuf:"bytes,45,opt,name=mediaTagName" json:"mediaTagName,omitempty"`
	VideoUploadToken     *string           `protobuf:"bytes,46,opt,name=videoUploadToken" json:"videoUploadToken,omitempty"`
	OverwriteNewMsgId    *uint64           `protobuf:"varint,47,opt,name=overwriteNewMsgId" json:"overwriteNewMsgId,omitempty"`
	RawVideoMd5          *string           `protobuf:"bytes,48,opt,name=rawVideoMd5" json:"rawVideoMd5,omitempty"`
	RawVideoFileId       *string           `protobuf:"bytes,49,opt,name=rawVideoFileId" json:"rawVideoFileId,omitempty"`
	RawVideoAeskey       *string           `protobuf:"bytes,50,opt,name=rawVideoAeskey" json:"rawVideoAeskey,omitempty"`
	RawVideoLength       *uint32           `protobuf:"varint,51,opt,name=rawVideoLength" json:"rawVideoLength,omitempty"`
	HitRawMd5            *uint32           `protobuf:"varint,52,opt,name=hitRawMd5" json:"hitRawMd5,omitempty"`
}

func (x *UploadVideoRequest) Reset() {
	*x = UploadVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UploadVideo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoRequest) ProtoMessage() {}

func (x *UploadVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_UploadVideo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoRequest.ProtoReflect.Descriptor instead.
func (*UploadVideoRequest) Descriptor() ([]byte, []int) {
	return file_UploadVideo_proto_rawDescGZIP(), []int{2}
}

func (x *UploadVideoRequest) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *UploadVideoRequest) GetClientMsgId() string {
	if x != nil && x.ClientMsgId != nil {
		return *x.ClientMsgId
	}
	return ""
}

func (x *UploadVideoRequest) GetFromUserName() string {
	if x != nil && x.FromUserName != nil {
		return *x.FromUserName
	}
	return ""
}

func (x *UploadVideoRequest) GetToUserName() string {
	if x != nil && x.ToUserName != nil {
		return *x.ToUserName
	}
	return ""
}

func (x *UploadVideoRequest) GetThumbTotalLen() uint32 {
	if x != nil && x.ThumbTotalLen != nil {
		return *x.ThumbTotalLen
	}
	return 0
}

func (x *UploadVideoRequest) GetThumbStartPos() uint32 {
	if x != nil && x.ThumbStartPos != nil {
		return *x.ThumbStartPos
	}
	return 0
}

func (x *UploadVideoRequest) GetThumbData() *SKBuiltinBufferT {
	if x != nil {
		return x.ThumbData
	}
	return nil
}

func (x *UploadVideoRequest) GetVideoTotalLen() uint32 {
	if x != nil && x.VideoTotalLen != nil {
		return *x.VideoTotalLen
	}
	return 0
}

func (x *UploadVideoRequest) GetVideoStartPos() uint32 {
	if x != nil && x.VideoStartPos != nil {
		return *x.VideoStartPos
	}
	return 0
}

func (x *UploadVideoRequest) GetVideoData() *SKBuiltinBufferT {
	if x != nil {
		return x.VideoData
	}
	return nil
}

func (x *UploadVideoRequest) GetPlayLength() uint32 {
	if x != nil && x.PlayLength != nil {
		return *x.PlayLength
	}
	return 0
}

func (x *UploadVideoRequest) GetNetworkEnv() uint32 {
	if x != nil && x.NetworkEnv != nil {
		return *x.NetworkEnv
	}
	return 0
}

func (x *UploadVideoRequest) GetCameraType() uint32 {
	if x != nil && x.CameraType != nil {
		return *x.CameraType
	}
	return 0
}

func (x *UploadVideoRequest) GetFuncFlag() uint32 {
	if x != nil && x.FuncFlag != nil {
		return *x.FuncFlag
	}
	return 0
}

func (x *UploadVideoRequest) GetMsgSource() string {
	if x != nil && x.MsgSource != nil {
		return *x.MsgSource
	}
	return ""
}

func (x *UploadVideoRequest) GetCdnvideoUrl() string {
	if x != nil && x.CdnvideoUrl != nil {
		return *x.CdnvideoUrl
	}
	return ""
}

func (x *UploadVideoRequest) GetAeskey() string {
	if x != nil && x.Aeskey != nil {
		return *x.Aeskey
	}
	return ""
}

func (x *UploadVideoRequest) GetEncryVer() int32 {
	if x != nil && x.EncryVer != nil {
		return *x.EncryVer
	}
	return 0
}

func (x *UploadVideoRequest) GetCdnthumbUrl() string {
	if x != nil && x.CdnthumbUrl != nil {
		return *x.CdnthumbUrl
	}
	return ""
}

func (x *UploadVideoRequest) GetCdnthumbImgSize() int32 {
	if x != nil && x.CdnthumbImgSize != nil {
		return *x.CdnthumbImgSize
	}
	return 0
}

func (x *UploadVideoRequest) GetCdnthumbImgHeight() int32 {
	if x != nil && x.CdnthumbImgHeight != nil {
		return *x.CdnthumbImgHeight
	}
	return 0
}

func (x *UploadVideoRequest) GetCdnthumbImgWidth() int32 {
	if x != nil && x.CdnthumbImgWidth != nil {
		return *x.CdnthumbImgWidth
	}
	return 0
}

func (x *UploadVideoRequest) GetCdnthumbAeskey() string {
	if x != nil && x.CdnthumbAeskey != nil {
		return *x.CdnthumbAeskey
	}
	return ""
}

func (x *UploadVideoRequest) GetVideoFrom() int32 {
	if x != nil && x.VideoFrom != nil {
		return *x.VideoFrom
	}
	return 0
}

func (x *UploadVideoRequest) GetReqTime() uint32 {
	if x != nil && x.ReqTime != nil {
		return *x.ReqTime
	}
	return 0
}

func (x *UploadVideoRequest) GetVideoMd5() string {
	if x != nil && x.VideoMd5 != nil {
		return *x.VideoMd5
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoUrl() string {
	if x != nil && x.StreamVideoUrl != nil {
		return *x.StreamVideoUrl
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoTotalTime() uint32 {
	if x != nil && x.StreamVideoTotalTime != nil {
		return *x.StreamVideoTotalTime
	}
	return 0
}

func (x *UploadVideoRequest) GetStreamVideoTitle() string {
	if x != nil && x.StreamVideoTitle != nil {
		return *x.StreamVideoTitle
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoWording() string {
	if x != nil && x.StreamVideoWording != nil {
		return *x.StreamVideoWording
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoWebUrl() string {
	if x != nil && x.StreamVideoWebUrl != nil {
		return *x.StreamVideoWebUrl
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoThumbUrl() string {
	if x != nil && x.StreamVideoThumbUrl != nil {
		return *x.StreamVideoThumbUrl
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoPublishId() string {
	if x != nil && x.StreamVideoPublishId != nil {
		return *x.StreamVideoPublishId
	}
	return ""
}

func (x *UploadVideoRequest) GetStreamVideoAdUxInfo() string {
	if x != nil && x.StreamVideoAdUxInfo != nil {
		return *x.StreamVideoAdUxInfo
	}
	return ""
}

func (x *UploadVideoRequest) GetStatExtStr() string {
	if x != nil && x.StatExtStr != nil {
		return *x.StatExtStr
	}
	return ""
}

func (x *UploadVideoRequest) GetHitMd5() uint32 {
	if x != nil && x.HitMd5 != nil {
		return *x.HitMd5
	}
	return 0
}

func (x *UploadVideoRequest) GetVideoNewMd5() string {
	if x != nil && x.VideoNewMd5 != nil {
		return *x.VideoNewMd5
	}
	return ""
}

func (x *UploadVideoRequest) GetCrc32() uint32 {
	if x != nil && x.Crc32 != nil {
		return *x.Crc32
	}
	return 0
}

func (x *UploadVideoRequest) GetMsgForwardType() uint32 {
	if x != nil && x.MsgForwardType != nil {
		return *x.MsgForwardType
	}
	return 0
}

func (x *UploadVideoRequest) GetSource() uint32 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

func (x *UploadVideoRequest) GetSendMsgTicket() string {
	if x != nil && x.SendMsgTicket != nil {
		return *x.SendMsgTicket
	}
	return ""
}

func (x *UploadVideoRequest) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *UploadVideoRequest) GetMessageAction() string {
	if x != nil && x.MessageAction != nil {
		return *x.MessageAction
	}
	return ""
}

func (x *UploadVideoRequest) GetMessageExt() string {
	if x != nil && x.MessageExt != nil {
		return *x.MessageExt
	}
	return ""
}

func (x *UploadVideoRequest) GetMediaTagName() string {
	if x != nil && x.MediaTagName != nil {
		return *x.MediaTagName
	}
	return ""
}

func (x *UploadVideoRequest) GetVideoUploadToken() string {
	if x != nil && x.VideoUploadToken != nil {
		return *x.VideoUploadToken
	}
	return ""
}

func (x *UploadVideoRequest) GetOverwriteNewMsgId() uint64 {
	if x != nil && x.OverwriteNewMsgId != nil {
		return *x.OverwriteNewMsgId
	}
	return 0
}

func (x *UploadVideoRequest) GetRawVideoMd5() string {
	if x != nil && x.RawVideoMd5 != nil {
		return *x.RawVideoMd5
	}
	return ""
}

func (x *UploadVideoRequest) GetRawVideoFileId() string {
	if x != nil && x.RawVideoFileId != nil {
		return *x.RawVideoFileId
	}
	return ""
}

func (x *UploadVideoRequest) GetRawVideoAeskey() string {
	if x != nil && x.RawVideoAeskey != nil {
		return *x.RawVideoAeskey
	}
	return ""
}

func (x *UploadVideoRequest) GetRawVideoLength() uint32 {
	if x != nil && x.RawVideoLength != nil {
		return *x.RawVideoLength
	}
	return 0
}

func (x *UploadVideoRequest) GetHitRawMd5() uint32 {
	if x != nil && x.HitRawMd5 != nil {
		return *x.HitRawMd5
	}
	return 0
}

type UploadVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse         *BaseResponse `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	ClientMsgId          *string       `protobuf:"bytes,2,opt,name=clientMsgId" json:"clientMsgId,omitempty"`
	MsgId                *uint32       `protobuf:"varint,3,req,name=msgId" json:"msgId,omitempty"`
	ThumbStartPos        *uint32       `protobuf:"varint,4,req,name=thumbStartPos" json:"thumbStartPos,omitempty"`
	VideoStartPos        *uint32       `protobuf:"varint,5,req,name=videoStartPos" json:"videoStartPos,omitempty"`
	NewMsgId             *uint64       `protobuf:"varint,6,opt,name=newMsgId" json:"newMsgId,omitempty"`
	Aeskey               *string       `protobuf:"bytes,7,opt,name=aeskey" json:"aeskey,omitempty"`
	MsgSource            *string       `protobuf:"bytes,8,opt,name=msgSource" json:"msgSource,omitempty"`
	ActionFlag           *uint32       `protobuf:"varint,9,opt,name=actionFlag" json:"actionFlag,omitempty"`
	VideoNeedReupload    *bool         `protobuf:"varint,10,opt,name=videoNeedReupload" json:"videoNeedReupload,omitempty"`
	RawVideoNeedReupload *bool         `protobuf:"varint,11,opt,name=rawVideoNeedReupload" json:"rawVideoNeedReupload,omitempty"`
	RawAeskey            *string       `protobuf:"bytes,12,opt,name=rawAeskey" json:"rawAeskey,omitempty"`
}

func (x *UploadVideoResponse) Reset() {
	*x = UploadVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UploadVideo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoResponse) ProtoMessage() {}

func (x *UploadVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UploadVideo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoResponse.ProtoReflect.Descriptor instead.
func (*UploadVideoResponse) Descriptor() ([]byte, []int) {
	return file_UploadVideo_proto_rawDescGZIP(), []int{3}
}

func (x *UploadVideoResponse) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UploadVideoResponse) GetClientMsgId() string {
	if x != nil && x.ClientMsgId != nil {
		return *x.ClientMsgId
	}
	return ""
}

func (x *UploadVideoResponse) GetMsgId() uint32 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *UploadVideoResponse) GetThumbStartPos() uint32 {
	if x != nil && x.ThumbStartPos != nil {
		return *x.ThumbStartPos
	}
	return 0
}

func (x *UploadVideoResponse) GetVideoStartPos() uint32 {
	if x != nil && x.VideoStartPos != nil {
		return *x.VideoStartPos
	}
	return 0
}

func (x *UploadVideoResponse) GetNewMsgId() uint64 {
	if x != nil && x.NewMsgId != nil {
		return *x.NewMsgId
	}
	return 0
}

func (x *UploadVideoResponse) GetAeskey() string {
	if x != nil && x.Aeskey != nil {
		return *x.Aeskey
	}
	return ""
}

func (x *UploadVideoResponse) GetMsgSource() string {
	if x != nil && x.MsgSource != nil {
		return *x.MsgSource
	}
	return ""
}

func (x *UploadVideoResponse) GetActionFlag() uint32 {
	if x != nil && x.ActionFlag != nil {
		return *x.ActionFlag
	}
	return 0
}

func (x *UploadVideoResponse) GetVideoNeedReupload() bool {
	if x != nil && x.VideoNeedReupload != nil {
		return *x.VideoNeedReupload
	}
	return false
}

func (x *UploadVideoResponse) GetRawVideoNeedReupload() bool {
	if x != nil && x.RawVideoNeedReupload != nil {
		return *x.RawVideoNeedReupload
	}
	return false
}

func (x *UploadVideoResponse) GetRawAeskey() string {
	if x != nil && x.RawAeskey != nil {
		return *x.RawAeskey
	}
	return ""
}

var File_UploadVideo_proto protoreflect.FileDescriptor

var file_UploadVideo_proto_rawDesc = []byte{
	0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x06, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x64, 0x6e, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x64,
	0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x64, 0x6e,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x41, 0x65, 0x73, 0x6b, 0x65,
	0x79, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x64, 0x6e, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63,
	0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x64, 0x6e,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x65, 0x77, 0x4d, 0x64, 0x35, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x65, 0x77, 0x4d, 0x64,
	0x35, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d,
	0x64, 0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x64, 0x35, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72,
	0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4d, 0x64, 0x35, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4d, 0x64, 0x35, 0x22,
	0x93, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x0f, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x30,
	0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x76, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x76, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73,
	0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x73, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x64, 0x6e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x64, 0x6e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x65,
	0x73, 0x6b, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x65, 0x73, 0x6b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x56, 0x65, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x56, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x64, 0x6e, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x64,
	0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49,
	0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x64, 0x6e, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x64, 0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x64,
	0x6e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x72, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x57, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x64, 0x55, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x64, 0x55, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x45, 0x78, 0x74, 0x53, 0x74, 0x72, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x45, 0x78, 0x74, 0x53, 0x74, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x69, 0x74, 0x4d, 0x64, 0x35, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x68, 0x69, 0x74, 0x4d, 0x64, 0x35, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e,
	0x65, 0x77, 0x4d, 0x64, 0x35, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4e, 0x65, 0x77, 0x4d, 0x64, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x72, 0x63, 0x33,
	0x32, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x77,
	0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6f, 0x76, 0x65,
	0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35, 0x18, 0x30, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x74, 0x52,
	0x61, 0x77, 0x4d, 0x64, 0x35, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x69, 0x74,
	0x52, 0x61, 0x77, 0x4d, 0x64, 0x35, 0x22, 0xbe, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73, 0x67,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x73,
	0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x4e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x72, 0x61, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x77,
	0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61,
	0x77, 0x41, 0x65, 0x73, 0x6b, 0x65, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_UploadVideo_proto_rawDescOnce sync.Once
	file_UploadVideo_proto_rawDescData = file_UploadVideo_proto_rawDesc
)

func file_UploadVideo_proto_rawDescGZIP() []byte {
	file_UploadVideo_proto_rawDescOnce.Do(func() {
		file_UploadVideo_proto_rawDescData = protoimpl.X.CompressGZIP(file_UploadVideo_proto_rawDescData)
	})
	return file_UploadVideo_proto_rawDescData
}

var file_UploadVideo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_UploadVideo_proto_goTypes = []interface{}{
	(*SendVideoUploadMsgReq)(nil),  // 0: SendVideoUploadMsgReq
	(*SendVideoUploadMsgResp)(nil), // 1: SendVideoUploadMsgResp
	(*UploadVideoRequest)(nil),     // 2: UploadVideoRequest
	(*UploadVideoResponse)(nil),    // 3: UploadVideoResponse
	(*BaseRequest)(nil),            // 4: BaseRequest
	(*BaseResponse)(nil),           // 5: BaseResponse
	(*SKBuiltinBufferT)(nil),       // 6: SKBuiltinBuffer_t
}
var file_UploadVideo_proto_depIdxs = []int32{
	4, // 0: SendVideoUploadMsgReq.baseRequest:type_name -> BaseRequest
	5, // 1: SendVideoUploadMsgResp.baseResponse:type_name -> BaseResponse
	4, // 2: UploadVideoRequest.baseRequest:type_name -> BaseRequest
	6, // 3: UploadVideoRequest.thumbData:type_name -> SKBuiltinBuffer_t
	6, // 4: UploadVideoRequest.videoData:type_name -> SKBuiltinBuffer_t
	5, // 5: UploadVideoResponse.baseResponse:type_name -> BaseResponse
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_UploadVideo_proto_init() }
func file_UploadVideo_proto_init() {
	if File_UploadVideo_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_UploadVideo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVideoUploadMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UploadVideo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVideoUploadMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UploadVideo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UploadVideo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UploadVideo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UploadVideo_proto_goTypes,
		DependencyIndexes: file_UploadVideo_proto_depIdxs,
		MessageInfos:      file_UploadVideo_proto_msgTypes,
	}.Build()
	File_UploadVideo_proto = out.File
	file_UploadVideo_proto_rawDesc = nil
	file_UploadVideo_proto_goTypes = nil
	file_UploadVideo_proto_depIdxs = nil
}
