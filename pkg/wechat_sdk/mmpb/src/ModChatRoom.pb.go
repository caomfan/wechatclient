// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: ModChatRoom.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModChatRoomMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName        *SKBuiltinStringT `protobuf:"bytes,1,req,name=userName" json:"userName,omitempty"`
	NickName        *SKBuiltinStringT `protobuf:"bytes,2,req,name=nickName" json:"nickName,omitempty"`
	PyInitial       *SKBuiltinStringT `protobuf:"bytes,3,req,name=pyInitial" json:"pyInitial,omitempty"`
	QuanPin         *SKBuiltinStringT `protobuf:"bytes,4,req,name=quanPin" json:"quanPin,omitempty"`
	Sex             *int32            `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	ImgBuf          *SKBuiltinBufferT `protobuf:"bytes,6,req,name=imgBuf" json:"imgBuf,omitempty"`
	ImgFlag         *uint32           `protobuf:"varint,7,req,name=imgFlag" json:"imgFlag,omitempty"`
	Remark          *SKBuiltinStringT `protobuf:"bytes,8,req,name=remark" json:"remark,omitempty"`
	RemarkPYInitial *SKBuiltinStringT `protobuf:"bytes,9,req,name=remarkPYInitial" json:"remarkPYInitial,omitempty"`
	RemarkQuanPin   *SKBuiltinStringT `protobuf:"bytes,10,req,name=remarkQuanPin" json:"remarkQuanPin,omitempty"`
	ContactType     *uint32           `protobuf:"varint,11,req,name=contactType" json:"contactType,omitempty"`
	Province        *string           `protobuf:"bytes,12,opt,name=province" json:"province,omitempty"`
	City            *string           `protobuf:"bytes,13,opt,name=city" json:"city,omitempty"`
	Signature       *string           `protobuf:"bytes,14,opt,name=signature" json:"signature,omitempty"`
	PersonalCard    *uint32           `protobuf:"varint,15,opt,name=personalCard" json:"personalCard,omitempty"`
	VerifyFlag      *uint32           `protobuf:"varint,16,opt,name=verifyFlag" json:"verifyFlag,omitempty"`
	VerifyInfo      *string           `protobuf:"bytes,17,opt,name=verifyInfo" json:"verifyInfo,omitempty"`
	Weibo           *string           `protobuf:"bytes,18,opt,name=weibo" json:"weibo,omitempty"`
	VerifyContent   *string           `protobuf:"bytes,19,opt,name=verifyContent" json:"verifyContent,omitempty"`
	WeiboNickname   *string           `protobuf:"bytes,20,opt,name=weiboNickname" json:"weiboNickname,omitempty"`
	WeiboFlag       *uint32           `protobuf:"varint,21,opt,name=weiboFlag" json:"weiboFlag,omitempty"`
	AlbumStyle      *int32            `protobuf:"varint,22,opt,name=albumStyle" json:"albumStyle,omitempty"`
	AlbumFlag       *int32            `protobuf:"varint,23,opt,name=albumFlag" json:"albumFlag,omitempty"`
	AlbumBgImgID    *string           `protobuf:"bytes,24,opt,name=albumBgImgID" json:"albumBgImgID,omitempty"`
	Alias           *string           `protobuf:"bytes,25,opt,name=alias" json:"alias,omitempty"`
	SnsUserInfo     *SnsUserInfo      `protobuf:"bytes,26,opt,name=snsUserInfo" json:"snsUserInfo,omitempty"`
	Country         *string           `protobuf:"bytes,27,opt,name=country" json:"country,omitempty"`
	BigHeadImgUrl   *string           `protobuf:"bytes,28,opt,name=bigHeadImgUrl" json:"bigHeadImgUrl,omitempty"`
	SmallHeadImgUrl *string           `protobuf:"bytes,29,opt,name=smallHeadImgUrl" json:"smallHeadImgUrl,omitempty"`
	MyBrandList     *string           `protobuf:"bytes,30,opt,name=myBrandList" json:"myBrandList,omitempty"`
	CustomizedInfo  *CustomizedInfo   `protobuf:"bytes,31,opt,name=customizedInfo" json:"customizedInfo,omitempty"`
}

func (x *ModChatRoomMember) Reset() {
	*x = ModChatRoomMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModChatRoom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModChatRoomMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModChatRoomMember) ProtoMessage() {}

func (x *ModChatRoomMember) ProtoReflect() protoreflect.Message {
	mi := &file_ModChatRoom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModChatRoomMember.ProtoReflect.Descriptor instead.
func (*ModChatRoomMember) Descriptor() ([]byte, []int) {
	return file_ModChatRoom_proto_rawDescGZIP(), []int{0}
}

func (x *ModChatRoomMember) GetUserName() *SKBuiltinStringT {
	if x != nil {
		return x.UserName
	}
	return nil
}

func (x *ModChatRoomMember) GetNickName() *SKBuiltinStringT {
	if x != nil {
		return x.NickName
	}
	return nil
}

func (x *ModChatRoomMember) GetPyInitial() *SKBuiltinStringT {
	if x != nil {
		return x.PyInitial
	}
	return nil
}

func (x *ModChatRoomMember) GetQuanPin() *SKBuiltinStringT {
	if x != nil {
		return x.QuanPin
	}
	return nil
}

func (x *ModChatRoomMember) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *ModChatRoomMember) GetImgBuf() *SKBuiltinBufferT {
	if x != nil {
		return x.ImgBuf
	}
	return nil
}

func (x *ModChatRoomMember) GetImgFlag() uint32 {
	if x != nil && x.ImgFlag != nil {
		return *x.ImgFlag
	}
	return 0
}

func (x *ModChatRoomMember) GetRemark() *SKBuiltinStringT {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *ModChatRoomMember) GetRemarkPYInitial() *SKBuiltinStringT {
	if x != nil {
		return x.RemarkPYInitial
	}
	return nil
}

func (x *ModChatRoomMember) GetRemarkQuanPin() *SKBuiltinStringT {
	if x != nil {
		return x.RemarkQuanPin
	}
	return nil
}

func (x *ModChatRoomMember) GetContactType() uint32 {
	if x != nil && x.ContactType != nil {
		return *x.ContactType
	}
	return 0
}

func (x *ModChatRoomMember) GetProvince() string {
	if x != nil && x.Province != nil {
		return *x.Province
	}
	return ""
}

func (x *ModChatRoomMember) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *ModChatRoomMember) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *ModChatRoomMember) GetPersonalCard() uint32 {
	if x != nil && x.PersonalCard != nil {
		return *x.PersonalCard
	}
	return 0
}

func (x *ModChatRoomMember) GetVerifyFlag() uint32 {
	if x != nil && x.VerifyFlag != nil {
		return *x.VerifyFlag
	}
	return 0
}

func (x *ModChatRoomMember) GetVerifyInfo() string {
	if x != nil && x.VerifyInfo != nil {
		return *x.VerifyInfo
	}
	return ""
}

func (x *ModChatRoomMember) GetWeibo() string {
	if x != nil && x.Weibo != nil {
		return *x.Weibo
	}
	return ""
}

func (x *ModChatRoomMember) GetVerifyContent() string {
	if x != nil && x.VerifyContent != nil {
		return *x.VerifyContent
	}
	return ""
}

func (x *ModChatRoomMember) GetWeiboNickname() string {
	if x != nil && x.WeiboNickname != nil {
		return *x.WeiboNickname
	}
	return ""
}

func (x *ModChatRoomMember) GetWeiboFlag() uint32 {
	if x != nil && x.WeiboFlag != nil {
		return *x.WeiboFlag
	}
	return 0
}

func (x *ModChatRoomMember) GetAlbumStyle() int32 {
	if x != nil && x.AlbumStyle != nil {
		return *x.AlbumStyle
	}
	return 0
}

func (x *ModChatRoomMember) GetAlbumFlag() int32 {
	if x != nil && x.AlbumFlag != nil {
		return *x.AlbumFlag
	}
	return 0
}

func (x *ModChatRoomMember) GetAlbumBgImgID() string {
	if x != nil && x.AlbumBgImgID != nil {
		return *x.AlbumBgImgID
	}
	return ""
}

func (x *ModChatRoomMember) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *ModChatRoomMember) GetSnsUserInfo() *SnsUserInfo {
	if x != nil {
		return x.SnsUserInfo
	}
	return nil
}

func (x *ModChatRoomMember) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *ModChatRoomMember) GetBigHeadImgUrl() string {
	if x != nil && x.BigHeadImgUrl != nil {
		return *x.BigHeadImgUrl
	}
	return ""
}

func (x *ModChatRoomMember) GetSmallHeadImgUrl() string {
	if x != nil && x.SmallHeadImgUrl != nil {
		return *x.SmallHeadImgUrl
	}
	return ""
}

func (x *ModChatRoomMember) GetMyBrandList() string {
	if x != nil && x.MyBrandList != nil {
		return *x.MyBrandList
	}
	return ""
}

func (x *ModChatRoomMember) GetCustomizedInfo() *CustomizedInfo {
	if x != nil {
		return x.CustomizedInfo
	}
	return nil
}

type QuitChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomName *SKBuiltinStringT `protobuf:"bytes,1,req,name=chatRoomName" json:"chatRoomName,omitempty"`
	UserName     *SKBuiltinStringT `protobuf:"bytes,2,req,name=userName" json:"userName,omitempty"`
}

func (x *QuitChatRoom) Reset() {
	*x = QuitChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModChatRoom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitChatRoom) ProtoMessage() {}

func (x *QuitChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_ModChatRoom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitChatRoom.ProtoReflect.Descriptor instead.
func (*QuitChatRoom) Descriptor() ([]byte, []int) {
	return file_ModChatRoom_proto_rawDescGZIP(), []int{1}
}

func (x *QuitChatRoom) GetChatRoomName() *SKBuiltinStringT {
	if x != nil {
		return x.ChatRoomName
	}
	return nil
}

func (x *QuitChatRoom) GetUserName() *SKBuiltinStringT {
	if x != nil {
		return x.UserName
	}
	return nil
}

type ModChatRoomTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomName  *SKBuiltinStringT `protobuf:"bytes,1,req,name=chatRoomName" json:"chatRoomName,omitempty"`
	ChatRoomTopic *SKBuiltinStringT `protobuf:"bytes,2,req,name=chatRoomTopic" json:"chatRoomTopic,omitempty"`
}

func (x *ModChatRoomTopic) Reset() {
	*x = ModChatRoomTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModChatRoom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModChatRoomTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModChatRoomTopic) ProtoMessage() {}

func (x *ModChatRoomTopic) ProtoReflect() protoreflect.Message {
	mi := &file_ModChatRoom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModChatRoomTopic.ProtoReflect.Descriptor instead.
func (*ModChatRoomTopic) Descriptor() ([]byte, []int) {
	return file_ModChatRoom_proto_rawDescGZIP(), []int{2}
}

func (x *ModChatRoomTopic) GetChatRoomName() *SKBuiltinStringT {
	if x != nil {
		return x.ChatRoomName
	}
	return nil
}

func (x *ModChatRoomTopic) GetChatRoomTopic() *SKBuiltinStringT {
	if x != nil {
		return x.ChatRoomTopic
	}
	return nil
}

type ModChatRoomMemberDisplayName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomName *string `protobuf:"bytes,1,opt,name=chatRoomName" json:"chatRoomName,omitempty"`
	UserName     *string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	DisplayName  *string `protobuf:"bytes,3,opt,name=displayName" json:"displayName,omitempty"`
}

func (x *ModChatRoomMemberDisplayName) Reset() {
	*x = ModChatRoomMemberDisplayName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModChatRoom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModChatRoomMemberDisplayName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModChatRoomMemberDisplayName) ProtoMessage() {}

func (x *ModChatRoomMemberDisplayName) ProtoReflect() protoreflect.Message {
	mi := &file_ModChatRoom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModChatRoomMemberDisplayName.ProtoReflect.Descriptor instead.
func (*ModChatRoomMemberDisplayName) Descriptor() ([]byte, []int) {
	return file_ModChatRoom_proto_rawDescGZIP(), []int{3}
}

func (x *ModChatRoomMemberDisplayName) GetChatRoomName() string {
	if x != nil && x.ChatRoomName != nil {
		return *x.ChatRoomName
	}
	return ""
}

func (x *ModChatRoomMemberDisplayName) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *ModChatRoomMemberDisplayName) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

type ModChatRoomMemberFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomName *string `protobuf:"bytes,1,opt,name=chatRoomName" json:"chatRoomName,omitempty"`
	UserName     *string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	FlagSwitch   *uint32 `protobuf:"varint,3,req,name=flagSwitch" json:"flagSwitch,omitempty"`
	Value        *uint32 `protobuf:"varint,4,req,name=value" json:"value,omitempty"`
}

func (x *ModChatRoomMemberFlag) Reset() {
	*x = ModChatRoomMemberFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModChatRoom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModChatRoomMemberFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModChatRoomMemberFlag) ProtoMessage() {}

func (x *ModChatRoomMemberFlag) ProtoReflect() protoreflect.Message {
	mi := &file_ModChatRoom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModChatRoomMemberFlag.ProtoReflect.Descriptor instead.
func (*ModChatRoomMemberFlag) Descriptor() ([]byte, []int) {
	return file_ModChatRoom_proto_rawDescGZIP(), []int{4}
}

func (x *ModChatRoomMemberFlag) GetChatRoomName() string {
	if x != nil && x.ChatRoomName != nil {
		return *x.ChatRoomName
	}
	return ""
}

func (x *ModChatRoomMemberFlag) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *ModChatRoomMemberFlag) GetFlagSwitch() uint32 {
	if x != nil && x.FlagSwitch != nil {
		return *x.FlagSwitch
	}
	return 0
}

func (x *ModChatRoomMemberFlag) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ModChatRoomNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomName *SKBuiltinStringT `protobuf:"bytes,1,req,name=chatRoomName" json:"chatRoomName,omitempty"`
	Status       *uint32           `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
}

func (x *ModChatRoomNotify) Reset() {
	*x = ModChatRoomNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModChatRoom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModChatRoomNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModChatRoomNotify) ProtoMessage() {}

func (x *ModChatRoomNotify) ProtoReflect() protoreflect.Message {
	mi := &file_ModChatRoom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModChatRoomNotify.ProtoReflect.Descriptor instead.
func (*ModChatRoomNotify) Descriptor() ([]byte, []int) {
	return file_ModChatRoom_proto_rawDescGZIP(), []int{5}
}

func (x *ModChatRoomNotify) GetChatRoomName() *SKBuiltinStringT {
	if x != nil {
		return x.ChatRoomName
	}
	return nil
}

func (x *ModChatRoomNotify) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

var File_ModChatRoom_proto protoreflect.FileDescriptor

var file_ModChatRoom_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x09, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x09, 0x70, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x52, 0x09, 0x70, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x2c, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6e, 0x50, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6e, 0x50, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x78, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12,
	0x2a, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x42, 0x75, 0x66, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x42, 0x75, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6d, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6d,
	0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x3c, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x59, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x59, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x38, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x51, 0x75, 0x61, 0x6e, 0x50, 0x69, 0x6e,
	0x18, 0x0a, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x51, 0x75, 0x61, 0x6e, 0x50, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x65,
	0x69, 0x62, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x69,
	0x62, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x42, 0x67, 0x49, 0x6d, 0x67, 0x49, 0x44, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x67, 0x49, 0x6d, 0x67, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x6e, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x6e, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x62, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x0c, 0x51, 0x75,
	0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x4d, 0x6f,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x15, 0x4d, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x67, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x67,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x11,
	0x4d, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42, 0x75, 0x69, 0x6c,
	0x74, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_ModChatRoom_proto_rawDescOnce sync.Once
	file_ModChatRoom_proto_rawDescData = file_ModChatRoom_proto_rawDesc
)

func file_ModChatRoom_proto_rawDescGZIP() []byte {
	file_ModChatRoom_proto_rawDescOnce.Do(func() {
		file_ModChatRoom_proto_rawDescData = protoimpl.X.CompressGZIP(file_ModChatRoom_proto_rawDescData)
	})
	return file_ModChatRoom_proto_rawDescData
}

var file_ModChatRoom_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ModChatRoom_proto_goTypes = []interface{}{
	(*ModChatRoomMember)(nil),            // 0: ModChatRoomMember
	(*QuitChatRoom)(nil),                 // 1: QuitChatRoom
	(*ModChatRoomTopic)(nil),             // 2: ModChatRoomTopic
	(*ModChatRoomMemberDisplayName)(nil), // 3: ModChatRoomMemberDisplayName
	(*ModChatRoomMemberFlag)(nil),        // 4: ModChatRoomMemberFlag
	(*ModChatRoomNotify)(nil),            // 5: ModChatRoomNotify
	(*SKBuiltinStringT)(nil),             // 6: SKBuiltinString_t
	(*SKBuiltinBufferT)(nil),             // 7: SKBuiltinBuffer_t
	(*SnsUserInfo)(nil),                  // 8: SnsUserInfo
	(*CustomizedInfo)(nil),               // 9: CustomizedInfo
}
var file_ModChatRoom_proto_depIdxs = []int32{
	6,  // 0: ModChatRoomMember.userName:type_name -> SKBuiltinString_t
	6,  // 1: ModChatRoomMember.nickName:type_name -> SKBuiltinString_t
	6,  // 2: ModChatRoomMember.pyInitial:type_name -> SKBuiltinString_t
	6,  // 3: ModChatRoomMember.quanPin:type_name -> SKBuiltinString_t
	7,  // 4: ModChatRoomMember.imgBuf:type_name -> SKBuiltinBuffer_t
	6,  // 5: ModChatRoomMember.remark:type_name -> SKBuiltinString_t
	6,  // 6: ModChatRoomMember.remarkPYInitial:type_name -> SKBuiltinString_t
	6,  // 7: ModChatRoomMember.remarkQuanPin:type_name -> SKBuiltinString_t
	8,  // 8: ModChatRoomMember.snsUserInfo:type_name -> SnsUserInfo
	9,  // 9: ModChatRoomMember.customizedInfo:type_name -> CustomizedInfo
	6,  // 10: QuitChatRoom.chatRoomName:type_name -> SKBuiltinString_t
	6,  // 11: QuitChatRoom.userName:type_name -> SKBuiltinString_t
	6,  // 12: ModChatRoomTopic.chatRoomName:type_name -> SKBuiltinString_t
	6,  // 13: ModChatRoomTopic.chatRoomTopic:type_name -> SKBuiltinString_t
	6,  // 14: ModChatRoomNotify.chatRoomName:type_name -> SKBuiltinString_t
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_ModChatRoom_proto_init() }
func file_ModChatRoom_proto_init() {
	if File_ModChatRoom_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ModChatRoom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModChatRoomMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModChatRoom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModChatRoom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModChatRoomTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModChatRoom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModChatRoomMemberDisplayName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModChatRoom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModChatRoomMemberFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModChatRoom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModChatRoomNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ModChatRoom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ModChatRoom_proto_goTypes,
		DependencyIndexes: file_ModChatRoom_proto_depIdxs,
		MessageInfos:      file_ModChatRoom_proto_msgTypes,
	}.Build()
	File_ModChatRoom_proto = out.File
	file_ModChatRoom_proto_rawDesc = nil
	file_ModChatRoom_proto_goTypes = nil
	file_ModChatRoom_proto_depIdxs = nil
}
