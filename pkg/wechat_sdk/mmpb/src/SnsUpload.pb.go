// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: SnsUpload.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SnsUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *BaseRequest      `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	Type        *uint32           `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	StartPos    *uint32           `protobuf:"varint,3,req,name=startPos" json:"startPos,omitempty"`
	TotalLen    *uint32           `protobuf:"varint,4,req,name=totalLen" json:"totalLen,omitempty"`
	Buffer      *SKBuiltinBufferT `protobuf:"bytes,5,req,name=buffer" json:"buffer,omitempty"`
	ClientId    *string           `protobuf:"bytes,6,opt,name=clientId" json:"clientId,omitempty"`
	FilterStype *uint32           `protobuf:"varint,7,opt,name=filterStype" json:"filterStype,omitempty"`
	SyncFlag    *uint32           `protobuf:"varint,8,opt,name=syncFlag" json:"syncFlag,omitempty"`
	Description *string           `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
	PhotoFrom   *int32            `protobuf:"varint,10,opt,name=photoFrom" json:"photoFrom,omitempty"`
	NetType     *int32            `protobuf:"varint,11,opt,name=netType" json:"netType,omitempty"`
	TwitterInfo *TwitterInfo      `protobuf:"bytes,12,opt,name=twitterInfo" json:"twitterInfo,omitempty"`
	AppId       *string           `protobuf:"bytes,13,opt,name=appId" json:"appId,omitempty"`
	ExtFlag     *uint32           `protobuf:"varint,14,opt,name=extFlag" json:"extFlag,omitempty"`
	Md5         *string           `protobuf:"bytes,15,opt,name=md5" json:"md5,omitempty"`
	ObjectType  *uint32           `protobuf:"varint,16,opt,name=objectType" json:"objectType,omitempty"`
}

func (x *SnsUploadRequest) Reset() {
	*x = SnsUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SnsUpload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnsUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnsUploadRequest) ProtoMessage() {}

func (x *SnsUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SnsUpload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnsUploadRequest.ProtoReflect.Descriptor instead.
func (*SnsUploadRequest) Descriptor() ([]byte, []int) {
	return file_SnsUpload_proto_rawDescGZIP(), []int{0}
}

func (x *SnsUploadRequest) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *SnsUploadRequest) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SnsUploadRequest) GetStartPos() uint32 {
	if x != nil && x.StartPos != nil {
		return *x.StartPos
	}
	return 0
}

func (x *SnsUploadRequest) GetTotalLen() uint32 {
	if x != nil && x.TotalLen != nil {
		return *x.TotalLen
	}
	return 0
}

func (x *SnsUploadRequest) GetBuffer() *SKBuiltinBufferT {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *SnsUploadRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *SnsUploadRequest) GetFilterStype() uint32 {
	if x != nil && x.FilterStype != nil {
		return *x.FilterStype
	}
	return 0
}

func (x *SnsUploadRequest) GetSyncFlag() uint32 {
	if x != nil && x.SyncFlag != nil {
		return *x.SyncFlag
	}
	return 0
}

func (x *SnsUploadRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SnsUploadRequest) GetPhotoFrom() int32 {
	if x != nil && x.PhotoFrom != nil {
		return *x.PhotoFrom
	}
	return 0
}

func (x *SnsUploadRequest) GetNetType() int32 {
	if x != nil && x.NetType != nil {
		return *x.NetType
	}
	return 0
}

func (x *SnsUploadRequest) GetTwitterInfo() *TwitterInfo {
	if x != nil {
		return x.TwitterInfo
	}
	return nil
}

func (x *SnsUploadRequest) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *SnsUploadRequest) GetExtFlag() uint32 {
	if x != nil && x.ExtFlag != nil {
		return *x.ExtFlag
	}
	return 0
}

func (x *SnsUploadRequest) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

func (x *SnsUploadRequest) GetObjectType() uint32 {
	if x != nil && x.ObjectType != nil {
		return *x.ObjectType
	}
	return 0
}

type SnsUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse  *BaseResponse   `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	StartPos      *uint32         `protobuf:"varint,2,req,name=startPos" json:"startPos,omitempty"`
	TotalLen      *uint32         `protobuf:"varint,3,req,name=totalLen" json:"totalLen,omitempty"`
	ClientId      *string         `protobuf:"bytes,4,opt,name=clientId" json:"clientId,omitempty"`
	BufferUrl     *SnsBufferUrl   `protobuf:"bytes,5,req,name=bufferUrl" json:"bufferUrl,omitempty"`
	ThumbUrlCount *uint32         `protobuf:"varint,6,req,name=thumbUrlCount" json:"thumbUrlCount,omitempty"`
	ThumbUrls     []*SnsBufferUrl `protobuf:"bytes,7,rep,name=thumbUrls" json:"thumbUrls,omitempty"`
	Id            *uint64         `protobuf:"varint,8,req,name=id" json:"id,omitempty"`
	Type          *uint32         `protobuf:"varint,9,req,name=type" json:"type,omitempty"`
}

func (x *SnsUploadResponse) Reset() {
	*x = SnsUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SnsUpload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnsUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnsUploadResponse) ProtoMessage() {}

func (x *SnsUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SnsUpload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnsUploadResponse.ProtoReflect.Descriptor instead.
func (*SnsUploadResponse) Descriptor() ([]byte, []int) {
	return file_SnsUpload_proto_rawDescGZIP(), []int{1}
}

func (x *SnsUploadResponse) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *SnsUploadResponse) GetStartPos() uint32 {
	if x != nil && x.StartPos != nil {
		return *x.StartPos
	}
	return 0
}

func (x *SnsUploadResponse) GetTotalLen() uint32 {
	if x != nil && x.TotalLen != nil {
		return *x.TotalLen
	}
	return 0
}

func (x *SnsUploadResponse) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *SnsUploadResponse) GetBufferUrl() *SnsBufferUrl {
	if x != nil {
		return x.BufferUrl
	}
	return nil
}

func (x *SnsUploadResponse) GetThumbUrlCount() uint32 {
	if x != nil && x.ThumbUrlCount != nil {
		return *x.ThumbUrlCount
	}
	return 0
}

func (x *SnsUploadResponse) GetThumbUrls() []*SnsBufferUrl {
	if x != nil {
		return x.ThumbUrls
	}
	return nil
}

func (x *SnsUploadResponse) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SnsUploadResponse) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

var File_SnsUpload_proto protoreflect.FileDescriptor

var file_SnsUpload_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x53, 0x6e, 0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x6e, 0x73, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x04, 0x0a, 0x10, 0x53, 0x6e,
	0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4b, 0x42,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x52, 0x06,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x74,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x78, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64,
	0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x02, 0x0a,
	0x11, 0x53, 0x6e, 0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53,
	0x6e, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x09, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55,
	0x72, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x09,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x53, 0x6e, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x09,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_SnsUpload_proto_rawDescOnce sync.Once
	file_SnsUpload_proto_rawDescData = file_SnsUpload_proto_rawDesc
)

func file_SnsUpload_proto_rawDescGZIP() []byte {
	file_SnsUpload_proto_rawDescOnce.Do(func() {
		file_SnsUpload_proto_rawDescData = protoimpl.X.CompressGZIP(file_SnsUpload_proto_rawDescData)
	})
	return file_SnsUpload_proto_rawDescData
}

var file_SnsUpload_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_SnsUpload_proto_goTypes = []interface{}{
	(*SnsUploadRequest)(nil),  // 0: SnsUploadRequest
	(*SnsUploadResponse)(nil), // 1: SnsUploadResponse
	(*BaseRequest)(nil),       // 2: BaseRequest
	(*SKBuiltinBufferT)(nil),  // 3: SKBuiltinBuffer_t
	(*TwitterInfo)(nil),       // 4: TwitterInfo
	(*BaseResponse)(nil),      // 5: BaseResponse
	(*SnsBufferUrl)(nil),      // 6: SnsBufferUrl
}
var file_SnsUpload_proto_depIdxs = []int32{
	2, // 0: SnsUploadRequest.baseRequest:type_name -> BaseRequest
	3, // 1: SnsUploadRequest.buffer:type_name -> SKBuiltinBuffer_t
	4, // 2: SnsUploadRequest.twitterInfo:type_name -> TwitterInfo
	5, // 3: SnsUploadResponse.baseResponse:type_name -> BaseResponse
	6, // 4: SnsUploadResponse.bufferUrl:type_name -> SnsBufferUrl
	6, // 5: SnsUploadResponse.thumbUrls:type_name -> SnsBufferUrl
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_SnsUpload_proto_init() }
func file_SnsUpload_proto_init() {
	if File_SnsUpload_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	file_MicroSnsBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SnsUpload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnsUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SnsUpload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnsUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SnsUpload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SnsUpload_proto_goTypes,
		DependencyIndexes: file_SnsUpload_proto_depIdxs,
		MessageInfos:      file_SnsUpload_proto_msgTypes,
	}.Build()
	File_SnsUpload_proto = out.File
	file_SnsUpload_proto_rawDesc = nil
	file_SnsUpload_proto_goTypes = nil
	file_SnsUpload_proto_depIdxs = nil
}
