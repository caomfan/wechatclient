// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: Feeds.proto

package micromsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecommendFeedsContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Referer      *string `protobuf:"bytes,1,opt,name=referer" json:"referer,omitempty"`
	ActionBuffer *string `protobuf:"bytes,2,opt,name=actionBuffer" json:"actionBuffer,omitempty"`
}

func (x *RecommendFeedsContext) Reset() {
	*x = RecommendFeedsContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendFeedsContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendFeedsContext) ProtoMessage() {}

func (x *RecommendFeedsContext) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendFeedsContext.ProtoReflect.Descriptor instead.
func (*RecommendFeedsContext) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{0}
}

func (x *RecommendFeedsContext) GetReferer() string {
	if x != nil && x.Referer != nil {
		return *x.Referer
	}
	return ""
}

func (x *RecommendFeedsContext) GetActionBuffer() string {
	if x != nil && x.ActionBuffer != nil {
		return *x.ActionBuffer
	}
	return ""
}

type GetRecommendFeedsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *BaseRequest           `protobuf:"bytes,1,opt,name=baseRequest" json:"baseRequest,omitempty"`
	Scene       *uint32                `protobuf:"varint,2,opt,name=scene" json:"scene,omitempty"`
	Buffer      []byte                 `protobuf:"bytes,3,opt,name=buffer" json:"buffer,omitempty"`
	Context     *RecommendFeedsContext `protobuf:"bytes,4,opt,name=context" json:"context,omitempty"`
}

func (x *GetRecommendFeedsReq) Reset() {
	*x = GetRecommendFeedsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsReq) ProtoMessage() {}

func (x *GetRecommendFeedsReq) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsReq.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsReq) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{1}
}

func (x *GetRecommendFeedsReq) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetRecommendFeedsReq) GetScene() uint32 {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return 0
}

func (x *GetRecommendFeedsReq) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *GetRecommendFeedsReq) GetContext() *RecommendFeedsContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type RecommendFeedsFeedbackReq_RecommendCardLite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraData              *string  `protobuf:"bytes,1,opt,name=extraData" json:"extraData,omitempty"`
	ClientMsgId            *uint64  `protobuf:"varint,2,opt,name=clientMsgId" json:"clientMsgId,omitempty"`
	NegativeFeedbackReason []string `protobuf:"bytes,3,rep,name=negativeFeedbackReason" json:"negativeFeedbackReason,omitempty"`
}

func (x *RecommendFeedsFeedbackReq_RecommendCardLite) Reset() {
	*x = RecommendFeedsFeedbackReq_RecommendCardLite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendFeedsFeedbackReq_RecommendCardLite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendFeedsFeedbackReq_RecommendCardLite) ProtoMessage() {}

func (x *RecommendFeedsFeedbackReq_RecommendCardLite) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendFeedsFeedbackReq_RecommendCardLite.ProtoReflect.Descriptor instead.
func (*RecommendFeedsFeedbackReq_RecommendCardLite) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{2}
}

func (x *RecommendFeedsFeedbackReq_RecommendCardLite) GetExtraData() string {
	if x != nil && x.ExtraData != nil {
		return *x.ExtraData
	}
	return ""
}

func (x *RecommendFeedsFeedbackReq_RecommendCardLite) GetClientMsgId() uint64 {
	if x != nil && x.ClientMsgId != nil {
		return *x.ClientMsgId
	}
	return 0
}

func (x *RecommendFeedsFeedbackReq_RecommendCardLite) GetNegativeFeedbackReason() []string {
	if x != nil {
		return x.NegativeFeedbackReason
	}
	return nil
}

type RecommendFeedsFeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest   *BaseRequest                                   `protobuf:"bytes,1,opt,name=baseRequest" json:"baseRequest,omitempty"`
	RecommendCard []*RecommendFeedsFeedbackReq_RecommendCardLite `protobuf:"bytes,2,rep,name=recommendCard" json:"recommendCard,omitempty"`
	SessionId     *uint32                                        `protobuf:"varint,3,opt,name=sessionId" json:"sessionId,omitempty"`
}

func (x *RecommendFeedsFeedbackReq) Reset() {
	*x = RecommendFeedsFeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendFeedsFeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendFeedsFeedbackReq) ProtoMessage() {}

func (x *RecommendFeedsFeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendFeedsFeedbackReq.ProtoReflect.Descriptor instead.
func (*RecommendFeedsFeedbackReq) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{3}
}

func (x *RecommendFeedsFeedbackReq) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *RecommendFeedsFeedbackReq) GetRecommendCard() []*RecommendFeedsFeedbackReq_RecommendCardLite {
	if x != nil {
		return x.RecommendCard
	}
	return nil
}

func (x *RecommendFeedsFeedbackReq) GetSessionId() uint32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

type GetRecommendFeedsResp_RecommendFeedsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextReqTime       *uint32 `protobuf:"varint,1,opt,name=nextReqTime" json:"nextReqTime,omitempty"`
	ProtectionTime    *uint32 `protobuf:"varint,2,opt,name=protectionTime" json:"protectionTime,omitempty"`
	SubscribeMsgLimit *uint32 `protobuf:"varint,3,opt,name=subscribeMsgLimit" json:"subscribeMsgLimit,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendFeedsConfig) Reset() {
	*x = GetRecommendFeedsResp_RecommendFeedsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendFeedsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendFeedsConfig) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendFeedsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendFeedsConfig.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendFeedsConfig) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecommendFeedsResp_RecommendFeedsConfig) GetNextReqTime() uint32 {
	if x != nil && x.NextReqTime != nil {
		return *x.NextReqTime
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendFeedsConfig) GetProtectionTime() uint32 {
	if x != nil && x.ProtectionTime != nil {
		return *x.ProtectionTime
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendFeedsConfig) GetSubscribeMsgLimit() uint32 {
	if x != nil && x.SubscribeMsgLimit != nil {
		return *x.SubscribeMsgLimit
	}
	return 0
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PicNum     *uint32  `protobuf:"varint,1,opt,name=picNum" json:"picNum,omitempty"`
	PictureUrl []string `protobuf:"bytes,2,rep,name=pictureUrl" json:"pictureUrl,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) GetPicNum() uint32 {
	if x != nil && x.PicNum != nil {
		return *x.PicNum
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg) GetPictureUrl() []string {
	if x != nil {
		return x.PictureUrl
	}
	return nil
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoicePlayUrl  *string `protobuf:"bytes,1,opt,name=voicePlayUrl" json:"voicePlayUrl,omitempty"`
	VoiceDuration *uint32 `protobuf:"varint,2,opt,name=voiceDuration" json:"voiceDuration,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) GetVoicePlayUrl() string {
	if x != nil && x.VoicePlayUrl != nil {
		return *x.VoicePlayUrl
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg) GetVoiceDuration() uint32 {
	if x != nil && x.VoiceDuration != nil {
		return *x.VoiceDuration
	}
	return 0
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       *string `protobuf:"bytes,1,opt,name=videoId" json:"videoId,omitempty"`
	VideoWidth    *uint32 `protobuf:"varint,2,opt,name=videoWidth" json:"videoWidth,omitempty"`
	VideoHeight   *uint32 `protobuf:"varint,3,opt,name=videoHeight" json:"videoHeight,omitempty"`
	VideoDuration *uint32 `protobuf:"varint,4,opt,name=videoDuration" json:"videoDuration,omitempty"`
	FinderFeedXml *string `protobuf:"bytes,5,opt,name=finderFeedXml" json:"finderFeedXml,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) GetVideoId() string {
	if x != nil && x.VideoId != nil {
		return *x.VideoId
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) GetVideoWidth() uint32 {
	if x != nil && x.VideoWidth != nil {
		return *x.VideoWidth
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) GetVideoHeight() uint32 {
	if x != nil && x.VideoHeight != nil {
		return *x.VideoHeight
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) GetVideoDuration() uint32 {
	if x != nil && x.VideoDuration != nil {
		return *x.VideoDuration
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg) GetFinderFeedXml() string {
	if x != nil && x.FinderFeedXml != nil {
		return *x.FinderFeedXml
	}
	return ""
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           *string                                                                     `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Digest          *string                                                                     `protobuf:"bytes,2,opt,name=digest" json:"digest,omitempty"`
	ContentUrl      *string                                                                     `protobuf:"bytes,3,opt,name=contentUrl" json:"contentUrl,omitempty"`
	CoverImgUrl     *string                                                                     `protobuf:"bytes,4,opt,name=coverImgUrl" json:"coverImgUrl,omitempty"`
	CoverImgUrl11   *string                                                                     `protobuf:"bytes,5,opt,name=coverImgUrl11" json:"coverImgUrl11,omitempty"`
	CoverImgUrl2351 *string                                                                     `protobuf:"bytes,6,opt,name=coverImgUrl2351" json:"coverImgUrl2351,omitempty"`
	ItemShowType    *uint32                                                                     `protobuf:"varint,7,opt,name=itemShowType" json:"itemShowType,omitempty"`
	CreateTime      *uint32                                                                     `protobuf:"varint,8,opt,name=createTime" json:"createTime,omitempty"`
	VideoInfo       *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg   `protobuf:"bytes,9,opt,name=videoInfo" json:"videoInfo,omitempty"`
	VoiceInfo       *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg   `protobuf:"bytes,10,opt,name=voiceInfo" json:"voiceInfo,omitempty"`
	PictureInfo     *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg `protobuf:"bytes,11,opt,name=pictureInfo" json:"pictureInfo,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetContentUrl() string {
	if x != nil && x.ContentUrl != nil {
		return *x.ContentUrl
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetCoverImgUrl() string {
	if x != nil && x.CoverImgUrl != nil {
		return *x.CoverImgUrl
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetCoverImgUrl11() string {
	if x != nil && x.CoverImgUrl11 != nil {
		return *x.CoverImgUrl11
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetCoverImgUrl2351() string {
	if x != nil && x.CoverImgUrl2351 != nil {
		return *x.CoverImgUrl2351
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetItemShowType() uint32 {
	if x != nil && x.ItemShowType != nil {
		return *x.ItemShowType
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetCreateTime() uint32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetVideoInfo() *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetVoiceInfo() *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg {
	if x != nil {
		return x.VoiceInfo
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg) GetPictureInfo() *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg {
	if x != nil {
		return x.PictureInfo
	}
	return nil
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName     *string `protobuf:"bytes,1,opt,name=userName" json:"userName,omitempty"`
	NickName     *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	BrandIconUrl *string `protobuf:"bytes,3,opt,name=brandIconUrl" json:"brandIconUrl,omitempty"`
	Signature    *string `protobuf:"bytes,4,opt,name=signature" json:"signature,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) GetBrandIconUrl() string {
	if x != nil && x.BrandIconUrl != nil {
		return *x.BrandIconUrl
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wording                 *string `protobuf:"bytes,1,opt,name=wording" json:"wording,omitempty"`
	TextColor               *string `protobuf:"bytes,2,opt,name=textColor" json:"textColor,omitempty"`
	BackgroundColor         *string `protobuf:"bytes,3,opt,name=backgroundColor" json:"backgroundColor,omitempty"`
	DarkModeTextColor       *string `protobuf:"bytes,4,opt,name=darkModeTextColor" json:"darkModeTextColor,omitempty"`
	DarkModeBackgroundColor *string `protobuf:"bytes,5,opt,name=darkModeBackgroundColor" json:"darkModeBackgroundColor,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{10}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) GetTextColor() string {
	if x != nil && x.TextColor != nil {
		return *x.TextColor
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) GetBackgroundColor() string {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) GetDarkModeTextColor() string {
	if x != nil && x.DarkModeTextColor != nil {
		return *x.DarkModeTextColor
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg) GetDarkModeBackgroundColor() string {
	if x != nil && x.DarkModeBackgroundColor != nil {
		return *x.DarkModeBackgroundColor
	}
	return ""
}

type GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizInfo          *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo `protobuf:"bytes,1,opt,name=bizInfo" json:"bizInfo,omitempty"`
	ItemInfo         *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg     `protobuf:"bytes,2,opt,name=itemInfo" json:"itemInfo,omitempty"`
	RecInfo          *string                                                              `protobuf:"bytes,3,opt,name=recInfo" json:"recInfo,omitempty"`
	AggregationTitle *string                                                              `protobuf:"bytes,4,opt,name=aggregationTitle" json:"aggregationTitle,omitempty"`
	AggregationUrl   *string                                                              `protobuf:"bytes,5,opt,name=aggregationUrl" json:"aggregationUrl,omitempty"`
	RecommendWording *string                                                              `protobuf:"bytes,6,opt,name=recommendWording" json:"recommendWording,omitempty"`
	StyleFlag        *uint32                                                              `protobuf:"varint,7,opt,name=styleFlag" json:"styleFlag,omitempty"`
	RecommendTag     *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg              `protobuf:"bytes,8,opt,name=recommendTag" json:"recommendTag,omitempty"`
	IconType         *uint32                                                              `protobuf:"varint,9,opt,name=iconType" json:"iconType,omitempty"`
	CanvasBuffer     *string                                                              `protobuf:"bytes,10,opt,name=canvasBuffer" json:"canvasBuffer,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{11}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetBizInfo() *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo {
	if x != nil {
		return x.BizInfo
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetItemInfo() *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetRecInfo() string {
	if x != nil && x.RecInfo != nil {
		return *x.RecInfo
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetAggregationTitle() string {
	if x != nil && x.AggregationTitle != nil {
		return *x.AggregationTitle
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetAggregationUrl() string {
	if x != nil && x.AggregationUrl != nil {
		return *x.AggregationUrl
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetRecommendWording() string {
	if x != nil && x.RecommendWording != nil {
		return *x.RecommendWording
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetStyleFlag() uint32 {
	if x != nil && x.StyleFlag != nil {
		return *x.StyleFlag
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetRecommendTag() *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg {
	if x != nil {
		return x.RecommendTag
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetIconType() uint32 {
	if x != nil && x.IconType != nil {
		return *x.IconType
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg) GetCanvasBuffer() string {
	if x != nil && x.CanvasBuffer != nil {
		return *x.CanvasBuffer
	}
	return ""
}

type GetRecommendFeedsResp_RecommendCardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraData              *string                                                    `protobuf:"bytes,1,opt,name=extraData" json:"extraData,omitempty"`
	RecommendItem          []*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg `protobuf:"bytes,2,rep,name=recommendItem" json:"recommendItem,omitempty"`
	Style                  *uint32                                                    `protobuf:"varint,3,opt,name=style" json:"style,omitempty"`
	StyleFlag              *uint32                                                    `protobuf:"varint,4,opt,name=styleFlag" json:"styleFlag,omitempty"`
	CardId                 *string                                                    `protobuf:"bytes,5,opt,name=cardId" json:"cardId,omitempty"`
	NegativeFeedbackReason []string                                                   `protobuf:"bytes,6,rep,name=negativeFeedbackReason" json:"negativeFeedbackReason,omitempty"`
	AggregationTitle       *string                                                    `protobuf:"bytes,7,opt,name=aggregationTitle" json:"aggregationTitle,omitempty"`
	AggregationUrl         *string                                                    `protobuf:"bytes,8,opt,name=aggregationUrl" json:"aggregationUrl,omitempty"`
	RecommendWording       *string                                                    `protobuf:"bytes,9,opt,name=recommendWording" json:"recommendWording,omitempty"`
	RecommendTag           *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg    `protobuf:"bytes,10,opt,name=recommendTag" json:"recommendTag,omitempty"`
	IconType               *uint32                                                    `protobuf:"varint,11,opt,name=iconType" json:"iconType,omitempty"`
	FriendSeenHeadImgUrl   []string                                                   `protobuf:"bytes,12,rep,name=friendSeenHeadImgUrl" json:"friendSeenHeadImgUrl,omitempty"`
	CanvasBuffer           *string                                                    `protobuf:"bytes,13,opt,name=canvasBuffer" json:"canvasBuffer,omitempty"`
	SeparateStyle          *uint32                                                    `protobuf:"varint,14,opt,name=separateStyle" json:"separateStyle,omitempty"`
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) Reset() {
	*x = GetRecommendFeedsResp_RecommendCardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp_RecommendCardMsg) ProtoMessage() {}

func (x *GetRecommendFeedsResp_RecommendCardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp_RecommendCardMsg.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp_RecommendCardMsg) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{12}
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetExtraData() string {
	if x != nil && x.ExtraData != nil {
		return *x.ExtraData
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetRecommendItem() []*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg {
	if x != nil {
		return x.RecommendItem
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetStyle() uint32 {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetStyleFlag() uint32 {
	if x != nil && x.StyleFlag != nil {
		return *x.StyleFlag
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetCardId() string {
	if x != nil && x.CardId != nil {
		return *x.CardId
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetNegativeFeedbackReason() []string {
	if x != nil {
		return x.NegativeFeedbackReason
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetAggregationTitle() string {
	if x != nil && x.AggregationTitle != nil {
		return *x.AggregationTitle
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetAggregationUrl() string {
	if x != nil && x.AggregationUrl != nil {
		return *x.AggregationUrl
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetRecommendWording() string {
	if x != nil && x.RecommendWording != nil {
		return *x.RecommendWording
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetRecommendTag() *GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg {
	if x != nil {
		return x.RecommendTag
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetIconType() uint32 {
	if x != nil && x.IconType != nil {
		return *x.IconType
	}
	return 0
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetFriendSeenHeadImgUrl() []string {
	if x != nil {
		return x.FriendSeenHeadImgUrl
	}
	return nil
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetCanvasBuffer() string {
	if x != nil && x.CanvasBuffer != nil {
		return *x.CanvasBuffer
	}
	return ""
}

func (x *GetRecommendFeedsResp_RecommendCardMsg) GetSeparateStyle() uint32 {
	if x != nil && x.SeparateStyle != nil {
		return *x.SeparateStyle
	}
	return 0
}

type GetRecommendFeedsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse          *BaseResponse                               `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	RecommendCard         []*GetRecommendFeedsResp_RecommendCardMsg   `protobuf:"bytes,2,rep,name=recommendCard" json:"recommendCard,omitempty"`
	Config                *GetRecommendFeedsResp_RecommendFeedsConfig `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
	RecommendFeedsWording *string                                     `protobuf:"bytes,4,opt,name=recommendFeedsWording" json:"recommendFeedsWording,omitempty"`
	Buffer                []byte                                      `protobuf:"bytes,5,opt,name=buffer" json:"buffer,omitempty"`
}

func (x *GetRecommendFeedsResp) Reset() {
	*x = GetRecommendFeedsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendFeedsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendFeedsResp) ProtoMessage() {}

func (x *GetRecommendFeedsResp) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendFeedsResp.ProtoReflect.Descriptor instead.
func (*GetRecommendFeedsResp) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{13}
}

func (x *GetRecommendFeedsResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetRecommendFeedsResp) GetRecommendCard() []*GetRecommendFeedsResp_RecommendCardMsg {
	if x != nil {
		return x.RecommendCard
	}
	return nil
}

func (x *GetRecommendFeedsResp) GetConfig() *GetRecommendFeedsResp_RecommendFeedsConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetRecommendFeedsResp) GetRecommendFeedsWording() string {
	if x != nil && x.RecommendFeedsWording != nil {
		return *x.RecommendFeedsWording
	}
	return ""
}

func (x *GetRecommendFeedsResp) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type PrepareWecoinRechargeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest       *BaseRequest `protobuf:"bytes,1,req,name=baseRequest" json:"baseRequest,omitempty"`
	RequestId         *string      `protobuf:"bytes,2,opt,name=requestId" json:"requestId,omitempty"`
	RechargeProductId *string      `protobuf:"bytes,3,opt,name=rechargeProductId" json:"rechargeProductId,omitempty"`
	AgreementVersion  *uint32      `protobuf:"varint,4,opt,name=agreementVersion" json:"agreementVersion,omitempty"`
	Scene             *uint32      `protobuf:"varint,100,opt,name=scene" json:"scene,omitempty"`
	ReportSessionId   *string      `protobuf:"bytes,101,opt,name=reportSessionId" json:"reportSessionId,omitempty"`
}

func (x *PrepareWecoinRechargeRequest) Reset() {
	*x = PrepareWecoinRechargeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareWecoinRechargeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareWecoinRechargeRequest) ProtoMessage() {}

func (x *PrepareWecoinRechargeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareWecoinRechargeRequest.ProtoReflect.Descriptor instead.
func (*PrepareWecoinRechargeRequest) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{14}
}

func (x *PrepareWecoinRechargeRequest) GetBaseRequest() *BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *PrepareWecoinRechargeRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *PrepareWecoinRechargeRequest) GetRechargeProductId() string {
	if x != nil && x.RechargeProductId != nil {
		return *x.RechargeProductId
	}
	return ""
}

func (x *PrepareWecoinRechargeRequest) GetAgreementVersion() uint32 {
	if x != nil && x.AgreementVersion != nil {
		return *x.AgreementVersion
	}
	return 0
}

func (x *PrepareWecoinRechargeRequest) GetScene() uint32 {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return 0
}

func (x *PrepareWecoinRechargeRequest) GetReportSessionId() string {
	if x != nil && x.ReportSessionId != nil {
		return *x.ReportSessionId
	}
	return ""
}

type PopUpJumpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wording  *string `protobuf:"bytes,1,opt,name=wording" json:"wording,omitempty"`
	Action   *uint32 `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
	Url      *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Username *string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Pagepath *string `protobuf:"bytes,5,opt,name=pagepath" json:"pagepath,omitempty"`
}

func (x *PopUpJumpInfo) Reset() {
	*x = PopUpJumpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopUpJumpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopUpJumpInfo) ProtoMessage() {}

func (x *PopUpJumpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopUpJumpInfo.ProtoReflect.Descriptor instead.
func (*PopUpJumpInfo) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{15}
}

func (x *PopUpJumpInfo) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *PopUpJumpInfo) GetAction() uint32 {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return 0
}

func (x *PopUpJumpInfo) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *PopUpJumpInfo) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *PopUpJumpInfo) GetPagepath() string {
	if x != nil && x.Pagepath != nil {
		return *x.Pagepath
	}
	return ""
}

type InterceptPopUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wording     *string        `protobuf:"bytes,1,opt,name=wording" json:"wording,omitempty"`
	LeftButton  *PopUpJumpInfo `protobuf:"bytes,2,opt,name=leftButton" json:"leftButton,omitempty"`
	RightButton *PopUpJumpInfo `protobuf:"bytes,3,opt,name=rightButton" json:"rightButton,omitempty"`
	PopUpType   *uint32        `protobuf:"varint,4,opt,name=popUpType" json:"popUpType,omitempty"`
}

func (x *InterceptPopUp) Reset() {
	*x = InterceptPopUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterceptPopUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterceptPopUp) ProtoMessage() {}

func (x *InterceptPopUp) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterceptPopUp.ProtoReflect.Descriptor instead.
func (*InterceptPopUp) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{16}
}

func (x *InterceptPopUp) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *InterceptPopUp) GetLeftButton() *PopUpJumpInfo {
	if x != nil {
		return x.LeftButton
	}
	return nil
}

func (x *InterceptPopUp) GetRightButton() *PopUpJumpInfo {
	if x != nil {
		return x.RightButton
	}
	return nil
}

func (x *InterceptPopUp) GetPopUpType() uint32 {
	if x != nil && x.PopUpType != nil {
		return *x.PopUpType
	}
	return 0
}

type PrepareWecoinRechargeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse  *BaseResponse   `protobuf:"bytes,1,req,name=baseResponse" json:"baseResponse,omitempty"`
	SdkInfo       *MidasSdkInfo   `protobuf:"bytes,2,opt,name=sdkInfo" json:"sdkInfo,omitempty"`
	BillNo        *string         `protobuf:"bytes,3,opt,name=billNo" json:"billNo,omitempty"`
	UrlParams     *string         `protobuf:"bytes,4,opt,name=urlParams" json:"urlParams,omitempty"`
	SaveValue     *string         `protobuf:"bytes,5,opt,name=saveValue" json:"saveValue,omitempty"`
	InterceptInfo *InterceptPopUp `protobuf:"bytes,100,opt,name=interceptInfo" json:"interceptInfo,omitempty"`
}

func (x *PrepareWecoinRechargeResponse) Reset() {
	*x = PrepareWecoinRechargeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feeds_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareWecoinRechargeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareWecoinRechargeResponse) ProtoMessage() {}

func (x *PrepareWecoinRechargeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Feeds_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareWecoinRechargeResponse.ProtoReflect.Descriptor instead.
func (*PrepareWecoinRechargeResponse) Descriptor() ([]byte, []int) {
	return file_Feeds_proto_rawDescGZIP(), []int{17}
}

func (x *PrepareWecoinRechargeResponse) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *PrepareWecoinRechargeResponse) GetSdkInfo() *MidasSdkInfo {
	if x != nil {
		return x.SdkInfo
	}
	return nil
}

func (x *PrepareWecoinRechargeResponse) GetBillNo() string {
	if x != nil && x.BillNo != nil {
		return *x.BillNo
	}
	return ""
}

func (x *PrepareWecoinRechargeResponse) GetUrlParams() string {
	if x != nil && x.UrlParams != nil {
		return *x.UrlParams
	}
	return ""
}

func (x *PrepareWecoinRechargeResponse) GetSaveValue() string {
	if x != nil && x.SaveValue != nil {
		return *x.SaveValue
	}
	return ""
}

func (x *PrepareWecoinRechargeResponse) GetInterceptInfo() *InterceptPopUp {
	if x != nil {
		return x.InterceptInfo
	}
	return nil
}

var File_Feeds_proto protoreflect.FileDescriptor

var file_Feeds_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x55, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x22, 0xa5, 0x01, 0x0a, 0x2b, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x5f,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x16, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xbd, 0x01, 0x0a, 0x19, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x2a, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x84, 0x01, 0x0a, 0x4a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x94, 0x01, 0x0a, 0x48, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x4d, 0x73, 0x67, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf2,
	0x01, 0x0a, 0x48, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x4d,
	0x73, 0x67, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x58, 0x6d, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x58, 0x6d, 0x6c, 0x22, 0x86, 0x05, 0x0a, 0x3f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f,
	0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d,
	0x67, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x31, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x31, 0x31, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x32, 0x33, 0x35, 0x31,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67,
	0x55, 0x72, 0x6c, 0x32, 0x33, 0x35, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67,
	0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x67, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67,
	0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73,
	0x67, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6d, 0x0a,
	0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbf, 0x01, 0x0a,
	0x43, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x42, 0x69, 0x7a, 0x41, 0x63, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x82,
	0x02, 0x0a, 0x36, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x64,
	0x61, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x61, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x61, 0x72,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x64, 0x61, 0x72, 0x6b,
	0x4d, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0xcc, 0x04, 0x0a, 0x37, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12,
	0x5e, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x42, 0x69, 0x7a, 0x41, 0x63,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x5c, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x49, 0x74, 0x65, 0x6d,
	0x4d, 0x73, 0x67, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x5b, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x54, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x61,
	0x67, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54,
	0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x22, 0xa1, 0x05, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x5b, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x5f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x4d, 0x73, 0x67, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x53, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65,
	0x65, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x86, 0x02, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x57, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8b,
	0x01, 0x0a, 0x0d, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x4a, 0x75, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x70, 0x61, 0x74, 0x68, 0x22, 0xaa, 0x01, 0x0a,
	0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x66,
	0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x50, 0x6f, 0x70, 0x55, 0x70, 0x4a, 0x75, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6c,
	0x65, 0x66, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0b, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x4a, 0x75, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x6f, 0x70, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x6f, 0x70, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x1d, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x57, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x07, 0x73, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x4d, 0x69, 0x64, 0x61, 0x73, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x73, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x4e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x50, 0x6f,
	0x70, 0x55, 0x70, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x73, 0x67,
}

var (
	file_Feeds_proto_rawDescOnce sync.Once
	file_Feeds_proto_rawDescData = file_Feeds_proto_rawDesc
)

func file_Feeds_proto_rawDescGZIP() []byte {
	file_Feeds_proto_rawDescOnce.Do(func() {
		file_Feeds_proto_rawDescData = protoimpl.X.CompressGZIP(file_Feeds_proto_rawDescData)
	})
	return file_Feeds_proto_rawDescData
}

var file_Feeds_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_Feeds_proto_goTypes = []interface{}{
	(*RecommendFeedsContext)(nil),                                                      // 0: RecommendFeedsContext
	(*GetRecommendFeedsReq)(nil),                                                       // 1: GetRecommendFeedsReq
	(*RecommendFeedsFeedbackReq_RecommendCardLite)(nil),                                // 2: RecommendFeedsFeedbackReq_RecommendCardLite
	(*RecommendFeedsFeedbackReq)(nil),                                                  // 3: RecommendFeedsFeedbackReq
	(*GetRecommendFeedsResp_RecommendFeedsConfig)(nil),                                 // 4: GetRecommendFeedsResp_RecommendFeedsConfig
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg)(nil), // 5: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg)(nil),   // 6: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg)(nil),   // 7: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg)(nil),            // 8: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo)(nil),        // 9: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg)(nil),                     // 10: GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg
	(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg)(nil),                    // 11: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg
	(*GetRecommendFeedsResp_RecommendCardMsg)(nil),                                     // 12: GetRecommendFeedsResp_RecommendCardMsg
	(*GetRecommendFeedsResp)(nil),                                                      // 13: GetRecommendFeedsResp
	(*PrepareWecoinRechargeRequest)(nil),                                               // 14: PrepareWecoinRechargeRequest
	(*PopUpJumpInfo)(nil),                                                              // 15: PopUpJumpInfo
	(*InterceptPopUp)(nil),                                                             // 16: InterceptPopUp
	(*PrepareWecoinRechargeResponse)(nil),                                              // 17: PrepareWecoinRechargeResponse
	(*BaseRequest)(nil),                                                                // 18: BaseRequest
	(*BaseResponse)(nil),                                                               // 19: BaseResponse
	(*MidasSdkInfo)(nil),                                                               // 20: MidasSdkInfo
}
var file_Feeds_proto_depIdxs = []int32{
	18, // 0: GetRecommendFeedsReq.baseRequest:type_name -> BaseRequest
	0,  // 1: GetRecommendFeedsReq.context:type_name -> RecommendFeedsContext
	18, // 2: RecommendFeedsFeedbackReq.baseRequest:type_name -> BaseRequest
	2,  // 3: RecommendFeedsFeedbackReq.recommendCard:type_name -> RecommendFeedsFeedbackReq_RecommendCardLite
	7,  // 4: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg.videoInfo:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg
	6,  // 5: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg.voiceInfo:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg
	5,  // 6: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg.pictureInfo:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg
	9,  // 7: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg.bizInfo:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo
	8,  // 8: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg.itemInfo:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg
	10, // 9: GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg.recommendTag:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg
	11, // 10: GetRecommendFeedsResp_RecommendCardMsg.recommendItem:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg
	10, // 11: GetRecommendFeedsResp_RecommendCardMsg.recommendTag:type_name -> GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg
	19, // 12: GetRecommendFeedsResp.baseResponse:type_name -> BaseResponse
	12, // 13: GetRecommendFeedsResp.recommendCard:type_name -> GetRecommendFeedsResp_RecommendCardMsg
	4,  // 14: GetRecommendFeedsResp.config:type_name -> GetRecommendFeedsResp_RecommendFeedsConfig
	18, // 15: PrepareWecoinRechargeRequest.baseRequest:type_name -> BaseRequest
	15, // 16: InterceptPopUp.leftButton:type_name -> PopUpJumpInfo
	15, // 17: InterceptPopUp.rightButton:type_name -> PopUpJumpInfo
	19, // 18: PrepareWecoinRechargeResponse.baseResponse:type_name -> BaseResponse
	20, // 19: PrepareWecoinRechargeResponse.sdkInfo:type_name -> MidasSdkInfo
	16, // 20: PrepareWecoinRechargeResponse.interceptInfo:type_name -> InterceptPopUp
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_Feeds_proto_init() }
func file_Feeds_proto_init() {
	if File_Feeds_proto != nil {
		return
	}
	file_MicroMsgBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Feeds_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendFeedsContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendFeedsFeedbackReq_RecommendCardLite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendFeedsFeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendFeedsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_PictureMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VoiceMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg_VideoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_ItemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg_BizAcctInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendTagMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg_RecommendItemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp_RecommendCardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendFeedsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareWecoinRechargeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopUpJumpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterceptPopUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feeds_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareWecoinRechargeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Feeds_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Feeds_proto_goTypes,
		DependencyIndexes: file_Feeds_proto_depIdxs,
		MessageInfos:      file_Feeds_proto_msgTypes,
	}.Build()
	File_Feeds_proto = out.File
	file_Feeds_proto_rawDesc = nil
	file_Feeds_proto_goTypes = nil
	file_Feeds_proto_depIdxs = nil
}
